{"version":3,"sources":["assets/img/John-Doe.jpg","_helpers/fake-backend.js","data/actionTypes.ts","_helpers/createReducer.ts","store/users/mutations.ts","store/_reducers/authentication.reducer.ts","store/_reducers/activity.reducer.ts","store/activities/mutations.ts","store/_reducers/user.reducer.ts","store/_reducers/goal.reducer.ts","store/goals/mutations.ts","store/_reducers/index.ts","_helpers/store.ts","_helpers/auth-header.js","data/routes.ts","store/api.js","store/activities/actions.ts","_services/user.service.js","store/users/actions.ts","layouts/LoginLayout.tsx","data/featherIcons.js","components/UI/Menu.tsx","hooks/useTheme.ts","hooks/usePrimaryColor.ts","layouts/MainLayout.tsx","components/UI/AppRoute.tsx","hooks/useFormFields.js","components/UI/Input.tsx","components/Login.tsx","data/headerData.ts","hooks/useDivider.ts","components/UI/Header.tsx","components/Activities/List.tsx","components/UI/Divider.tsx","hooks/useTypedDispatch.ts","data/tools.js","components/Activities/SideView.tsx","components/Activities/NewSideView.tsx","components/Activities.tsx","components/UI/List.tsx","components/Users/SideView.tsx","components/Users/NewSideView.tsx","components/Users.tsx","data/goal.ts","components/Goals/SideView.tsx","store/goals/actions.ts","components/Goals/NewSideView.tsx","components/Goals.tsx","components/UsersOld.tsx","components/Profile.tsx","serviceWorker.ts","index.tsx","components/UI/PrivateRoute.tsx"],"names":["module","exports","users","JSON","parse","localStorage","getItem","ActionTypes","createReducer","initialState","handlers","state","action","type","payload","user","authenticationReducer","loggingIn","error","undefined","LOGIN_REQUEST","data","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","LOGOUT_SUCCESS","LOGOUT_FAILURE","activityReducer","activities","id","title","body","time","blocks","text","level","style","items","file","url","caption","withBorder","stretched","withBackground","version","date","Date","userId","GET_ACTIVITIES_SUCCESS","newActivity","concat","GET_ACTIVITIES_FAILURE","ADD_ACTIVITY","EDIT_ACTIVITY","updatedItems","map","activity","REMOVE_ACTIVITY","console","log","filter","GET_ACTIVITY_BY_ID","userReducer","loading","deleting","registering","editing","REGISTER_REQUEST","REGISTER_SUCCESS","newUsers","REGISTER_FAILURE","GET_USERS_REQUEST","GET_USERS_SUCCESS","GET_USERS_FAILURE","EDIT_USER_REQUEST","EDIT_USER_SUCCESS","EDIT_USER_FAILURE","REMOVE_USER_REQUEST","REMOVE_USER_SUCCESS","REMOVE_USER_FAILURE","goalReducer","goals","color","assignedTo","achievedBy","activityIds","createdAt","updatedAt","achievedAt","GET_GOALS_SUCCESS","newGoal","GET_GOALS_FAILURE","ADD_GOAL","EDIT_GOAL","goal","REMOVE_GOAL","GET_GOAL_BY_ID","rootReducer","combineReducers","useTypedSelector","useSelector","actionTypeEnumToString","logger","createLogger","actionTransformer","composeEnhancers","composeWithDevTools","actionSanitizer","store","createStore","applyMiddleware","thunkMiddleware","authHeader","token","Authorization","routes","axios","create","baseURL","fetchActivitiesRequest","a","API","get","response","dispatch","fetchSuccess","fetchError","userService","login","email","password","requestOptions","method","headers","stringify","fetch","then","handleResponse","setItem","logout","register","getAll","getById","update","delete","removeItem","ok","status","message","statusText","Promise","reject","registerRequest","registerSuccess","registerFailure","history","loginRequest","loginSuccess","push","loginFailure","logoutSuccess","logoutFailure","getUsers","getUsersRequest","getUsersSuccess","getUsersFailure","editUser","editUserRequest","editUserSuccess","editUserFailure","deleteUser","deleteUserRequest","deleteUserSuccess","deleteUserFailure","LoginLayout","props","className","children","menuIcons","loginIcons","headerIcons","listIcons","sideviewIcons","Menu","homeIcon","usersIcon","goalIcon","ActivityIcon","role","exact","to","src","johnDoe","alt","useTheme","useState","theme","setTheme","String","usePrimaryColor","setColor","useEffect","currentColor","getComputedStyle","document","documentElement","getPropertyValue","setProperty","newColor","MainLayout","data-theme","AppRoute","Component","component","Layout","layout","rest","render","useFormFields","fields","setValues","event","target","value","Input","icon","extra","Login","mailIcon","keyIcon","handleFieldChange","setSubmitted","name","onSubmit","e","preventDefault","placeholder","onChange","required","activitiesHeaderData","search","filters","usersHeaderData","goalsHeaderData","useDivider","dividerState","setDividerState","Header","headerData","searchTerm","setNewMode","count","searchIcon","plusIcon","slidersIcon","selectedFilter","setSelectedFilter","onClick","item","index","key","setFilter","List","listItems","selected","setSelected","setSearchResults","listItem","selectItem","size","maxInitials","round","textSizeRatio","Divider","toggleDivider","arrowLeftIcon","arrowRightIcon","useTypedDispatch","useDispatch","EDITOR_JS_TOOLS","list","header","inlineCode","InlineCode","quote","Quote","image","Image","delimiter","Delimiter","SideView","setDeleting","setForm","editMode","setEditMode","editIcon","deleteIcon","lastEdit","setLastEdit","tabMode","setTabMode","editorBody","setEditorBody","editorRef","useRef","initializeEditor","timer","setTimeout","clearTimeout","current","editor","isReady","fromNow","removeActivity","tab","disabled","ref","holder","onData","tools","autofocus","InitialState","Math","floor","random","NewSideView","Activities","searchResults","newMode","results","obj","Object","keys","some","tempKey","toString","toLowerCase","tempSearch","includes","sideView","setSideView","length","job","location","deleteItem","htmlFor","handleSubmit","Admin","colors","selectedColor","setSelectedColor","removeGoal","backgroundColor","Goals","edit","setEdit","inputFields","setInputFields","submitted","handleEditUser","Profile","profile","toggleTheme","changeColor","checked","Boolean","window","hostname","match","realFetch","opts","resolve","endsWith","params","filteredUsers","responseJson","firstName","lastName","urlParts","split","parseInt","matchedUsers","newUser","max","editedUser","updatedUsers","i","splice","configureFakeBackend","ReactDOM","path","Users","UsersOld","Error","pathname","from","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4c72013d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/John-Doe.71da2e9c.jpg\";","// array in local storage for registered users\r\nlet users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n\r\nexport function configureFakeBackend() {\r\n  let realFetch = window.fetch;\r\n  window.fetch = function (url, opts) {\r\n    return new Promise((resolve, reject) => {\r\n      // wrap in timeout to simulate server api call\r\n      setTimeout(() => {\r\n        // authenticate\r\n        if (url.endsWith(\"/users/authenticate\") && opts.method === \"POST\") {\r\n          // get parameters from post request\r\n          let params = JSON.parse(opts.body);\r\n\r\n          // find if any user matches login credentials\r\n          let filteredUsers = users.filter((user) => {\r\n            return (\r\n              user.email === params.email && user.password === params.password\r\n            );\r\n          });\r\n\r\n          if (filteredUsers.length) {\r\n            // if login details are valid return user details and fake jwt token\r\n            let user = filteredUsers[0];\r\n            let responseJson = {\r\n              id: user.id,\r\n              email: user.email,\r\n              firstName: user.firstName,\r\n              lastName: user.lastName,\r\n              token: \"fake-jwt-token\",\r\n            };\r\n            resolve({\r\n              ok: true,\r\n              text: () => Promise.resolve(JSON.stringify(responseJson)),\r\n            });\r\n          } else {\r\n            // else return error\r\n            reject(\"Email or password is incorrect\");\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        // get users\r\n        if (url.endsWith(\"/users\") && opts.method === \"GET\") {\r\n          // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\r\n          if (\r\n            opts.headers &&\r\n            opts.headers.Authorization === \"Bearer fake-jwt-token\"\r\n          ) {\r\n            resolve({\r\n              ok: true,\r\n              text: () => Promise.resolve(JSON.stringify(users)),\r\n            });\r\n          } else {\r\n            // return 401 not authorised if token is null or invalid\r\n            reject(\"Unauthorised\");\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        // get user by id\r\n        if (url.match(/\\/users\\/\\d+$/) && opts.method === \"GET\") {\r\n          // check for fake auth token in header and return user if valid, this security is implemented server side in a real application\r\n          if (\r\n            opts.headers &&\r\n            opts.headers.Authorization === \"Bearer fake-jwt-token\"\r\n          ) {\r\n            // find user by id in users array\r\n            let urlParts = url.split(\"/\");\r\n            let id = parseInt(urlParts[urlParts.length - 1]);\r\n            let matchedUsers = users.filter((user) => {\r\n              return user.id === id;\r\n            });\r\n            let user = matchedUsers.length ? matchedUsers[0] : null;\r\n\r\n            // respond 200 OK with user\r\n            resolve({ ok: true, text: () => JSON.stringify(user) });\r\n          } else {\r\n            // return 401 not authorised if token is null or invalid\r\n            reject(\"Unauthorised\");\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        // register user\r\n        if (url.endsWith(\"/users/register\") && opts.method === \"POST\") {\r\n          // get new user object from post body\r\n          let newUser = JSON.parse(opts.body);\r\n\r\n          // validation\r\n          let duplicateUser = users.filter((user) => {\r\n            return user.email === newUser.email;\r\n          }).length;\r\n          if (duplicateUser) {\r\n            reject('Email \"' + newUser.email + '\" is already taken');\r\n            return;\r\n          }\r\n\r\n          // save new user\r\n          newUser.id = users.length\r\n            ? Math.max(...users.map((user) => user.id)) + 1\r\n            : 1;\r\n          users.push(newUser);\r\n          localStorage.setItem(\"users\", JSON.stringify(users));\r\n\r\n          // respond 200 OK\r\n          resolve({\r\n            ok: true,\r\n            text: () => Promise.resolve(JSON.stringify(newUser)),\r\n          });\r\n\r\n          return;\r\n        }\r\n\r\n        // edit user\r\n        if (url.match(/\\/users\\/\\d+$/) && opts.method === \"PUT\") {\r\n          // get edited user object from post body\r\n          let editedUser = JSON.parse(opts.body);\r\n\r\n          // validation\r\n          let duplicateUser = users.filter((user) => {\r\n            if (user.id !== editedUser.id) {\r\n              return user.email === editedUser.email;\r\n            }\r\n          }).length;\r\n          if (duplicateUser) {\r\n            reject('Email \"' + editedUser.email + '\" is already taken');\r\n            return;\r\n          }\r\n\r\n          //save edited user\r\n          let updatedUsers = users.map((user) => {\r\n            if (user.id === editedUser.id) {\r\n              return { ...user, ...editedUser };\r\n            }\r\n            return user;\r\n          });\r\n          users = updatedUsers;\r\n          localStorage.setItem(\"users\", JSON.stringify(users));\r\n\r\n          // respond 200 OK\r\n          resolve({\r\n            ok: true,\r\n            text: () => Promise.resolve(JSON.stringify(users)),\r\n          });\r\n\r\n          return;\r\n        }\r\n\r\n        // delete user\r\n        if (url.match(/\\/users\\/\\d+$/) && opts.method === \"DELETE\") {\r\n          // check for fake auth token in header and return user if valid, this security is implemented server side in a real application\r\n          if (\r\n            opts.headers &&\r\n            opts.headers.Authorization === \"Bearer fake-jwt-token\"\r\n          ) {\r\n            // find user by id in users array\r\n            let urlParts = url.split(\"/\");\r\n            let id = parseInt(urlParts[urlParts.length - 1]);\r\n            for (let i = 0; i < users.length; i++) {\r\n              let user = users[i];\r\n              if (user.id === id) {\r\n                // delete user\r\n                users.splice(i, 1);\r\n                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                break;\r\n              }\r\n            }\r\n\r\n            // respond 200 OK\r\n            resolve({ ok: true, text: () => Promise.resolve() });\r\n          } else {\r\n            // return 401 not authorised if token is null or invalid\r\n            reject(\"Unauthorised\");\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        // pass through any requests not handled above\r\n        realFetch(url, opts).then((response) => resolve(response));\r\n      }, 500);\r\n    });\r\n  };\r\n}\r\n","export enum ActionTypes {\r\n  GET_ACTIVITIES_REQUEST,\r\n  GET_ACTIVITIES_SUCCESS,\r\n  GET_ACTIVITIES_FAILURE,\r\n  ADD_ACTIVITY,\r\n  EDIT_ACTIVITY,\r\n  REMOVE_ACTIVITY,\r\n  GET_ACTIVITY_BY_ID,\r\n  REGISTER_REQUEST,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  LOGOUT,\r\n  LOGOUT_SUCCESS,\r\n  LOGOUT_FAILURE,\r\n  GET_USERS_REQUEST,\r\n  GET_USERS_SUCCESS,\r\n  GET_USERS_FAILURE,\r\n  EDIT_USER_REQUEST,\r\n  EDIT_USER_SUCCESS,\r\n  EDIT_USER_FAILURE,\r\n  REMOVE_USER_REQUEST,\r\n  REMOVE_USER_SUCCESS,\r\n  REMOVE_USER_FAILURE,\r\n  GET_GOALS_SUCCESS,\r\n  GET_GOALS_FAILURE,\r\n  ADD_GOAL,\r\n  EDIT_GOAL,\r\n  REMOVE_GOAL,\r\n  GET_GOAL_BY_ID,\r\n}\r\n","import { IAction } from \"store/types\";\r\nimport { Reducer } from \"redux\";\r\n\r\nexport type Mutator<S, P = any> = (state: S, payload: P) => S;\r\nexport interface ReducerHandler<S> {\r\n  [actionType: number]: Mutator<S>;\r\n}\r\nexport default function createReducer<S>(\r\n  initialState: S,\r\n  handlers: ReducerHandler<S>\r\n): Reducer<S> {\r\n  return (state: S = initialState, action: IAction): S => {\r\n    if (handlers[action.type]) {\r\n      return handlers[action.type](state, action.payload);\r\n    }\r\n    return state;\r\n  };\r\n}\r\n","import { Mutator } from \"_helpers/createReducer\";\r\nimport { IUserState } from \"store/_reducers/user.reducer\";\r\nimport { ILoginState } from \"store/_reducers/authentication.reducer\";\r\nimport { IUser } from \"data/user\";\r\n\r\ntype LoginMutator<P = any> = Mutator<ILoginState, P>;\r\ntype UserMutator<P = any> = Mutator<IUserState, P>;\r\n\r\nexport const loginRequest: LoginMutator<any> = (state, data) => {\r\n  return {\r\n    loggingIn: true,\r\n    user: data\r\n  };\r\n};\r\n\r\nexport const loginSuccess: LoginMutator<any> = (state, data) => {\r\n  return {\r\n    ...state,\r\n    user: data,\r\n    loggingIn: false\r\n  };\r\n};\r\n\r\nexport const loginFailure: LoginMutator<Error> = (state, error) => {\r\n  return {\r\n    ...state,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const logout: LoginMutator = state => {\r\n  return {\r\n    ...state,\r\n    loggingIn: false\r\n  };\r\n};\r\n\r\nexport const logoutSuccess: LoginMutator = state => {\r\n  return {\r\n    ...state\r\n  };\r\n};\r\n\r\nexport const logoutFailure: LoginMutator<Error> = (state, error) => {\r\n  return {\r\n    ...state,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const registerRequest: UserMutator<any> = (state, data) => {\r\n  return {\r\n    ...state,\r\n    registering: data\r\n  };\r\n};\r\n\r\nexport const registersuccess: UserMutator<IUser> = (state, data) => {\r\n  const newUsers = state.users.concat(data);\r\n  return {\r\n    ...state,\r\n    users: newUsers,\r\n    registering: false\r\n  };\r\n};\r\n\r\nexport const registerFailure: UserMutator<Error> = (state, error) => {\r\n  return {\r\n    ...state,\r\n    error: error,\r\n    registering: false\r\n  };\r\n};\r\n\r\nexport const getUsersRequest: UserMutator<IUserState> = state => {\r\n  return {\r\n    ...state,\r\n    loading: true\r\n  };\r\n};\r\n\r\nexport const getUsersSuccess: UserMutator = (state, data) => {\r\n  return {\r\n    ...state,\r\n    users: data,\r\n    loading: false\r\n  };\r\n};\r\n\r\nexport const getUsersFailure: UserMutator<Error> = (state, error) => {\r\n  return {\r\n    ...state,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const editUserRequest: UserMutator<Boolean> = (state, editing) => {\r\n  return { ...state, editing };\r\n};\r\n\r\nexport const editUserSuccess: UserMutator<IUser> = (state, data) => {\r\n  const updatedItems = state.users.map(user => {\r\n    if (user.id === data.id) {\r\n      return { ...user, ...data };\r\n    }\r\n    return user;\r\n  });\r\n  return { ...state, users: updatedItems, editing: false };\r\n};\r\n\r\nexport const editUserFailure: UserMutator<Error> = (state, error) => {\r\n  return {\r\n    ...state,\r\n    error: error,\r\n    editing: false\r\n  };\r\n};\r\n\r\nexport const deleteUserRequest: UserMutator<Boolean> = state => {\r\n  return {\r\n    ...state,\r\n    deleting: true\r\n  };\r\n};\r\n\r\nexport const deleteUserSuccess: UserMutator<number> = (state, id) => {\r\n  return {\r\n    ...state,\r\n    deleting: false,\r\n    users: state.users.filter(user => user.id !== id)\r\n  };\r\n};\r\n\r\nexport const deleteUserFailure: UserMutator<Error> = (state, error) => {\r\n  return {\r\n    ...state,\r\n    error: error\r\n  };\r\n};\r\n","import createReducer, { ReducerHandler } from \"_helpers/createReducer\";\r\nimport { IUser } from \"data/user\";\r\nimport { ActionTypes } from \"data/actionTypes\";\r\nimport * as mutators from \"../users/mutations\";\r\n\r\nexport interface ILoginState {\r\n  user: IUser;\r\n  loggingIn: boolean;\r\n  error?: Error;\r\n}\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\") || \"{}\");\r\n\r\nconst initialState: ILoginState = {\r\n  user: user ? user : {},\r\n  loggingIn: false,\r\n  error: undefined\r\n};\r\n\r\nconst handlers: ReducerHandler<ILoginState> = {\r\n  [ActionTypes.LOGIN_REQUEST]: mutators.loginRequest,\r\n  [ActionTypes.LOGIN_SUCCESS]: mutators.loginSuccess,\r\n  [ActionTypes.LOGIN_FAILURE]: mutators.loginFailure,\r\n  [ActionTypes.LOGOUT]: mutators.logout,\r\n  [ActionTypes.LOGOUT_SUCCESS]: mutators.logoutSuccess,\r\n  [ActionTypes.LOGOUT_FAILURE]: mutators.logoutFailure\r\n};\r\n\r\nexport const authenticationReducer = createReducer<ILoginState>(\r\n  initialState,\r\n  handlers\r\n);\r\n","import createReducer, { ReducerHandler } from \"_helpers/createReducer\";\r\nimport { IActivity } from \"data/activity\";\r\nimport { ActionTypes } from \"data/actionTypes\";\r\nimport * as mutators from \"../activities/mutations\";\r\n\r\nexport interface IActivitiesState {\r\n  activities: IActivity[];\r\n  error?: Error;\r\n}\r\nconst initialState: IActivitiesState = {\r\n  activities: [\r\n    {\r\n      id: 484937,\r\n      title: \"Editor.Js\",\r\n      body: {\r\n        time: 1569611146631,\r\n        blocks: [\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text:\r\n                \"Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.\",\r\n            },\r\n          },\r\n          {\r\n            type: \"header\",\r\n            data: {\r\n              text: \"Key features\",\r\n              level: 3,\r\n            },\r\n          },\r\n          {\r\n            type: \"list\",\r\n            data: {\r\n              style: \"unordered\",\r\n              items: [\r\n                \"It is a block-styled editor\",\r\n                \"It returns clean data output in JSON\",\r\n                \"Designed to be extendable and pluggable with a simple API\",\r\n              ],\r\n            },\r\n          },\r\n          {\r\n            type: \"header\",\r\n            data: {\r\n              text: \"What does it mean «block-styled editor»\",\r\n              level: 3,\r\n            },\r\n          },\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text:\r\n                'Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor\\'s Core.',\r\n            },\r\n          },\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text:\r\n                'There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games.',\r\n            },\r\n          },\r\n          {\r\n            type: \"header\",\r\n            data: {\r\n              text: \"What does it mean clean data output\",\r\n              level: 3,\r\n            },\r\n          },\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text:\r\n                \"Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below\",\r\n            },\r\n          },\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text:\r\n                'Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on.',\r\n            },\r\n          },\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text:\r\n                \"Clean data is useful to sanitize, validate and process on the backend.\",\r\n            },\r\n          },\r\n          {\r\n            type: \"delimiter\",\r\n            data: {},\r\n          },\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text:\r\n                \"We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it's core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. 😏\",\r\n            },\r\n          },\r\n          {\r\n            type: \"image\",\r\n            data: {\r\n              file: {\r\n                url: \"https://codex.so/public/app/img/external/codex2x.png\",\r\n              },\r\n              caption: \"\",\r\n              withBorder: false,\r\n              stretched: false,\r\n              withBackground: false,\r\n            },\r\n          },\r\n        ],\r\n        version: \"2.15.0\",\r\n      },\r\n      date: new Date(),\r\n      userId: 342,\r\n    },\r\n    {\r\n      id: 484938,\r\n      title: \"Data visualiseren met React.js\",\r\n      body: {\r\n        time: 1591103945586,\r\n        blocks: [\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text:\r\n                \"Je hebt nu een API ontwikkeld d.m.v. Laravel, met hierin een aantal endpoints:\",\r\n            },\r\n          },\r\n          {\r\n            type: \"list\",\r\n            data: {\r\n              style: \"unordered\",\r\n              items: [\r\n                \"/api/goals\",\r\n                \"/api/goals/{id}/activities\",\r\n                \"/api/activities/{id}\",\r\n              ],\r\n            },\r\n          },\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text:\r\n                \"Je gaat nu zien hoe je deze API kunt gebruiken om data te visualiseren met React.js. Het doel is om een front-end te bouwen waar je de verschillende leerdoelen ophaalt via een HTTP-request. Deze verschillende leerdoelen die je ontvangt via JSON worden omgezet naar React componenten. Bij het klikken op een leerdoel wordt een nieuwe pagina geopend waar de activiteiten van de leerdoel te zien zijn.\",\r\n            },\r\n          },\r\n          {\r\n            type: \"header\",\r\n            data: {\r\n              text: \"Stappen (in grote lijn)\",\r\n              level: 3,\r\n            },\r\n          },\r\n          {\r\n            type: \"list\",\r\n            data: {\r\n              style: \"unordered\",\r\n              items: [\r\n                \"Volg de tutorial van React.js\",\r\n                \"Gebruik ​https://create-react-app.dev/docs/getting-started​ om een nieuw project op tezetten. (Download eventueel een nieuwe Node JS LTS als je geen npx commandokunt gebruiken - ​https://nodejs.org/en/​)\",\r\n                \"Maak een eigen component.\",\r\n                \"Gebruik van npm-HTTP requests uitvoeren\",\r\n                \"Componenten maken-Routing toevoegen\",\r\n              ],\r\n            },\r\n          },\r\n          {\r\n            type: \"header\",\r\n            data: {\r\n              text: \"Maak een eigen component\",\r\n              level: 3,\r\n            },\r\n          },\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text:\r\n                \"Maak een Counter component. Dit component ontvangt een ‘prop’ voor de initiele waarde1waar de counter moet starten en houdt een eigen ‘state’ vast met het huidige getal. Het2component toont 2 knoppen (een + en - knop) en het getal van de huidige state.Bij het drukken op plus en min wordt het getal verhoogd of verlaagd. Het definieren van een3component doe je door middel van JSX\",\r\n            },\r\n          },\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text:\r\n                \"Refereer naar de documentatie voor meer informatie over de concepten:<br>https://reactjs.org/docs/hello-world.html\",\r\n            },\r\n          },\r\n          {\r\n            type: \"header\",\r\n            data: {\r\n              text: \"Gebruik van npm\",\r\n              level: 3,\r\n            },\r\n          },\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text:\r\n                \"Gebruik npm om een nieuwe package toe te voegen aan jouw project. Dit doe je met npminstall. Voeg ​https://github.com/axios/axios​ toe.\",\r\n            },\r\n          },\r\n          {\r\n            type: \"header\",\r\n            data: {\r\n              text: \"HTTP requests uitvoeren\",\r\n              level: 3,\r\n            },\r\n          },\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text:\r\n                \"Gebruik axios om een request uit te voeren. ​https://github.com/axios/axios#exampleSla de response data op in de state van een component. Loop door de response data (alsdit een array is) om zo verschillende componenten te bouwen.\",\r\n            },\r\n          },\r\n          {\r\n            type: \"header\",\r\n            data: {\r\n              text: \"Componenten maken\",\r\n              level: 3,\r\n            },\r\n          },\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text:\r\n                \"Maak een ‘Goal’ component, die een titel en description prop verwacht. Laat een div zienmet hierin een &lt;h1&gt; met een titel, en een &lt;p&gt; met de description van het leerdoel. Gebruikdit component om data te visualiseren uit de GET request naar de leerdoelen.\",\r\n            },\r\n          },\r\n          {\r\n            type: \"header\",\r\n            data: {\r\n              text: \"Routing toevoegen\",\r\n              level: 3,\r\n            },\r\n          },\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text:\r\n                \"Voeg react-router (​https://reacttraining.com/react-router/web/guides/quick-start​) toe en volgde stappen om verschillende pagina’s te kunnen tonen. Maak uiteindelijk een pagina voor:\",\r\n            },\r\n          },\r\n          {\r\n            type: \"list\",\r\n            data: {\r\n              style: \"unordered\",\r\n              items: [\r\n                \"Overzicht van leerdoelen\",\r\n                \"Detail pagina van leerdoel met hieronder alle activiteiten van het leerdoel\",\r\n              ],\r\n            },\r\n          },\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text:\r\n                \"Voeg in het ‘Goal’ component een Link toe om zo te linken naar de detail-pagina\",\r\n            },\r\n          },\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text: \"Succes! :-) Bij vragen hoor ik het graag!\",\r\n            },\r\n          },\r\n        ],\r\n        version: \"2.17.0\",\r\n      },\r\n      date: new Date(),\r\n      userId: 342,\r\n    },\r\n    {\r\n      id: 484939,\r\n      title: \"Drupal 7 (module) updates\",\r\n      body: {\r\n        time: 1569611146631,\r\n        blocks: [\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text: \"Hello Editor.js\",\r\n            },\r\n          },\r\n        ],\r\n        version: \"2.15.0\",\r\n      },\r\n      date: new Date(),\r\n      userId: 342,\r\n    },\r\n    {\r\n      id: 484940,\r\n      title: \"Drupal 8 (module) updates\",\r\n      body: {\r\n        time: 1569611146631,\r\n        blocks: [\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text: \"Hello Editor.js\",\r\n            },\r\n          },\r\n        ],\r\n        version: \"2.15.0\",\r\n      },\r\n      date: new Date(),\r\n      userId: 342,\r\n    },\r\n    {\r\n      id: 484941,\r\n      title: \"Drupal 8\",\r\n      body: {\r\n        time: 1569611146631,\r\n        blocks: [\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text: \"Hello Editor.js\",\r\n            },\r\n          },\r\n        ],\r\n        version: \"2.15.0\",\r\n      },\r\n      date: new Date(),\r\n      userId: 342,\r\n    },\r\n    {\r\n      id: 484942,\r\n      title: \"Drupal EHBO\",\r\n      body: {\r\n        time: 1569611146631,\r\n        blocks: [\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text: \"Hello Editor.js\",\r\n            },\r\n          },\r\n        ],\r\n        version: \"2.15.0\",\r\n      },\r\n      date: new Date(),\r\n      userId: 342,\r\n    },\r\n    {\r\n      id: 484943,\r\n      title: \"Jira rechten systeem\",\r\n      body: {\r\n        time: 1569611146631,\r\n        blocks: [\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text: \"Hello Editor.js\",\r\n            },\r\n          },\r\n        ],\r\n        version: \"2.15.0\",\r\n      },\r\n      date: new Date(),\r\n      userId: 342,\r\n    },\r\n    {\r\n      id: 484944,\r\n      title: \"Klanten toegang geven tot nog wat\",\r\n      body: {\r\n        time: 1569611146631,\r\n        blocks: [\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text: \"Hello Editor.js\",\r\n            },\r\n          },\r\n        ],\r\n        version: \"2.15.0\",\r\n      },\r\n      date: new Date(),\r\n      userId: 342,\r\n    },\r\n    {\r\n      id: 484945,\r\n      title: \"Issue types\",\r\n      body: {\r\n        time: 1569611146631,\r\n        blocks: [\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text: \"Hello Editor.js\",\r\n            },\r\n          },\r\n        ],\r\n        version: \"2.15.0\",\r\n      },\r\n      date: new Date(),\r\n      userId: 342,\r\n    },\r\n    {\r\n      id: 484946,\r\n      title: \"Jira Project aanmaken\",\r\n      body: {\r\n        time: 1569611146631,\r\n        blocks: [\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text: \"Hello Editor.js\",\r\n            },\r\n          },\r\n        ],\r\n        version: \"2.15.0\",\r\n      },\r\n      date: new Date(),\r\n      userId: 342,\r\n    },\r\n    {\r\n      id: 484947,\r\n      title: \"Feature requests Jira\",\r\n      body: {\r\n        time: 1569611146631,\r\n        blocks: [\r\n          {\r\n            type: \"paragraph\",\r\n            data: {\r\n              text: \"Hello Editor.js\",\r\n            },\r\n          },\r\n        ],\r\n        version: \"2.15.0\",\r\n      },\r\n      date: new Date(),\r\n      userId: 342,\r\n    },\r\n  ],\r\n  error: undefined,\r\n};\r\n\r\nconst handlers: ReducerHandler<IActivitiesState> = {\r\n  [ActionTypes.GET_ACTIVITIES_SUCCESS]: mutators.getSuccess,\r\n  [ActionTypes.GET_ACTIVITIES_FAILURE]: mutators.getFailure,\r\n  [ActionTypes.ADD_ACTIVITY]: mutators.addActivity,\r\n  [ActionTypes.EDIT_ACTIVITY]: mutators.editActivity,\r\n  [ActionTypes.REMOVE_ACTIVITY]: mutators.removeActivity,\r\n  [ActionTypes.GET_ACTIVITY_BY_ID]: mutators.getActivityById,\r\n};\r\n\r\nexport const activityReducer = createReducer<IActivitiesState>(\r\n  initialState,\r\n  handlers\r\n);\r\n","import { Mutator } from \"_helpers/createReducer\";\r\nimport { IActivitiesState } from \"store/_reducers/activity.reducer\";\r\nimport { IActivity } from \"data/activity\";\r\n\r\ntype ActivityMutator<P = any> = Mutator<IActivitiesState, P>;\r\n\r\nexport const getSuccess: ActivityMutator<IActivity> = (state, data) => {\r\n  const newActivity = state.activities.concat(data);\r\n  return {\r\n    ...state,\r\n    activities: newActivity,\r\n  };\r\n};\r\n\r\nexport const getFailure: ActivityMutator<Error> = (state, error) => {\r\n  return {\r\n    ...state,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const addActivity: ActivityMutator<IActivity> = (state, data) => {\r\n  const newActivity = state.activities.concat(data);\r\n  return {\r\n    ...state,\r\n    activities: newActivity,\r\n  };\r\n};\r\n\r\nexport const editActivity: ActivityMutator<IActivity> = (state, data) => {\r\n  const updatedItems = state.activities.map((activity) => {\r\n    if (activity.id === data.id) {\r\n      return { ...activity, ...data };\r\n    }\r\n    return activity;\r\n  });\r\n  return { ...state, activities: updatedItems };\r\n};\r\n\r\nexport const removeActivity: ActivityMutator<number> = (state, data) => {\r\n  console.log(\"removing item by id:\", data);\r\n  return {\r\n    ...state,\r\n    activities: state.activities.filter((activity) => activity.id !== data),\r\n  };\r\n};\r\n\r\nexport const getActivityById: ActivityMutator<number> = (state, data) => {\r\n  return {\r\n    ...state,\r\n    activities: state.activities.filter((activity) => activity.id !== data),\r\n  };\r\n};\r\n","import createReducer, { ReducerHandler } from \"_helpers/createReducer\";\r\nimport { IUser } from \"data/user\";\r\nimport { ActionTypes } from \"data/actionTypes\";\r\nimport * as mutators from \"../users/mutations\";\r\n\r\nexport interface IUserState {\r\n  users: IUser[];\r\n  loading: boolean;\r\n  deleting: boolean;\r\n  registering: boolean;\r\n  error?: Error;\r\n  editing?: Boolean;\r\n}\r\n\r\nconst initialState: IUserState = {\r\n  users: [\r\n    // {\r\n    //   id: 484937,\r\n    //   email: \"bert@alserdamedia.nl\",\r\n    //   password: \"12345\",\r\n    //   name: \"Bert de Boer\",\r\n    //   job: \"Front-end developer\",\r\n    //   role: 0,\r\n    // },\r\n    // {\r\n    //   id: 484938,\r\n    //   email: \"guido@alserdamedia.nl\",\r\n    //   password: \"12345\",\r\n    //   name: \"Guido Lindeboom\",\r\n    //   job: \"Back-end developer\",\r\n    //   role: 0,\r\n    // },\r\n    // {\r\n    //   id: 484939,\r\n    //   email: \"henk@alserdamedia.nl\",\r\n    //   password: \"12345\",\r\n    //   name: \"Henk Holtrop\",\r\n    //   job: \"Back-end developer\",\r\n    //   role: 0,\r\n    // },\r\n    // {\r\n    //   id: 484940,\r\n    //   email: \"henkjan@alserdamedia.nl\",\r\n    //   password: \"12345\",\r\n    //   name: \"HenkJan\",\r\n    //   job: \"Back-end developer\",\r\n    //   role: 0,\r\n    // },\r\n    // {\r\n    //   id: 484941,\r\n    //   email: \"inne@alserdamedia.nl\",\r\n    //   password: \"12345\",\r\n    //   name: \"Inne Hoekstra\",\r\n    //   job: \"Back-end developer\",\r\n    //   role: 0,\r\n    // },\r\n    // {\r\n    //   id: 484942,\r\n    //   email: \"jan@alserdamedia.nl\",\r\n    //   password: \"12345\",\r\n    //   name: \"Jan-jurjen Lemstra\",\r\n    //   job: \"Back-end developer\",\r\n    //   role: 0,\r\n    // },\r\n    // {\r\n    //   id: 484943,\r\n    //   email: \"jeroen@alserdamedia.nl\",\r\n    //   password: \"12345\",\r\n    //   name: \"Jeroen Beerstra\",\r\n    //   job: \"Back-end developer\",\r\n    //   role: 0,\r\n    // },\r\n  ],\r\n  loading: false,\r\n  deleting: false,\r\n  registering: false,\r\n  error: undefined,\r\n  editing: false,\r\n};\r\n\r\nconst handlers: ReducerHandler<IUserState> = {\r\n  [ActionTypes.REGISTER_REQUEST]: mutators.registerRequest,\r\n  [ActionTypes.REGISTER_SUCCESS]: mutators.registersuccess,\r\n  [ActionTypes.REGISTER_FAILURE]: mutators.registerFailure,\r\n\r\n  [ActionTypes.GET_USERS_REQUEST]: mutators.getUsersRequest,\r\n  [ActionTypes.GET_USERS_SUCCESS]: mutators.getUsersSuccess,\r\n  [ActionTypes.GET_USERS_FAILURE]: mutators.getUsersFailure,\r\n\r\n  [ActionTypes.EDIT_USER_REQUEST]: mutators.editUserRequest,\r\n  [ActionTypes.EDIT_USER_SUCCESS]: mutators.editUserSuccess,\r\n  [ActionTypes.EDIT_USER_FAILURE]: mutators.editUserFailure,\r\n\r\n  [ActionTypes.REMOVE_USER_REQUEST]: mutators.deleteUserRequest,\r\n  [ActionTypes.REMOVE_USER_SUCCESS]: mutators.deleteUserSuccess,\r\n  [ActionTypes.REMOVE_USER_FAILURE]: mutators.deleteUserFailure,\r\n};\r\n\r\nexport const userReducer = createReducer<IUserState>(initialState, handlers);\r\n","import createReducer, { ReducerHandler } from \"_helpers/createReducer\";\r\nimport { IGoal } from \"data/goal\";\r\nimport { ActionTypes } from \"data/actionTypes\";\r\nimport * as mutators from \"../goals/mutations\";\r\n\r\nexport interface IGoalsState {\r\n  goals: IGoal[];\r\n  error?: Error;\r\n}\r\nconst initialState: IGoalsState = {\r\n  goals: [\r\n    {\r\n      id: 1,\r\n      title: \"React.Js\",\r\n      color: \"#AACFCF\",\r\n      type: \"Hard-skill\",\r\n      assignedTo: [],\r\n      achievedBy: [],\r\n      activityIds: [484937, 484938, 484939, 484940, 484941, 484942],\r\n      createdAt: new Date(),\r\n      updatedAt: new Date(),\r\n      achievedAt: null,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Welkom Stagiair\",\r\n      color: \"#FFB6B6\",\r\n      type: \"Soft-skill\",\r\n      assignedTo: [],\r\n      achievedBy: [],\r\n      activityIds: [484943, 484944, 484945, 484946, 484947],\r\n      createdAt: new Date(),\r\n      updatedAt: new Date(),\r\n      achievedAt: null,\r\n    },\r\n  ],\r\n  error: undefined,\r\n};\r\n\r\nconst handlers: ReducerHandler<IGoalsState> = {\r\n  [ActionTypes.GET_GOALS_SUCCESS]: mutators.getSuccess,\r\n  [ActionTypes.GET_GOALS_FAILURE]: mutators.getFailure,\r\n  [ActionTypes.ADD_GOAL]: mutators.addGoal,\r\n  [ActionTypes.EDIT_GOAL]: mutators.editGoal,\r\n  [ActionTypes.REMOVE_GOAL]: mutators.removeGoal,\r\n  [ActionTypes.GET_GOAL_BY_ID]: mutators.getGoalById,\r\n};\r\n\r\nexport const goalReducer = createReducer<IGoalsState>(initialState, handlers);\r\n","import { Mutator } from \"_helpers/createReducer\";\r\nimport { IGoalsState } from \"store/_reducers/goal.reducer\";\r\nimport { IGoal } from \"data/goal\";\r\n\r\ntype GoalMutator<P = any> = Mutator<IGoalsState, P>;\r\n\r\nexport const getSuccess: GoalMutator<IGoal> = (state, data) => {\r\n  const newGoal = state.goals.concat(data);\r\n  return {\r\n    ...state,\r\n    goals: newGoal,\r\n  };\r\n};\r\n\r\nexport const getFailure: GoalMutator<Error> = (state, error) => {\r\n  return {\r\n    ...state,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const addGoal: GoalMutator<IGoal> = (state, data) => {\r\n  const newGoal = state.goals.concat(data);\r\n  return {\r\n    ...state,\r\n    goals: newGoal,\r\n  };\r\n};\r\n\r\nexport const editGoal: GoalMutator<IGoal> = (state, data) => {\r\n  const updatedItems = state.goals.map((goal) => {\r\n    if (goal.id === data.id) {\r\n      return { ...goal, ...data };\r\n    }\r\n    return goal;\r\n  });\r\n  return { ...state, goals: updatedItems };\r\n};\r\n\r\nexport const removeGoal: GoalMutator<number> = (state, data) => {\r\n  console.log(\"removing item by id:\", data);\r\n  return {\r\n    ...state,\r\n    goals: state.goals.filter((goal) => goal.id !== data),\r\n  };\r\n};\r\n\r\nexport const getGoalById: GoalMutator<number> = (state, data) => {\r\n  return {\r\n    ...state,\r\n    goals: state.goals.filter((goal) => goal.id !== data),\r\n  };\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { useSelector, TypedUseSelectorHook } from \"react-redux\";\r\n\r\nimport { authenticationReducer } from \"./authentication.reducer\";\r\nimport { activityReducer } from \"store/_reducers/activity.reducer\";\r\nimport { userReducer } from \"store/_reducers/user.reducer\";\r\nimport { goalReducer } from \"store/_reducers/goal.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  authenticationReducer,\r\n  activityReducer,\r\n  userReducer,\r\n  goalReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport { ActionTypes } from \"data/actionTypes\";\r\n\r\nimport rootReducer from \"store/_reducers\";\r\n\r\nconst actionTypeEnumToString = (action: any): any =>\r\n  typeof action.type === \"number\" && ActionTypes[action.type]\r\n    ? {\r\n        type: ActionTypes[action.type],\r\n        payload: action.payload\r\n      }\r\n    : action;\r\n\r\nconst logger = createLogger({ actionTransformer: actionTypeEnumToString });\r\nconst composeEnhancers = composeWithDevTools({\r\n  actionSanitizer: actionTypeEnumToString\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(logger, thunkMiddleware))\r\n);\r\n","export function authHeader() {\r\n  // return authorization header with jwt token\r\n  let user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  if (user && user.token) {\r\n    return { Authorization: \"Bearer \" + user.token };\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","export const routes = {\r\n  Home: \"/\",\r\n  Goals: \"/goals\",\r\n  Users: \"/users\",\r\n  UsersOld: \"/usersold\",\r\n  Login: \"/login\",\r\n  Profile: \"/profile\",\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: `http://jsonplaceholder.typicode.com/CANCEL`,\r\n});\r\n","import { IPureAction } from \"store/types\";\r\nimport { ActionTypes } from \"data/actionTypes\";\r\nimport { IActivity, IActivityState } from \"data/activity\";\r\nimport API from \"store/api\";\r\nimport { store } from \"_helpers\";\r\n\r\n// Fetch request to API\r\nexport const fetchActivitiesRequest = async () => {\r\n  try {\r\n    const response = await API.get(`posts`);\r\n    return store.dispatch(fetchSuccess(response.data));\r\n  } catch (error) {\r\n    console.log(error);\r\n    return store.dispatch(fetchError(error));\r\n  }\r\n};\r\n\r\n// Set activities\r\nexport const fetchSuccess = (\r\n  data: IActivityState\r\n): IPureAction<ActionTypes.GET_ACTIVITIES_SUCCESS, IActivityState> => ({\r\n  type: ActionTypes.GET_ACTIVITIES_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\n// Error if fetch has failed\r\nexport const fetchError = (\r\n  error: Error\r\n): IPureAction<ActionTypes.GET_ACTIVITIES_FAILURE, Error> => ({\r\n  type: ActionTypes.GET_ACTIVITIES_FAILURE,\r\n  payload: error,\r\n});\r\n\r\n// Add new activity\r\nexport const addActivity = (\r\n  data: IActivity\r\n): IPureAction<ActionTypes.ADD_ACTIVITY, IActivity> => ({\r\n  type: ActionTypes.ADD_ACTIVITY,\r\n  payload: data,\r\n});\r\n\r\n// Edit activity\r\nexport const editActivity = (\r\n  data: IActivity\r\n): IPureAction<ActionTypes.EDIT_ACTIVITY, IActivity> => ({\r\n  type: ActionTypes.EDIT_ACTIVITY,\r\n  payload: data,\r\n});\r\n\r\n// Remove Activity\r\nexport const removeActivity = (\r\n  id: number\r\n): IPureAction<ActionTypes.REMOVE_ACTIVITY, Number> => ({\r\n  type: ActionTypes.REMOVE_ACTIVITY,\r\n  payload: id,\r\n});\r\n\r\n// Remove Activity\r\nexport const getActivityById = (\r\n  id: number\r\n): IPureAction<ActionTypes.GET_ACTIVITY_BY_ID, Number> => ({\r\n  type: ActionTypes.GET_ACTIVITY_BY_ID,\r\n  payload: id,\r\n});\r\n","import { authHeader } from \"../_helpers\";\r\n\r\nexport const userService = {\r\n  login,\r\n  logout,\r\n  register,\r\n  getAll,\r\n  getById,\r\n  update,\r\n  delete: _delete,\r\n};\r\n\r\nfunction login(email, password) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ email, password }),\r\n  };\r\n\r\n  return fetch(`/users/authenticate`, requestOptions)\r\n    .then(handleResponse)\r\n    .then((user) => {\r\n      // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n\r\n      return user;\r\n    });\r\n}\r\n\r\nfunction logout() {\r\n  // remove user from local storage to log user out\r\n  localStorage.removeItem(\"user\");\r\n}\r\n\r\nfunction getAll() {\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: authHeader(),\r\n  };\r\n\r\n  return fetch(`/users`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction getById(id) {\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: authHeader(),\r\n  };\r\n\r\n  return fetch(`/users/${id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction register(user) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(user),\r\n  };\r\n\r\n  return fetch(`/users/register`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction update(user) {\r\n  const requestOptions = {\r\n    method: \"PUT\",\r\n    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(user),\r\n  };\r\n\r\n  return fetch(`/users/${user.id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\n// prefixed function name with underscore because delete is a reserved word in javascript\r\nfunction _delete(id) {\r\n  const requestOptions = {\r\n    method: \"DELETE\",\r\n    headers: authHeader(),\r\n  };\r\n\r\n  return fetch(`/users/${id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction handleResponse(response) {\r\n  return response.text().then((text) => {\r\n    const data = text && JSON.parse(text);\r\n    if (!response.ok) {\r\n      if (response.status === 401) {\r\n        // auto logout if 401 response returned from api\r\n        logout();\r\n        // location.reload(true);\r\n      }\r\n\r\n      const error = (data && data.message) || response.statusText;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    return data;\r\n  });\r\n}\r\n","import { IPureAction } from \"store/users/types\";\r\nimport { ActionTypes } from \"data/actionTypes\";\r\nimport { userService } from \"_services\";\r\n// import { IUserState } from \"store/_reducers/user.reducer\";\r\nimport { IUser } from \"data/user\";\r\n// import API from \"store/api\";\r\nimport { store } from \"_helpers\";\r\n\r\n// Register\r\nexport const register = async (user: IUser) => {\r\n  store.dispatch(registerRequest());\r\n\r\n  try {\r\n    const response = await userService.register(user);\r\n    return store.dispatch(registerSuccess(response));\r\n  } catch (error) {\r\n    return store.dispatch(registerFailure(error));\r\n  }\r\n};\r\n\r\nexport const registerRequest = (): IPureAction<\r\n  ActionTypes.REGISTER_REQUEST,\r\n  boolean\r\n> => ({\r\n  type: ActionTypes.REGISTER_REQUEST,\r\n  payload: true,\r\n});\r\n\r\nexport const registerSuccess = (\r\n  data: IUser\r\n): IPureAction<ActionTypes.REGISTER_SUCCESS, IUser> => ({\r\n  type: ActionTypes.REGISTER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const registerFailure = (\r\n  error: Error\r\n): IPureAction<ActionTypes.REGISTER_FAILURE, Error> => ({\r\n  type: ActionTypes.REGISTER_FAILURE,\r\n  payload: error,\r\n});\r\n\r\n// Login\r\nexport const login = async (data: any, history: any) => {\r\n  store.dispatch(loginRequest(data.email));\r\n\r\n  try {\r\n    const response = await userService.login(data.email, data.password);\r\n    store.dispatch(loginSuccess(response));\r\n    history.push(\"/\");\r\n  } catch (error) {\r\n    return store.dispatch(loginFailure(error));\r\n  }\r\n};\r\n\r\nexport const loginRequest = (\r\n  data: IUser\r\n): IPureAction<ActionTypes.LOGIN_REQUEST, IUser> => ({\r\n  type: ActionTypes.LOGIN_REQUEST,\r\n  payload: data,\r\n});\r\n\r\nexport const loginSuccess = (\r\n  data: IUser\r\n): IPureAction<ActionTypes.LOGIN_SUCCESS, IUser> => ({\r\n  type: ActionTypes.LOGIN_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const loginFailure = (\r\n  error: Error\r\n): IPureAction<ActionTypes.LOGIN_FAILURE, Error> => ({\r\n  type: ActionTypes.LOGIN_FAILURE,\r\n  payload: error,\r\n});\r\n\r\n// Logout\r\nexport const logout = async () => {\r\n  try {\r\n    userService.logout();\r\n    store.dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    return store.dispatch(logoutFailure(error));\r\n  }\r\n};\r\n\r\nexport const logoutSuccess = (): IPureAction<ActionTypes.LOGOUT, void> => ({\r\n  type: ActionTypes.LOGOUT,\r\n  payload: undefined,\r\n});\r\n\r\nexport const logoutFailure = (\r\n  error: Error\r\n): IPureAction<ActionTypes.LOGOUT, Error> => ({\r\n  type: ActionTypes.LOGOUT,\r\n  payload: error,\r\n});\r\n\r\n// Get all\r\nexport const getUsers = async () => {\r\n  store.dispatch(getUsersRequest());\r\n\r\n  try {\r\n    const response = await userService.getAll();\r\n    return store.dispatch(getUsersSuccess(response));\r\n  } catch (error) {\r\n    return store.dispatch(getUsersFailure(error));\r\n  }\r\n};\r\n\r\nexport const getUsersRequest = (): IPureAction<\r\n  ActionTypes.GET_USERS_REQUEST,\r\n  any\r\n> => ({\r\n  type: ActionTypes.GET_USERS_REQUEST,\r\n  payload: undefined,\r\n});\r\n\r\nexport const getUsersSuccess = (\r\n  data: IUser\r\n): IPureAction<ActionTypes.GET_USERS_SUCCESS, IUser> => ({\r\n  type: ActionTypes.GET_USERS_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const getUsersFailure = (\r\n  error: Error\r\n): IPureAction<ActionTypes.GET_USERS_FAILURE, Error> => ({\r\n  type: ActionTypes.GET_USERS_FAILURE,\r\n  payload: error,\r\n});\r\n\r\n// Edit item\r\nexport const editUser = async (user: IUser) => {\r\n  store.dispatch(editUserRequest(true));\r\n\r\n  try {\r\n    const response = await userService.update(user);\r\n    return store.dispatch(editUserSuccess(user));\r\n  } catch (error) {\r\n    return store.dispatch(editUserFailure(error));\r\n  }\r\n};\r\n\r\nexport const editUserRequest = (\r\n  editing: boolean\r\n): IPureAction<ActionTypes.EDIT_USER_REQUEST, boolean> => ({\r\n  type: ActionTypes.EDIT_USER_REQUEST,\r\n  payload: editing,\r\n});\r\n\r\nexport const editUserSuccess = (\r\n  user: IUser\r\n): IPureAction<ActionTypes.EDIT_USER_SUCCESS, IUser> => ({\r\n  type: ActionTypes.EDIT_USER_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nexport const editUserFailure = (\r\n  error: Error\r\n): IPureAction<ActionTypes.EDIT_USER_FAILURE, Error> => ({\r\n  type: ActionTypes.EDIT_USER_FAILURE,\r\n  payload: error,\r\n});\r\n\r\n// Remove item\r\nexport const deleteUser = async (id: number) => {\r\n  store.dispatch(deleteUserRequest(id));\r\n\r\n  try {\r\n    userService.delete(id);\r\n    return store.dispatch(deleteUserSuccess(id));\r\n  } catch (error) {\r\n    return store.dispatch(deleteUserFailure(error));\r\n  }\r\n};\r\n\r\nexport const deleteUserRequest = (\r\n  id: number\r\n): IPureAction<ActionTypes.REMOVE_USER_REQUEST, number> => ({\r\n  type: ActionTypes.REMOVE_USER_REQUEST,\r\n  payload: id,\r\n});\r\n\r\nexport const deleteUserSuccess = (\r\n  id: number\r\n): IPureAction<ActionTypes.REMOVE_USER_SUCCESS, number> => ({\r\n  type: ActionTypes.REMOVE_USER_SUCCESS,\r\n  payload: id,\r\n});\r\n\r\nexport const deleteUserFailure = (\r\n  error: Error\r\n): IPureAction<ActionTypes.REMOVE_USER_FAILURE, Error> => ({\r\n  type: ActionTypes.REMOVE_USER_FAILURE,\r\n  payload: error,\r\n});\r\n","import React from \"react\";\r\n\r\nexport const LoginLayout: React.FunctionComponent = (props) => {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n};\r\n\r\nexport default LoginLayout;\r\n","import React from \"react\";\r\nimport * as Icon from \"react-feather\";\r\n\r\nexport const menuIcons = [\r\n  <Icon.Grid />,\r\n  <Icon.Users />,\r\n  <Icon.Flag />,\r\n  <Icon.Activity />,\r\n];\r\n\r\nexport const loginIcons = [<Icon.Mail />, <Icon.Key />];\r\nexport const headerIcons = [<Icon.Search />, <Icon.Plus />, <Icon.Sliders />];\r\nexport const listIcons = [<Icon.ChevronLeft />, <Icon.ChevronRight />];\r\nexport const sideviewIcons = [<Icon.Edit />, <Icon.Trash2 />];\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { routes } from \"data/routes\";\r\nimport { menuIcons } from \"data/featherIcons\";\r\nimport johnDoe from \"assets/img/John-Doe.jpg\";\r\n\r\nexport const Menu: React.FunctionComponent = () => {\r\n  const [homeIcon, usersIcon, goalIcon, ActivityIcon] = menuIcons;\r\n\r\n  return (\r\n    <nav role=\"navigation\" className=\"navbar\">\r\n      <div className=\"logo\">\r\n        <NavLink exact to={routes.Home} className=\"logo\">\r\n          Super\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"main\">\r\n        <NavLink exact to={routes.Home} className=\"route\">\r\n          <i className=\"icon\">{homeIcon}</i>\r\n        </NavLink>\r\n        <NavLink to={routes.Users} className=\"route\">\r\n          <i className=\"icon\">{usersIcon}</i>\r\n        </NavLink>\r\n        <NavLink exact to={routes.Goals} className=\"route\">\r\n          <i className=\"icon\">{goalIcon}</i>\r\n        </NavLink>\r\n        <NavLink exact to={routes.UsersOld} className=\"route\">\r\n          <i className=\"icon\">{ActivityIcon}</i>\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"profile\">\r\n        <NavLink exact to={routes.Profile} className=\"route\">\r\n          <img src={johnDoe} alt=\"John Doe\" />\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport function useTheme() {\r\n  const [theme, setTheme] = useState(\r\n    JSON.parse(localStorage.getItem(\"darkMode\") as any)\r\n  );\r\n\r\n  const toggleTheme = () => {\r\n    // console.log(\"toggle\");\r\n    localStorage.setItem(\"darkMode\", String(!theme));\r\n    setTheme(!theme);\r\n  };\r\n\r\n  return [theme, toggleTheme];\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport function usePrimaryColor() {\r\n  const [color, setColor] = useState<string>(\r\n    localStorage.getItem(\"primaryColor\") as string\r\n  );\r\n\r\n  useEffect(() => {\r\n    let currentColor = getComputedStyle(\r\n      document.documentElement\r\n    ).getPropertyValue(\"--primary\");\r\n\r\n    if (!color) {\r\n      localStorage.setItem(\"primaryColor\", currentColor);\r\n      setColor(currentColor);\r\n      document.documentElement.style.setProperty(\"--primary\", currentColor);\r\n    } else if (color !== currentColor) {\r\n      document.documentElement.style.setProperty(\"--primary\", color);\r\n    }\r\n  }, [color]);\r\n\r\n  // function changeColor(newColor: string) {\r\n  //   localStorage.setItem(\"primaryColor\", newColor);\r\n  //   setColor(newColor);\r\n  //   document.documentElement.style.setProperty(\"--primary\", newColor);\r\n\r\n  //   return newColor;\r\n  // }\r\n\r\n  const changeColor = (newColor: string) => {\r\n    localStorage.setItem(\"primaryColor\", newColor);\r\n    setColor(newColor);\r\n    document.documentElement.style.setProperty(\"--primary\", newColor);\r\n  };\r\n\r\n  return [color, setColor, changeColor] as const;\r\n}\r\n\r\n// let currentColor = getComputedStyle(document.documentElement).getPropertyValue(\r\n//   \"--primary\"\r\n// );\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Menu from \"components/UI/Menu\";\r\nimport { useTheme } from \"hooks/useTheme\";\r\nimport { usePrimaryColor } from \"hooks/usePrimaryColor\";\r\n\r\nexport const MainLayout: React.FunctionComponent = (props) => {\r\n  const [theme] = useTheme();\r\n  const [color, changeColor] = usePrimaryColor()\r\n\r\n  return (\r\n    <div className=\"wrapper\" data-theme={theme ? \"dark\" : null}>\r\n      <Menu />\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","import React, { ReactNode, ComponentType } from \"react\";\r\nimport { Route } from \"react-router\";\r\nimport { RouteComponentProps, RouteProps, Redirect } from \"react-router-dom\";\r\n\r\nimport { useUserCheck } from \"hooks/useUserInfo\";\r\n\r\ninterface IAppRouteProps extends RouteProps {\r\n  component: ComponentType<any>;\r\n  layout: ComponentType;\r\n}\r\n\r\nexport const AppRoute = (props: IAppRouteProps) => {\r\n  // Maak een hook die checkt of je ingelogd bent\r\n  // const [userInfo] = useUserCheck();\r\n  // console.log(userInfo);\r\n  const { component: Component, layout: Layout, ...rest } = props;\r\n\r\n  const render = (props: RouteComponentProps<any>): ReactNode => {\r\n    return (\r\n      <Layout>\r\n        <Component {...props} />\r\n      </Layout>\r\n    );\r\n  };\r\n\r\n  return <Route {...rest} render={render} />;\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport function useFormFields(initialState) {\r\n  const [fields, setValues] = useState(initialState);\r\n\r\n  return [\r\n    fields,\r\n    function (event) {\r\n      setValues({\r\n        ...fields,\r\n        [event.target.id]: event.target.value,\r\n      });\r\n    },\r\n    function () {\r\n      setValues(initialState);\r\n    },\r\n  ];\r\n}\r\n","import React from \"react\";\r\n\r\ntype ButtonTheme = (\r\n    'blue' |\r\n    'red' |\r\n    'green'\r\n)\r\n\r\ninterface IProps {\r\n    // theme?: ButtonTheme;\r\n    // ietsCustoms?: string;\r\n    icon?: any;\r\n    extra?: any;\r\n}\r\n\r\ntype Props = IProps & React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// type Props = React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// const Input: React.FC<Props> = ({ theme, ietsCustoms, ...rest }) => {\r\n\r\nconst Input: React.FC<Props> = ({ ...rest }) => {\r\n\r\n    return (\r\n        <div className=\"input-wrapper\">\r\n            <i className=\"input-search-icon\">{rest.icon}</i>\r\n            <input {...rest} />\r\n            <i className=\"input-search-extra\">{rest.extra}</i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import React, { useEffect, useState, FormEvent } from \"react\";\r\n\r\nimport { login, logout } from \"store/users/actions\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { useFormFields } from \"hooks/useFormFields\";\r\nimport Input from \"components/UI/Input\";\r\nimport { loginIcons } from \"data/featherIcons\"\r\n\r\nexport const Login: React.FunctionComponent<RouteComponentProps> = props => {\r\n  const [mailIcon, keyIcon] = loginIcons;\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    logout();\r\n  }, []);\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    setSubmitted(true);\r\n    if (fields) {\r\n      login(fields, props.history);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-wrapper\">\r\n      <form name=\"form\" className=\"login-form\" onSubmit={handleSubmit}>\r\n        <div className=\"login-text\">\r\n          <div className=\"header-text\">Supervise<b>me</b></div>\r\n          <div className=\"sub-text\">Welcome back!</div>\r\n        </div>\r\n        <div className=\"login-input\">\r\n          <Input id=\"email\" name=\"email\" icon={mailIcon} className=\"form-control\" placeholder=\"Enter your email\" value={fields.email} onChange={handleFieldChange} required />\r\n          <Input type=\"password\" id=\"password\" name=\"password\" icon={keyIcon} className=\"form-control\" placeholder=\"Enter your password\" value={fields.password} onChange={handleFieldChange} required />\r\n        </div>\r\n        <div className=\"login-button\">\r\n          <button className=\"btn btn-primary\">Login</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","type Filters =\r\n  | \"all\"\r\n  | \"drupal\"\r\n  | \"jira\"\r\n  | \"users\"\r\n  | \"coaches\"\r\n  | \"front-end\"\r\n  | \"back-end\"\r\n  | \"sales\"\r\n  | \"soft-skills\"\r\n  | \"hard-skills\";\r\n\r\nexport interface IHeaderData {\r\n  title: string;\r\n  search: string;\r\n  filters: Filters[];\r\n}\r\n\r\nexport const activitiesHeaderData: IHeaderData = {\r\n  title: \"Activities\",\r\n  search: \"activity\",\r\n  filters: [\"all\", \"drupal\", \"jira\"],\r\n};\r\n\r\nexport const usersHeaderData: IHeaderData = {\r\n  title: \"Colleagues\",\r\n  search: \"colleague\",\r\n  filters: [\"all\", \"users\", \"coaches\", \"front-end\", \"back-end\", \"sales\"],\r\n};\r\n\r\nexport const goalsHeaderData: IHeaderData = {\r\n  title: \"Goals\",\r\n  search: \"goal\",\r\n  filters: [\"all\", \"soft-skills\", \"hard-skills\"],\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport function useDivider() {\r\n  const [dividerState, setDividerState] = useState<Boolean>(\r\n    JSON.parse(localStorage.getItem(\"dividerState\") as any)\r\n  );\r\n\r\n  const toggleDivider = () => {\r\n    localStorage.setItem(\"dividerState\", String(!dividerState));\r\n    setDividerState(!dividerState);\r\n  };\r\n\r\n  return [dividerState, toggleDivider];\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { headerIcons } from \"data/featherIcons\";\r\nimport Input from \"components/UI/Input\";\r\n\r\ninterface IHeaderData {\r\n  title: string;\r\n  search: string;\r\n  filters: string[];\r\n}\r\n\r\ninterface IProps {\r\n  headerData: IHeaderData;\r\n  searchTerm: string;\r\n  handleFieldChange: any;\r\n  setNewMode: any;\r\n  count?: number;\r\n}\r\n\r\nexport const Header: React.FunctionComponent<IProps> = (props) => {\r\n  const {\r\n    headerData,\r\n    searchTerm,\r\n    handleFieldChange,\r\n    setNewMode,\r\n    count,\r\n  } = props;\r\n  const [searchIcon, plusIcon, slidersIcon] = headerIcons;\r\n  const [selectedFilter, setSelectedFilter] = useState(0);\r\n  const [extendedFilterToggle, setExtendedFilterToggle] = useState(false);\r\n\r\n  const setFilter = (index: number) => {\r\n    setSelectedFilter(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header-state\">\r\n        <div className=\"header-state-title\">{headerData.title}</div>\r\n        <div className=\"header-state-count\">\r\n          <i>{count}</i>\r\n        </div>\r\n        <div className=\"header-state-new\">\r\n          <a onClick={() => setNewMode(true)}>{plusIcon}</a>\r\n        </div>\r\n      </div>\r\n      <div className=\"header-search\">\r\n        <Input id=\"searchTerm\" icon={searchIcon} extra={slidersIcon} className=\"form-control\" placeholder={\"Search for \" + headerData.search} value={searchTerm} onChange={handleFieldChange} />\r\n      </div>\r\n      <div className=\"header-filter\">\r\n        {headerData.filters.map((item, index) => (\r\n          <div\r\n            key={index}\r\n            className={selectedFilter === index ? \"item selected\" : \"item\"}\r\n            onClick={() => setFilter(index)}\r\n          >\r\n            {item}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { IGoal, IGoalState } from \"data/goal\";\r\nimport { IUser, IUserState } from \"data/user\";\r\nimport { IActivity, IActivityState } from \"data/activity\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport Avatar from \"react-avatar\";\r\nimport Activities from \"components/Activities\";\r\n\r\ntype DataTypes = IGoalState | IUserState | IActivityState;\r\ntype DataType = IGoal | IUser | IActivity;\r\n\r\ninterface IProps {\r\n  listItems: any[];\r\n  goals?: IGoal[];\r\n  searchTerm: string;\r\n  setSearchResults: any;\r\n  selected: any;\r\n  setSelected: any;\r\n  setNewMode: any;\r\n}\r\n\r\nexport const List: React.FunctionComponent<IProps> = (props) => {\r\n  const {\r\n    listItems,\r\n    goals,\r\n    selected,\r\n    setSelected,\r\n    setNewMode,\r\n    setSearchResults,\r\n  } = props;\r\n\r\n  const selectItem = (item: IGoal | IUser | IActivity) => {\r\n    setSelected(item);\r\n    setNewMode(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"list\">\r\n      {/* ACTIVITY */}\r\n      {/* <ReactSortable\r\n        className=\"sortable\"\r\n        list={listItems}\r\n        setList={setSearchResults}\r\n      > */}\r\n      {goals ? goals.map((item) => (\r\n        <div key={item.id}>\r\n          <div className=\"goal-title\">{item.title}</div>\r\n          {item.activityIds.map((id) =>\r\n            listItems.map((listItem) =>\r\n              id === listItem.id ? (\r\n                <div\r\n                  className={\r\n                    listItem.id === selected.id\r\n                      ? \"list-item selected\"\r\n                      : \"list-item\"\r\n                  }\r\n                  onClick={() => selectItem(listItem)}\r\n                >\r\n                  <Avatar\r\n                    name={listItem.title ? listItem.title : listItem.name}\r\n                    size=\"55\"\r\n                    maxInitials={2}\r\n                    round={\"20\"}\r\n                    className=\"list-item-icon\"\r\n                    textSizeRatio={2.4}\r\n                    color={item.color}\r\n                  />\r\n                  <div className=\"list-item-data\">\r\n                    <div className=\"list-item-title\">\r\n                      {listItem.title ? listItem.title : listItem.name}\r\n                    </div>\r\n                    <div className=\"list-item-read-time\">5 minutes read</div>\r\n                  </div>\r\n                </div>\r\n              ) : null\r\n            )\r\n          )}\r\n        </div>\r\n      )) : null}\r\n\r\n      {/* </ReactSortable> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useState } from \"react\";\r\nimport { IActivity, IActivityState } from \"data/activity\";\r\nimport { listIcons } from \"data/featherIcons\";\r\n\r\ninterface IProps {\r\n  dividerState: any;\r\n  toggleDivider: any;\r\n}\r\n\r\nexport const Divider: React.FunctionComponent<IProps> = (props) => {\r\n  const { dividerState, toggleDivider } = props;\r\n  // const [status, setStatus] = useState(false)\r\n  const [arrowLeftIcon, arrowRightIcon] = listIcons;\r\n\r\n  return (\r\n    <div className=\"divider\" onClick={toggleDivider}>\r\n      {dividerState ? arrowRightIcon : arrowLeftIcon}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Divider;\r\n","import { store } from \"_helpers\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\ntype TypedUseDispatch = () => typeof store.dispatch;\r\nexport const useTypedDispatch: TypedUseDispatch = useDispatch;\r\n","// tools.js\r\nimport List from \"@editorjs/list\";\r\nimport Header from \"@editorjs/header\";\r\nimport InlineCode from \"@editorjs/inline-code\";\r\nimport Quote from \"@editorjs/quote\";\r\nimport Image from \"@editorjs/image\";\r\nimport Delimiter from \"@editorjs/delimiter\";\r\n\r\nexport const EDITOR_JS_TOOLS = {\r\n  list: List,\r\n  header: Header,\r\n  inlineCode: InlineCode,\r\n  quote: Quote,\r\n  image: Image,\r\n  delimiter: Delimiter,\r\n};\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { IActivity } from \"data/activity\";\r\nimport { sideviewIcons } from \"data/featherIcons\";\r\nimport { useTypedDispatch } from \"hooks/useTypedDispatch\";\r\n\r\nimport { editActivity } from \"store/activities/actions\";\r\nimport { removeActivity } from \"store/activities/actions\";\r\nimport { useFormFields } from \"hooks/useFormFields\";\r\n\r\nimport Editor from \"@stfy/react-editor.js\";\r\nimport { EDITOR_JS_TOOLS } from \"data/tools\";\r\nimport Moment from \"react-moment\";\r\nimport \"moment-timezone\";\r\n\r\ninterface IProps {\r\n  selected: IActivity;\r\n  setSelected: any;\r\n  setDeleting: any;\r\n}\r\n\r\nexport const SideView: React.FunctionComponent<IProps> = (props) => {\r\n  const { id, title, body, date, userId } = props.selected;\r\n  const { selected, setSelected, setDeleting } = props;\r\n\r\n  const dispatch = useTypedDispatch();\r\n  const [fields, handleFieldChange, setForm] = useFormFields(selected);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editIcon, deleteIcon] = sideviewIcons;\r\n  const [lastEdit, setLastEdit] = useState(date);\r\n\r\n  const tabs = [\"Activity\", \"My Notes\", \"Goal\"];\r\n  const [tabMode, setTabMode] = useState(0);\r\n  const [editorBody, setEditorBody] = useState(body);\r\n  const editorRef: any = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setEditMode(false);\r\n    // setEditorBody(body);\r\n    setForm(selected);\r\n    initializeEditor();\r\n  }, [selected]);\r\n\r\n  useEffect(() => {\r\n    if (editMode) {\r\n      let timer = setTimeout(() => {\r\n        setLastEdit(new Date());\r\n        dispatch(editActivity({ ...fields, body: editorBody, date: lastEdit }));\r\n      }, 1000);\r\n      return () => {\r\n        clearTimeout(timer);\r\n        setSelected(selected);\r\n      };\r\n    }\r\n  }, [fields.title, editorBody]);\r\n\r\n  const deleteItem = () => {\r\n    setDeleting(true);\r\n    dispatch(removeActivity(id));\r\n  };\r\n\r\n  const initializeEditor = async () => {\r\n    await editorRef.current.editor.isReady.then(() => {\r\n      editorRef.current.editor.render(body);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"sideview-functions\">\r\n        <div className=\"item\">\r\n          Edited <Moment fromNow>{lastEdit}</Moment>\r\n        </div>\r\n        <div\r\n          className={editMode ? \"item edit active\" : \"item edit\"}\r\n          onClick={() => setEditMode(!editMode)}\r\n        >\r\n          {editIcon}\r\n        </div>\r\n        <div className=\"item delete\" onClick={deleteItem}>\r\n          {deleteIcon}\r\n        </div>\r\n      </div>\r\n      <div className=\"sideview-item\">\r\n        <div className=\"sideview-item-menus\">\r\n          {/* Show all tabs and set selected class  */}\r\n          <div className=\"tabs\">\r\n            {tabs.map((tab, index) => (\r\n              <div\r\n                key={index}\r\n                className={index === tabMode ? \"tab selected\" : \"tab\"}\r\n              >\r\n                <a onClick={() => setTabMode(index)}>{tab}</a>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"action\">\r\n            <input type=\"submit\" value=\"click to complete\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"sideview-content\">\r\n          <div className=\"sideview-content-title\">\r\n            <input\r\n              id=\"title\"\r\n              placeholder=\"Add title...\"\r\n              value={fields.title}\r\n              onChange={handleFieldChange}\r\n              disabled={!editMode}\r\n            />\r\n          </div>\r\n          <div id=\"editor\" className=\"sideview-content-item\">\r\n            <Editor\r\n              ref={editorRef}\r\n              holder=\"editor\"\r\n              onData={(data) => setEditorBody(data)}\r\n              tools={EDITOR_JS_TOOLS}\r\n              data={body}\r\n              placeholder=\"Add text...\"\r\n              autofocus\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideView;\r\n","import React, { useState, FormEvent } from \"react\";\r\nimport { IActivity, IBody } from \"data/activity\";\r\nimport { useTypedDispatch } from \"hooks/useTypedDispatch\";\r\n\r\nimport { addActivity } from \"store/activities/actions\";\r\nimport { useFormFields } from \"hooks/useFormFields\";\r\nimport Editor from \"@stfy/react-editor.js\";\r\nimport { EDITOR_JS_TOOLS } from \"data/tools\";\r\n\r\nconst InitialState: IActivity = {\r\n  id: Math.floor(Math.random() * 10000),\r\n  title: \"\",\r\n  body: { blocks: [] },\r\n  date: new Date(),\r\n  userId: 13,\r\n};\r\n\r\ninterface IProps {\r\n  setNewMode: any;\r\n  setSelected: any;\r\n}\r\n\r\nexport const NewSideView: React.FunctionComponent<IProps> = (props) => {\r\n  const { setNewMode, setSelected } = props;\r\n\r\n  const dispatch = useTypedDispatch();\r\n  const [fields, handleFieldChange] = useFormFields(InitialState);\r\n  const [editorBody, setEditorBody] = useState<IBody>();\r\n\r\n  const tabs = [\"Activity\", \"Goal\"];\r\n  const [tabMode, setTabMode] = useState(0);\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(addActivity({ ...fields, body: editorBody }));\r\n    setNewMode(false);\r\n    setSelected(fields);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"sideview-functions\">\r\n        <div className=\"item\"></div>\r\n      </div>\r\n      <div className=\"sideview-item\">\r\n        <div className=\"sideview-item-menus\">\r\n          {/* Show all tabs and set selected class  */}\r\n          <div className=\"tabs\">\r\n            {tabs.map((tab, index) => (\r\n              <div\r\n                key={index}\r\n                className={index === tabMode ? \"tab selected\" : \"tab\"}\r\n              >\r\n                <a onClick={() => setTabMode(index)}>{tab}</a>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"action\">\r\n            <input type=\"submit\" value=\"save\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"sideview-content\">\r\n          <div className=\"sideview-content-title\">\r\n            <input\r\n              id=\"title\"\r\n              placeholder=\"Add title...\"\r\n              value={fields.title}\r\n              onChange={handleFieldChange}\r\n            />\r\n          </div>\r\n          <div id=\"editor\" className=\"sideview-content-item\">\r\n            <Editor\r\n              holder=\"editor\"\r\n              onData={(data) => setEditorBody(data)}\r\n              tools={EDITOR_JS_TOOLS}\r\n              data={editorBody}\r\n              placeholder=\"Add text...\"\r\n              autofocus\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewSideView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { useTypedSelector } from \"store/_reducers\";\r\nimport { useFormFields } from \"hooks/useFormFields\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\n\r\nimport { IActivity } from \"data/activity\";\r\nimport { activitiesHeaderData } from \"data/headerData\";\r\nimport { useDivider } from \"hooks/useDivider\";\r\nimport Header from \"components/UI/Header\";\r\nimport List from \"components/Activities/List\";\r\nimport Divider from \"components/UI/Divider\";\r\nimport SideView from \"components/Activities/SideView\";\r\nimport NewSideView from \"components/Activities/NewSideView\";\r\n\r\nexport const Activities: React.FunctionComponent<RouteComponentProps> = () => {\r\n  const activities = useTypedSelector(\r\n    (state) => state.activityReducer.activities\r\n  );\r\n  const goals = useTypedSelector((state) => state.goalReducer.goals);\r\n  const [selected, setSelected] = useState<IActivity>(activities[0]);\r\n  const [searchResults, setSearchResults] = useState(activities);\r\n\r\n  const [newMode, setNewMode] = useState(false);\r\n  const [dividerState, toggleDivider] = useDivider();\r\n  const [deleting, setDeleting] = useState(false);\r\n\r\n  // Kan beter in de header\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    searchTerm: \"\",\r\n  });\r\n\r\n  // Find object in array by value\r\n  useEffect(() => {\r\n    const results = activities.filter((obj: any) => {\r\n      return Object.keys(obj).some((key) => {\r\n        if (obj[key] !== null) {\r\n          const tempKey = obj[key].toString().toLowerCase();\r\n          const tempSearch = fields.searchTerm.toLowerCase();\r\n          return tempKey.includes(tempSearch);\r\n        }\r\n      });\r\n    });\r\n    setSearchResults(results);\r\n  }, [fields.searchTerm]);\r\n\r\n  // Update searchResults if activities has been updated, couse we are mapping the searchResults\r\n  useEffect(() => {\r\n    setSearchResults(activities);\r\n    if (deleting) {\r\n      setSelected(activities[0]);\r\n      setDeleting(false);\r\n    }\r\n  }, [activities]);\r\n\r\n  // Change sideViews by mode number\r\n  const [sideView, setSideView] = useState(\r\n    <SideView\r\n      selected={selected}\r\n      setSelected={setSelected}\r\n      setDeleting={setDeleting}\r\n    />\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (newMode) {\r\n      setSideView(\r\n        <NewSideView setNewMode={setNewMode} setSelected={setSelected} />\r\n      );\r\n    } else {\r\n      setSideView(\r\n        <SideView\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n          setDeleting={setDeleting}\r\n        />\r\n      );\r\n    }\r\n  }, [selected, newMode]);\r\n\r\n  return (\r\n    <section className={dividerState ? \"container collapsed\" : \"container\"}>\r\n      {/* LEFT */}\r\n      <div className=\"content-list\">\r\n        <Header\r\n          headerData={activitiesHeaderData}\r\n          searchTerm={fields.searchTerm}\r\n          handleFieldChange={handleFieldChange}\r\n          setNewMode={setNewMode}\r\n          count={activities.length}\r\n        />\r\n        <List\r\n          listItems={searchResults}\r\n          goals={goals}\r\n          searchTerm={fields.searchTerm}\r\n          setSearchResults={setSearchResults}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n          setNewMode={setNewMode}\r\n        />\r\n      </div>\r\n      <div className=\"content-divider\">\r\n        <Divider dividerState={dividerState} toggleDivider={toggleDivider} />\r\n      </div>\r\n\r\n      {/* RIGHT */}\r\n      <div className=\"content-right\">{sideView}</div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Activities;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { IGoal, IGoalState } from \"data/goal\";\r\nimport { IUser, IUserState } from \"data/user\";\r\nimport { IActivity, IActivityState } from \"data/activity\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport Avatar from \"react-avatar\";\r\nimport Activities from \"components/Activities\";\r\n\r\ntype DataTypes = IGoalState | IUserState | IActivityState;\r\ntype DataType = IGoal | IUser | IActivity;\r\n\r\ninterface IProps {\r\n  listItems: any[];\r\n  goals?: IGoal[];\r\n  searchTerm: string;\r\n  setSearchResults: any;\r\n  selected: any;\r\n  setSelected: any;\r\n  setNewMode: any;\r\n}\r\n\r\nexport const List: React.FunctionComponent<IProps> = (props) => {\r\n  const {\r\n    listItems,\r\n    goals,\r\n    selected,\r\n    setSelected,\r\n    setNewMode,\r\n    setSearchResults,\r\n  } = props;\r\n\r\n  const selectItem = (item: IGoal | IUser | IActivity) => {\r\n    setSelected(item);\r\n    setNewMode(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"list\">\r\n      {/* ACTIVITY */}\r\n      {listItems\r\n        ? listItems.map((item) => (\r\n          <div\r\n            className={\r\n              item.id === selected.id ? \"list-item selected\" : \"list-item\"\r\n            }\r\n            onClick={() => selectItem(item)}\r\n          >\r\n            <Avatar\r\n              name={item.title ? item.title : item.name}\r\n              size=\"55\"\r\n              maxInitials={2}\r\n              round={\"20\"}\r\n              className=\"list-item-icon\"\r\n              textSizeRatio={2.4}\r\n              color={item.color}\r\n            />\r\n            <div className=\"list-item-data\">\r\n              <div className=\"list-item-title\">\r\n                {item.title ? item.title : item.name}\r\n              </div>\r\n              <div className=\"list-item-read-time\">5 minutes read</div>\r\n            </div>\r\n          </div>\r\n        )) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useState, useEffect, FormEvent } from \"react\";\r\nimport { IActivity } from \"data/activity\";\r\nimport { sideviewIcons } from \"data/featherIcons\";\r\nimport { useTypedDispatch } from \"hooks/useTypedDispatch\";\r\n\r\nimport { getUsers, register, editUser, deleteUser } from \"store/users/actions\";\r\nimport { useFormFields } from \"hooks/useFormFields\";\r\nimport { IUser } from \"data/user\";\r\nimport Avatar from \"react-avatar\";\r\nimport Moment from \"react-moment\";\r\nimport \"moment-timezone\";\r\n\r\nconst InitialState: IUser = {\r\n  id: 1,\r\n  name: \"Loading...\",\r\n  email: \"no email found\",\r\n  password: \"no password found\",\r\n  job: \"Sales\",\r\n  location: \"Leeuwarden\",\r\n  role: \"Admin\",\r\n  updatedAt: new Date()\r\n};\r\n\r\ninterface IProps {\r\n  selected: IUser;\r\n  setSelected: any;\r\n  setDeleting: any;\r\n}\r\n\r\nexport const SideView: React.FunctionComponent<IProps> = (props) => {\r\n  const { id, name, email, password, job, location, role, updatedAt } = props.selected\r\n    ? props.selected\r\n    : InitialState;\r\n  const { selected, setSelected, setDeleting } = props;\r\n\r\n  const dispatch = useTypedDispatch();\r\n  const [fields, handleFieldChange, setForm] = useFormFields(\r\n    selected ? selected : InitialState\r\n  );\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [editIcon, deleteIcon] = sideviewIcons;\r\n  const [lastEdit, setLastEdit] = useState(updatedAt);\r\n\r\n  const tabs = [\"Colleague\", \"Coached by\", \"Notes\"];\r\n  const [tabMode, setTabMode] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setEditMode(false);\r\n    setForm(selected);\r\n  }, [selected]);\r\n\r\n  const handleSubmit = () => {\r\n    setSubmitted(true);\r\n    setLastEdit(new Date());\r\n    editUser({ ...fields, updatedAt: new Date() });\r\n  };\r\n\r\n  const deleteItem = async () => {\r\n    setDeleting(true);\r\n    dispatch(await deleteUser(id).then(setDeleting(false)));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"sideview-functions\">\r\n        <div className=\"item\">\r\n          Edited <Moment fromNow>{lastEdit}</Moment>\r\n        </div>\r\n        <div\r\n          className={editMode ? \"item edit active\" : \"item edit\"}\r\n          onClick={() => setEditMode(!editMode)}\r\n        >\r\n          {editIcon}\r\n        </div>\r\n        <div className=\"item delete\" onClick={deleteItem}>\r\n          {deleteIcon}\r\n        </div>\r\n      </div>\r\n      <div className=\"sideview-item\">\r\n        <div className=\"sideview-item-menus\">\r\n          {/* Show all tabs and set selected class  */}\r\n          <div className=\"tabs\">\r\n            {tabs.map((tab, index) => (\r\n              <div\r\n                key={index}\r\n                className={index === tabMode ? \"tab selected\" : \"tab\"}\r\n              >\r\n                <a onClick={() => setTabMode(index)}>{tab}</a>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {editMode ? (\r\n            <div className=\"action\">\r\n              <input type=\"submit\" value=\"Save\" onClick={handleSubmit} />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"sideview-content\">\r\n          <div className=\"sideview-content-title\">\r\n            <Avatar\r\n              name={fields.name}\r\n              size=\"100\"\r\n              maxInitials={2}\r\n              round={\"20px\"}\r\n              className=\"avatar\"\r\n              textSizeRatio={2.4}\r\n            />\r\n            <input\r\n              id=\"name\"\r\n              placeholder=\"Add title...\"\r\n              value={fields.name}\r\n              onChange={handleFieldChange}\r\n              disabled={!editMode}\r\n            />\r\n          </div>\r\n          <div className=\"sideview-content-item\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              id=\"email\"\r\n              placeholder=\"Email...\"\r\n              value={fields.email}\r\n              onChange={handleFieldChange}\r\n              disabled={!editMode}\r\n            />\r\n          </div>\r\n          <div className=\"sideview-content-item\">\r\n            <label htmlFor=\"job\">Job</label>\r\n            <select\r\n              id=\"job\"\r\n              className={editMode ? undefined : \"hide-icon\"}\r\n              value={fields.job}\r\n              onChange={handleFieldChange}\r\n              disabled={!editMode}\r\n            >\r\n              <option value=\"Front-end developer\">Front-end developer</option>\r\n              <option value=\"Back-end developer\">Back-end developer</option>\r\n              <option value=\"Sales\">Sales</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"sideview-content-item\">\r\n            <label htmlFor=\"location\">Location</label>\r\n            <select\r\n              id=\"location\"\r\n              className={editMode ? undefined : \"hide-icon\"}\r\n              value={fields.location}\r\n              onChange={handleFieldChange}\r\n              disabled={!editMode}\r\n            >\r\n              <option value=\"Leeuwarden\">Leeuwarden</option>\r\n              <option value=\"Groningen\">Groningen</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"sideview-content-item\">\r\n            <label htmlFor=\"role\">Role</label>\r\n            <select\r\n              id=\"role\"\r\n              className={editMode ? undefined : \"hide-icon\"}\r\n              value={fields.role}\r\n              onChange={handleFieldChange}\r\n              disabled={!editMode}\r\n            >\r\n              <option value=\"User\">User</option>\r\n              <option value=\"Supervisor\">Supervisor</option>\r\n              <option value=\"Admin\">Admin</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"sideview-content-item\">\r\n            <label htmlFor=\"coached-by\">Coached By</label>\r\n            <div id=\"coached-by\">\r\n              <div className=\"tag\">Henk Holtrop</div>\r\n              <div className=\"tag\">Lennart Alserda</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"sideview-content-item\">\r\n            <label htmlFor=\"coached-by\">Assigned to</label>\r\n            <div id=\"coached-by\">\r\n              <div className=\"tag\">React.Js</div>\r\n              <div className=\"tag\">Jira</div>\r\n              <div className=\"tag\">Alserda</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"sideview-content-item\">\r\n            <label htmlFor=\"coached-by\">Completed</label>\r\n            <div id=\"coached-by\">\r\n              <div className=\"tag\">Drupal</div>\r\n              <div className=\"tag\">Angular</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideView;\r\n","import React, { useState, useEffect, FormEvent } from \"react\";\r\nimport { IActivity } from \"data/activity\";\r\nimport { sideviewIcons } from \"data/featherIcons\";\r\nimport { useTypedDispatch } from \"hooks/useTypedDispatch\";\r\n\r\nimport { getUsers, register, editUser, deleteUser } from \"store/users/actions\";\r\nimport { useFormFields } from \"hooks/useFormFields\";\r\nimport { IUser } from \"data/user\";\r\nimport Avatar from \"react-avatar\";\r\n\r\nconst InitialState: IUser = {\r\n  id: 1,\r\n  name: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  job: \"Back-end developer\",\r\n  location: \"Groningen\",\r\n  role: \"Admin\",\r\n  updatedAt: new Date()\r\n};\r\n\r\ninterface IProps {\r\n  setNewMode: any;\r\n  setSelected: any;\r\n}\r\n\r\nexport const SideView: React.FunctionComponent<IProps> = (props) => {\r\n  const { setNewMode, setSelected } = props;\r\n\r\n  const dispatch = useTypedDispatch();\r\n  const [fields, handleFieldChange, setForm] = useFormFields(InitialState);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const tabs = [\"Colleague\", \"Coached by\"];\r\n  const [tabMode, setTabMode] = useState(0);\r\n\r\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      await register(fields).then(setNewMode(false), setSelected(fields))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"sideview-functions\">\r\n        <div className=\"item\"></div>\r\n      </div>\r\n      <div className=\"sideview-item\">\r\n        <div className=\"sideview-item-menus\">\r\n          {/* Show all tabs and set selected class  */}\r\n          <div className=\"tabs\">\r\n            {tabs.map((tab, index) => (\r\n              <div\r\n                key={index}\r\n                className={index === tabMode ? \"tab selected\" : \"tab\"}\r\n              >\r\n                <a onClick={() => setTabMode(index)}>{tab}</a>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"action\">\r\n            <input type=\"submit\" value=\"add\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"sideview-content\">\r\n          <div className=\"sideview-content-title\">\r\n            <Avatar\r\n              name={fields.name}\r\n              size=\"100\"\r\n              maxInitials={2}\r\n              round={\"20px\"}\r\n              className=\"avatar\"\r\n              textSizeRatio={2.4}\r\n            />\r\n            <input\r\n              id=\"name\"\r\n              placeholder=\"Name...\"\r\n              value={fields.name}\r\n              onChange={handleFieldChange}\r\n            />\r\n          </div>\r\n          <div className=\"sideview-content-item\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              id=\"email\"\r\n              placeholder=\"Email...\"\r\n              value={fields.email}\r\n              onChange={handleFieldChange}\r\n            />\r\n          </div>\r\n          <div className=\"sideview-content-item\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              id=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Password...\"\r\n              value={fields.password}\r\n              onChange={handleFieldChange}\r\n            />\r\n          </div>\r\n          <div className=\"sideview-content-item\">\r\n            <label htmlFor=\"job\">Job</label>\r\n            <select id=\"job\" value={fields.job} onChange={handleFieldChange}>\r\n              <option value=\"Front-end developer\">Front-end developer</option>\r\n              <option value=\"Back-end developer\">Back-end developer</option>\r\n              <option value=\"Sales\">Sales</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"sideview-content-item\">\r\n            <label htmlFor=\"location\">Location</label>\r\n            <select\r\n              id=\"location\"\r\n              value={fields.location}\r\n              onChange={handleFieldChange}\r\n            >\r\n              <option value=\"Leeuwarden\">Leeuwarden</option>\r\n              <option value=\"Groningen\">Groningen</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"sideview-content-item\">\r\n            <label htmlFor=\"role\">Role</label>\r\n            <select id=\"role\" value={fields.role} onChange={handleFieldChange}>\r\n              <option value=\"User\">User</option>\r\n              <option value=\"Supervisor\">Supervisor</option>\r\n              <option value=\"Admin\">Admin</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"sideview-content-item\">\r\n            <label htmlFor=\"coached-by\">Coached By</label>\r\n            <div id=\"coached-by\">\r\n              <div className=\"tag\">Henk Holtrop</div>\r\n              <div className=\"tag\">Lennart Alserda</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"sideview-content-item\">\r\n            <label htmlFor=\"coached-by\">Assigned to</label>\r\n            <div id=\"coached-by\">\r\n              <div className=\"tag\">React.Js</div>\r\n              <div className=\"tag\">Jira</div>\r\n              <div className=\"tag\">Alserda</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"sideview-content-item\">\r\n            <label htmlFor=\"coached-by\">Completed</label>\r\n            <div id=\"coached-by\">\r\n              <div className=\"tag\">Drupal</div>\r\n              <div className=\"tag\">Angular</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SideView;\r\n","import React, { useState, FormEvent, useEffect } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n\r\nimport { getUsers, register, editUser, deleteUser } from \"store/users/actions\";\r\nimport { useTypedSelector } from \"store/_reducers\";\r\nimport { IUser, IUserState } from \"data/user\";\r\nimport { useDivider } from \"hooks/useDivider\";\r\nimport Header from \"components/UI/Header\";\r\nimport List from \"components/UI/List\";\r\nimport Divider from \"components/UI/Divider\";\r\nimport SideView from \"components/Users/SideView\";\r\nimport NewSideView from \"components/Users/NewSideView\";\r\n\r\nimport { useFormFields } from \"hooks/useFormFields\";\r\nimport { usersHeaderData } from \"data/headerData\";\r\n\r\ntype Props = RouteComponentProps<void, {}, IUserState>;\r\n\r\nexport const Admin: React.FC<Props> = () => {\r\n  const users = useTypedSelector((state) => state.userReducer.users);\r\n  const [selected, setSelected] = useState<IUser>(users[0]);\r\n  const [searchResults, setSearchResults] = useState(users);\r\n\r\n  const [newMode, setNewMode] = useState(false);\r\n  const [dividerState, toggleDivider] = useDivider();\r\n  const [deleting, setDeleting] = useState(false);\r\n\r\n  // Kan beter in de header\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    searchTerm: \"\",\r\n  });\r\n\r\n  // Find object in array by value\r\n  useEffect(() => {\r\n    const results = users.filter((obj: any) => {\r\n      return Object.keys(obj).some((key) => {\r\n        if (obj[key] !== null) {\r\n          const tempKey = obj[key].toString().toLowerCase();\r\n          const tempSearch = fields.searchTerm.toLowerCase();\r\n          return tempKey.includes(tempSearch);\r\n        }\r\n      });\r\n    });\r\n    setSearchResults(results);\r\n  }, [fields.searchTerm]);\r\n\r\n  // Update searchResults if activities has been updated, couse we are mapping the searchResults\r\n  useEffect(() => {\r\n    setSearchResults(users);\r\n    // if (deleting) {\r\n    setSelected(users[0]);\r\n    setDeleting(false);\r\n    // }\r\n  }, [users]);\r\n\r\n  // Change sideViews by mode number\r\n  const [sideView, setSideView] = useState(\r\n    <SideView\r\n      selected={selected}\r\n      setSelected={setSelected}\r\n      setDeleting={setDeleting}\r\n    />\r\n  );\r\n  useEffect(() => {\r\n    if (newMode) {\r\n      setSideView(\r\n        <NewSideView setNewMode={setNewMode} setSelected={setSelected} />\r\n      );\r\n    } else {\r\n      setSideView(\r\n        <SideView\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n          setDeleting={setDeleting}\r\n        />\r\n      );\r\n    }\r\n  }, [selected, newMode]);\r\n\r\n  return (\r\n    <section className={dividerState ? \"container collapsed\" : \"container\"}>\r\n      {/* LEFT */}\r\n      <div className=\"content-list\">\r\n        <Header\r\n          headerData={usersHeaderData}\r\n          searchTerm={fields.searchTerm}\r\n          handleFieldChange={handleFieldChange}\r\n          setNewMode={setNewMode}\r\n          count={users.length}\r\n        />\r\n        <List\r\n          listItems={searchResults}\r\n          searchTerm={fields.searchTerm}\r\n          setSearchResults={setSearchResults}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n          setNewMode={setNewMode}\r\n        />\r\n      </div>\r\n      <div className=\"content-divider\">\r\n        <Divider dividerState={dividerState} toggleDivider={toggleDivider} />\r\n      </div>\r\n\r\n      {/* RIGHT */}\r\n      <div className=\"content-right\">{sideView}</div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import { IUser, IUserState } from \"data/user\";\r\n\r\nexport type Type = \"Hard-skill\" | \"Soft-skill\";\r\nexport type Color =\r\n  | \"#FFB6B6\"\r\n  | \"#AACFCF\"\r\n  | \"#856C8B\"\r\n  | \"#D4EBD0\"\r\n  | \"#A4C5C6\"\r\n  | \"#FFEB99\"\r\n  | \"#F19292\"\r\n  | \"#B590CA\"\r\n  | \"#D45079\"\r\n  | \"#81F5FF\"\r\n  | \"#BEEBE9\"\r\n  | \"#F1935C\"\r\n  | \"#E9E2D0\"\r\n  | \"#F5CAB3\"\r\n  | \"#DCD6F7\";\r\n\r\nexport const colors = [\r\n  \"#FFB6B6\",\r\n  \"#AACFCF\",\r\n  \"#856C8B\",\r\n  \"#D4EBD0\",\r\n  \"#A4C5C6\",\r\n  \"#F19292\",\r\n  \"#B590CA\",\r\n  \"#D45079\",\r\n  \"#81F5FF\",\r\n  \"#BEEBE9\",\r\n  \"#F1935C\",\r\n  \"#E9E2D0\",\r\n  \"#F5CAB3\",\r\n  \"#DCD6F7\",\r\n];\r\n\r\nexport interface IGoal {\r\n  id: number;\r\n  title: string;\r\n  color: Color;\r\n  type: Type;\r\n  assignedTo: IUser[];\r\n  achievedBy: IUser[];\r\n  activityIds: number[];\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n  achievedAt: Date | null;\r\n}\r\n\r\nexport interface IGoalState {\r\n  goals: IGoal[];\r\n}\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { IGoal, Color, colors } from \"data/goal\";\r\nimport { sideviewIcons } from \"data/featherIcons\";\r\nimport { useTypedDispatch } from \"hooks/useTypedDispatch\";\r\n\r\nimport { editGoal } from \"store/goals/actions\";\r\nimport { removeGoal } from \"store/goals/actions\";\r\nimport { useFormFields } from \"hooks/useFormFields\";\r\nimport Avatar from \"react-avatar\";\r\nimport Moment from \"react-moment\";\r\nimport \"moment-timezone\";\r\n\r\ninterface IProps {\r\n  selected: IGoal;\r\n  setSelected: any;\r\n  setDeleting: any;\r\n}\r\n\r\nexport const SideView: React.FunctionComponent<IProps> = (props) => {\r\n  const {\r\n    id,\r\n    title,\r\n    color,\r\n    type,\r\n    assignedTo,\r\n    achievedBy,\r\n    createdAt,\r\n    updatedAt,\r\n    achievedAt,\r\n  } = props.selected;\r\n  const { selected, setSelected, setDeleting } = props;\r\n\r\n  const dispatch = useTypedDispatch();\r\n  const [fields, handleFieldChange, setForm] = useFormFields(selected);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editIcon, deleteIcon] = sideviewIcons;\r\n  const [lastEdit, setLastEdit] = useState(updatedAt);\r\n\r\n  const tabs = [\"Goal\", \"Colleagues\"];\r\n  const [tabMode, setTabMode] = useState(0);\r\n  const [selectedColor, setSelectedColor] = useState(color as string);\r\n\r\n  useEffect(() => {\r\n    setEditMode(false);\r\n    // setEditorBody(body);\r\n    setSelectedColor(color);\r\n    setForm(selected);\r\n  }, [selected]);\r\n\r\n  useEffect(() => {\r\n    if (editMode) {\r\n      let timer = setTimeout(() => {\r\n        setLastEdit(new Date());\r\n        dispatch(\r\n          editGoal({ ...fields, color: selectedColor, updatedAt: lastEdit })\r\n        );\r\n      }, 1000);\r\n      return () => {\r\n        clearTimeout(timer);\r\n        setSelected(selected);\r\n      };\r\n    }\r\n  }, [fields, selectedColor]);\r\n\r\n  const deleteItem = () => {\r\n    setDeleting(true);\r\n    dispatch(removeGoal(id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"sideview-functions\">\r\n        <div className=\"item\">\r\n          Edited <Moment fromNow>{lastEdit}</Moment>\r\n        </div>\r\n        <div\r\n          className={editMode ? \"item edit active\" : \"item edit\"}\r\n          onClick={() => setEditMode(!editMode)}\r\n        >\r\n          {editIcon}\r\n        </div>\r\n        <div className=\"item delete\" onClick={deleteItem}>\r\n          {deleteIcon}\r\n        </div>\r\n      </div>\r\n      <div className=\"sideview-item\">\r\n        <div className=\"sideview-item-menus\">\r\n          {/* Show all tabs and set selected class  */}\r\n          <div className=\"tabs\">\r\n            {tabs.map((tab, index) => (\r\n              <div\r\n                key={index}\r\n                className={index === tabMode ? \"tab selected\" : \"tab\"}\r\n              >\r\n                <a onClick={() => setTabMode(index)}>{tab}</a>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"sideview-content\">\r\n          <div className=\"sideview-content-title\">\r\n            <Avatar\r\n              name={fields.title}\r\n              size=\"100\"\r\n              maxInitials={2}\r\n              round={\"20px\"}\r\n              className=\"avatar\"\r\n              color={selectedColor}\r\n              textSizeRatio={2.4}\r\n            />\r\n            <input\r\n              id=\"title\"\r\n              placeholder=\"Add title...\"\r\n              value={fields.title}\r\n              onChange={handleFieldChange}\r\n              disabled={!editMode}\r\n            />\r\n          </div>\r\n          <div className=\"sideview-content-item col\">\r\n            <label htmlFor=\"goal-color\">Goal Color</label>\r\n            <div id=\"goal-color\">\r\n              {colors.map((item, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={\r\n                    item === selectedColor\r\n                      ? \"color-item selected\"\r\n                      : \"color-item\"\r\n                  }\r\n                  style={{\r\n                    backgroundColor: item,\r\n                  }}\r\n                  onClick={() => editMode ? setSelectedColor(item) : null}\r\n                ></div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"sideview-content-item col\">\r\n            <label htmlFor=\"type\">Type</label>\r\n            <select\r\n              id=\"type\"\r\n              className={editMode ? undefined : \"hide-icon\"}\r\n              value={fields.type}\r\n              onChange={handleFieldChange}\r\n              disabled={!editMode}\r\n            >\r\n              <option value=\"Hard-skill\">Hard-skill</option>\r\n              <option value=\"Soft-skill\">Soft-skill</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideView;\r\n","import { IPureAction } from \"store/types\";\r\nimport { ActionTypes } from \"data/actionTypes\";\r\nimport { IGoal, IGoalState } from \"data/goal\";\r\nimport API from \"store/api\";\r\nimport { store } from \"_helpers\";\r\n\r\n// Fetch request to API\r\nexport const fetchGoalsRequest = async () => {\r\n  try {\r\n    const response = await API.get(`posts`);\r\n    return store.dispatch(fetchSuccess(response.data));\r\n  } catch (error) {\r\n    console.log(error);\r\n    return store.dispatch(fetchError(error));\r\n  }\r\n};\r\n\r\n// Set activities\r\nexport const fetchSuccess = (\r\n  data: IGoalState\r\n): IPureAction<ActionTypes.GET_GOALS_SUCCESS, IGoalState> => ({\r\n  type: ActionTypes.GET_GOALS_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\n// Error if fetch has failed\r\nexport const fetchError = (\r\n  error: Error\r\n): IPureAction<ActionTypes.GET_GOALS_FAILURE, Error> => ({\r\n  type: ActionTypes.GET_GOALS_FAILURE,\r\n  payload: error,\r\n});\r\n\r\n// Add new goal\r\nexport const addGoal = (\r\n  data: IGoal\r\n): IPureAction<ActionTypes.ADD_GOAL, IGoal> => ({\r\n  type: ActionTypes.ADD_GOAL,\r\n  payload: data,\r\n});\r\n\r\n// Edit goal\r\nexport const editGoal = (\r\n  data: IGoal\r\n): IPureAction<ActionTypes.EDIT_GOAL, IGoal> => ({\r\n  type: ActionTypes.EDIT_GOAL,\r\n  payload: data,\r\n});\r\n\r\n// Remove Goal\r\nexport const removeGoal = (\r\n  id: number\r\n): IPureAction<ActionTypes.REMOVE_GOAL, Number> => ({\r\n  type: ActionTypes.REMOVE_GOAL,\r\n  payload: id,\r\n});\r\n\r\n// Remove Goal\r\nexport const getGoalById = (\r\n  id: number\r\n): IPureAction<ActionTypes.GET_GOAL_BY_ID, Number> => ({\r\n  type: ActionTypes.GET_GOAL_BY_ID,\r\n  payload: id,\r\n});\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useCallback,\r\n  FormEvent,\r\n} from \"react\";\r\nimport { IGoal, Color, colors } from \"data/goal\";\r\nimport { sideviewIcons } from \"data/featherIcons\";\r\nimport { useTypedDispatch } from \"hooks/useTypedDispatch\";\r\n\r\nimport { addGoal } from \"store/goals/actions\";\r\nimport { useFormFields } from \"hooks/useFormFields\";\r\nimport Avatar from \"react-avatar\";\r\nimport Moment from \"react-moment\";\r\nimport \"moment-timezone\";\r\n\r\nconst InitialState: IGoal = {\r\n  id: 1,\r\n  title: \"\",\r\n  color: \"#81F5FF\",\r\n  type: \"Hard-skill\",\r\n  assignedTo: [],\r\n  achievedBy: [],\r\n  activityIds: [],\r\n  createdAt: new Date(),\r\n  updatedAt: new Date(),\r\n  achievedAt: null,\r\n};\r\n\r\ninterface IProps {\r\n  setNewMode: any;\r\n  setSelected: any;\r\n}\r\n\r\nexport const SideView: React.FunctionComponent<IProps> = (props) => {\r\n  const { setNewMode, setSelected } = props;\r\n\r\n  const dispatch = useTypedDispatch();\r\n  const [fields, handleFieldChange, setForm] = useFormFields(InitialState);\r\n\r\n  const tabs = [\"Goal\", \"Colleagues\"];\r\n  const [tabMode, setTabMode] = useState(0);\r\n  const [selectedColor, setSelectedColor] = useState(\r\n    InitialState.color as string\r\n  );\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(addGoal({ ...fields, color: selectedColor }));\r\n    setNewMode(false);\r\n    setSelected(fields);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"sideview-functions\">\r\n        <div className=\"item\"></div>\r\n      </div>\r\n      <div className=\"sideview-item\">\r\n        <div className=\"sideview-item-menus\">\r\n          {/* Show all tabs and set selected class  */}\r\n          <div className=\"tabs\">\r\n            {tabs.map((tab, index) => (\r\n              <div\r\n                key={index}\r\n                className={index === tabMode ? \"tab selected\" : \"tab\"}\r\n              >\r\n                <a onClick={() => setTabMode(index)}>{tab}</a>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"action\">\r\n            <input type=\"submit\" value=\"add\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"sideview-content\">\r\n          <div className=\"sideview-content-title\">\r\n            <Avatar\r\n              name={fields.title}\r\n              size=\"100\"\r\n              maxInitials={2}\r\n              round={\"20px\"}\r\n              className=\"avatar\"\r\n              color={selectedColor}\r\n              textSizeRatio={2.4}\r\n            />\r\n            <input\r\n              id=\"title\"\r\n              placeholder=\"Add title...\"\r\n              value={fields.title}\r\n              onChange={handleFieldChange}\r\n            />\r\n          </div>\r\n          <div className=\"sideview-content-item col\">\r\n            <label htmlFor=\"goal-color\">Goal Color</label>\r\n            <div id=\"goal-color\">\r\n              {colors.map((item, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={\r\n                    item === selectedColor\r\n                      ? \"color-item selected\"\r\n                      : \"color-item\"\r\n                  }\r\n                  style={{\r\n                    backgroundColor: item,\r\n                  }}\r\n                  onClick={() => setSelectedColor(item)}\r\n                ></div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"sideview-content-item col\">\r\n            <label htmlFor=\"type\">Type</label>\r\n            <select id=\"type\" value={fields.type} onChange={handleFieldChange}>\r\n              <option value=\"Hard-skill\">Hard-skill</option>\r\n              <option value=\"Soft-skill\">Soft-skill</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SideView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { useTypedSelector } from \"store/_reducers\";\r\nimport { useFormFields } from \"hooks/useFormFields\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\n\r\nimport { IGoal } from \"data/goal\";\r\nimport { goalsHeaderData } from \"data/headerData\";\r\nimport { useDivider } from \"hooks/useDivider\";\r\nimport Header from \"components/UI/Header\";\r\nimport List from \"components/UI/List\";\r\nimport Divider from \"components/UI/Divider\";\r\nimport SideView from \"components/Goals/SideView\";\r\nimport NewSideView from \"components/Goals/NewSideView\";\r\n\r\nexport const Goals: React.FunctionComponent<RouteComponentProps> = () => {\r\n  const goals = useTypedSelector((state) => state.goalReducer.goals);\r\n  const [selected, setSelected] = useState<IGoal>(goals[0]);\r\n  const [searchResults, setSearchResults] = useState(goals);\r\n\r\n  const [newMode, setNewMode] = useState(false);\r\n  const [dividerState, toggleDivider] = useDivider();\r\n  const [deleting, setDeleting] = useState(false);\r\n\r\n  // Kan beter in de header\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    searchTerm: \"\",\r\n  });\r\n\r\n  // Find object in array by value\r\n  useEffect(() => {\r\n    const results = goals.filter((obj: any) => {\r\n      return Object.keys(obj).some((key) => {\r\n        if (obj[key] !== null) {\r\n          const tempKey = obj[key].toString().toLowerCase();\r\n          const tempSearch = fields.searchTerm.toLowerCase();\r\n          return tempKey.includes(tempSearch);\r\n        }\r\n      });\r\n    });\r\n    setSearchResults(results);\r\n  }, [fields.searchTerm]);\r\n\r\n  // Update searchResults if activities has been updated, couse we are mapping the searchResults\r\n  useEffect(() => {\r\n    setSearchResults(goals);\r\n    if (deleting) {\r\n      setSelected(goals[0]);\r\n      setDeleting(false);\r\n    }\r\n  }, [goals]);\r\n\r\n  // Change sideViews by mode number\r\n  const [sideView, setSideView] = useState(\r\n    <SideView\r\n      selected={selected}\r\n      setSelected={setSelected}\r\n      setDeleting={setDeleting}\r\n    />\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (newMode) {\r\n      setSideView(\r\n        <NewSideView setNewMode={setNewMode} setSelected={setSelected} />\r\n      );\r\n    } else {\r\n      setSideView(\r\n        <SideView\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n          setDeleting={setDeleting}\r\n        />\r\n      );\r\n    }\r\n  }, [selected, newMode]);\r\n\r\n  return (\r\n    <section className={dividerState ? \"container collapsed\" : \"container\"}>\r\n      {/* LEFT */}\r\n      <div className=\"content-list\">\r\n        <Header\r\n          headerData={goalsHeaderData}\r\n          searchTerm={fields.searchTerm}\r\n          handleFieldChange={handleFieldChange}\r\n          setNewMode={setNewMode}\r\n          count={goals.length}\r\n        />\r\n        <List\r\n          listItems={searchResults}\r\n          searchTerm={fields.searchTerm}\r\n          setSearchResults={setSearchResults}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n          setNewMode={setNewMode}\r\n        />\r\n      </div>\r\n      <div className=\"content-divider\">\r\n        <Divider dividerState={dividerState} toggleDivider={toggleDivider} />\r\n      </div>\r\n\r\n      {/* RIGHT */}\r\n      <div className=\"content-right\">{sideView}</div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Goals;\r\n","import React, { useState, FormEvent, useEffect } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n\r\nimport { getUsers, register, editUser, deleteUser } from \"store/users/actions\";\r\nimport { useTypedSelector } from \"store/_reducers\";\r\nimport { Roles, IUser, IUserState } from \"data/user\";\r\nimport Input from \"./UI/Input\";\r\nimport Header from \"components/UI/Header\";\r\n\r\ntype Props = RouteComponentProps<void, {}, IUserState>;\r\n\r\nexport const Admin: React.FC<Props> = () => {\r\n  const users = useTypedSelector((state) => state.userReducer.users);\r\n  const [edit, setEdit] = useState(false);\r\n  const initialState: IUser = {\r\n    id: 0,\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    job: \"Front-end developer\",\r\n    location: \"Leeuwarden\",\r\n    role: \"Admin\",\r\n    updatedAt: new Date()\r\n  };\r\n\r\n  const [inputFields, setInputFields] = useState(initialState);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  // Get users for the first time\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!edit) {\r\n      setInputFields(initialState);\r\n    }\r\n  }, [edit]);\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    setSubmitted(true);\r\n    if (inputFields && !edit) {\r\n      register(inputFields);\r\n      setInputFields(initialState);\r\n    } else {\r\n      editUser(inputFields);\r\n    }\r\n  };\r\n\r\n  const handleEditUser = (user: IUser) => {\r\n    setEdit(true);\r\n    setInputFields(user);\r\n  };\r\n\r\n  const handleRemoveUser = (id: number) => {\r\n    deleteUser(id);\r\n  };\r\n\r\n  return (\r\n    <section className=\"admin-page\">\r\n      <form name=\"form\" className=\"register-form\" onSubmit={handleSubmit}>\r\n        <h2>New user</h2>\r\n        <div\r\n          className={\r\n            \"form-group\" + (submitted && !inputFields.name ? \" has-error\" : \"\")\r\n          }\r\n        >\r\n          <label htmlFor=\"name\">Name</label>\r\n          <Input\r\n            id=\"name\"\r\n            name=\"name\"\r\n            className=\"form-control\"\r\n            value={inputFields.name}\r\n            onChange={({ target }) =>\r\n              setInputFields({ ...inputFields, name: target.value })\r\n            }\r\n          />\r\n          {submitted && !inputFields.name && (\r\n            <div className=\"help-block\">Name is required</div>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={\r\n            \"form-group\" + (submitted && !inputFields.email ? \" has-error\" : \"\")\r\n          }\r\n        >\r\n          <label htmlFor=\"email\">Email</label>\r\n          <Input\r\n            id=\"email\"\r\n            name=\"email\"\r\n            className=\"form-control\"\r\n            value={inputFields.email}\r\n            onChange={({ target }) =>\r\n              setInputFields({ ...inputFields, email: target.value })\r\n            }\r\n          />\r\n          {submitted && !inputFields.email && (\r\n            <div className=\"help-block\">Email is required</div>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={\r\n            \"form-group\" +\r\n            (submitted && !inputFields.password ? \" has-error\" : \"\")\r\n          }\r\n        >\r\n          <label htmlFor=\"password\">Password</label>\r\n          <Input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            className=\"form-control\"\r\n            value={inputFields.password}\r\n            onChange={({ target }) =>\r\n              setInputFields({ ...inputFields, password: target.value })\r\n            }\r\n          />\r\n          {submitted && !inputFields.password && (\r\n            <div className=\"help-block\">Password is required</div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"role\">Role</label>\r\n          <select\r\n            id=\"role\"\r\n            value={inputFields.role}\r\n            onChange={({ target }) =>\r\n              setInputFields({ ...inputFields, role: target.value as Roles })\r\n            }\r\n          >\r\n            <option value=\"User\">User</option>\r\n            <option value=\"Admin\">Admin</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button className=\"btn btn-primary\">\r\n            {edit ? \"Edit\" : \"Add new\"}{\" \"}\r\n            {inputFields.role == \"User\" ? \"User\" : \"Admin\"}\r\n          </button>\r\n          {edit && <button onClick={() => setEdit(false)}>Cancel</button>}\r\n        </div>\r\n      </form>\r\n      <h3>All registered users:</h3>\r\n      {users && (\r\n        <ul>\r\n          {users.map((user: IUser) => (\r\n            <li key={user.id}>\r\n              <a onClick={() => handleEditUser(user)}>\r\n                {user.name + \" \" + \" | role: \" + user.role}\r\n              </a>\r\n              <span>\r\n                {\" \"}\r\n                - <a onClick={() => handleRemoveUser(user.id)}>Delete</a>\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { RouteComponentProps, Link } from \"react-router-dom\";\r\nimport { useTypedSelector } from \"store/_reducers\";\r\n\r\nimport { routes } from \"data/routes\";\r\nimport { useTheme } from \"hooks/useTheme\";\r\nimport { usePrimaryColor } from \"hooks/usePrimaryColor\";\r\nimport { colors } from \"data/goal\"\r\n\r\nexport const Profile: React.FunctionComponent<RouteComponentProps> = () => {\r\n  const profile = useTypedSelector(state => state.authenticationReducer.user);\r\n  const [theme, toggleTheme] = useTheme();\r\n  const { email, name } = profile;\r\n\r\n  const [color, setColor, changeColor] = usePrimaryColor();\r\n\r\n  return (\r\n    <section className=\"profile-page\">\r\n      <label>\r\n        Dark Mode:\r\n          <input\r\n          name=\"isGoing\"\r\n          type=\"checkbox\"\r\n          checked={theme}\r\n          onChange={toggleTheme} />\r\n      </label>\r\n      <div>{email}</div>\r\n      {/* {colors.map(item => {\r\n        <div onClick={() => changeColor(item)}></div>\r\n      })} */}\r\n      <input type=\"text\" value={color} onChange={e => changeColor(e.target.value)} />\r\n      <div>{name}</div>\r\n      <div>password</div>\r\n      <div>repeat password</div>\r\n      <Link to={routes.Login} className=\"logout\"><i>Log uit</i></Link>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Switch } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { store } from \"_helpers\";\r\nimport { routes } from \"data/routes\";\r\nimport { fetchActivitiesRequest } from \"store/activities/actions\";\r\nimport { getUsers } from \"store/users/actions\";\r\n\r\nimport \"assets/css/index.scss\";\r\nimport LoginLayout from \"layouts/LoginLayout\";\r\nimport MainLayout from \"layouts/MainLayout\";\r\nimport { AppRoute } from \"components/UI/AppRoute\";\r\n\r\nimport { PrivateRoute } from \"components/UI/PrivateRoute\";\r\n\r\nimport Login from \"components/Login\";\r\nimport Activities from \"components/Activities\";\r\nimport Users from \"components/Users\";\r\nimport Goals from \"components/Goals\";\r\nimport UsersOld from \"components/UsersOld\";\r\nimport Profile from \"components/Profile\";\r\n\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\n// setup fake backend\r\nimport { configureFakeBackend } from \"./_helpers/fake-backend\";\r\nconfigureFakeBackend();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <AppRoute\r\n          exact\r\n          path={routes.Home}\r\n          component={Activities}\r\n          layout={MainLayout}\r\n        />\r\n        <AppRoute\r\n          exact\r\n          path={routes.Users}\r\n          component={Users}\r\n          layout={MainLayout}\r\n        />\r\n        <AppRoute\r\n          exact\r\n          path={routes.UsersOld}\r\n          component={UsersOld}\r\n          layout={MainLayout}\r\n        />\r\n        <AppRoute\r\n          exact\r\n          path={routes.Goals}\r\n          component={Goals}\r\n          layout={MainLayout}\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path={routes.Profile}\r\n          component={Profile}\r\n          layout={MainLayout}\r\n        />\r\n        <AppRoute\r\n          exact\r\n          path={routes.Login}\r\n          component={Login}\r\n          layout={LoginLayout}\r\n        />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nfetchActivitiesRequest();\r\ngetUsers();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { ReactNode, ComponentType } from \"react\";\r\nimport {\r\n  Route,\r\n  Redirect,\r\n  RouteProps,\r\n  RouteComponentProps\r\n} from \"react-router-dom\";\r\n\r\ninterface IPrivateRouteProps extends RouteProps {\r\n  component: ComponentType<any>,\r\n  layout: ComponentType\r\n}\r\n\r\nexport const PrivateRoute = (props: IPrivateRouteProps) => {\r\n  const { component: Component, layout: Layout, ...rest } = props;\r\n\r\n  if (!Component) {\r\n    throw Error(\"component is undefined\");\r\n  }\r\n\r\n  const render = (props: RouteComponentProps<any>): ReactNode => {\r\n    if (localStorage.getItem(\"user\")) {\r\n      return <Layout>\r\n        <Component {...props} />\r\n      </Layout>;\r\n    }\r\n    return (\r\n      <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\r\n    );\r\n  };\r\n\r\n  return <Route {...rest} render={render} />;\r\n};"],"sourceRoot":""}