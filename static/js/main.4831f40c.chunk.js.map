{"version":3,"sources":["assets/img/John-Doe.jpg","_helpers/fake-backend.js","data/actionTypes.ts","_helpers/createReducer.ts","store/users/mutations.ts","store/_reducers/authentication.reducer.ts","store/_reducers/entry.reducer.ts","store/entries/mutations.ts","store/_reducers/user.reducer.ts","store/_reducers/index.ts","_helpers/store.ts","_helpers/auth-header.js","data/routes.ts","store/api.js","store/entries/actions.ts","layouts/LoginLayout.tsx","data/featherIcons.js","components/UI/Menu.tsx","layouts/MainLayout.tsx","components/UI/AppRoute.tsx","components/UI/PrivateRoute.tsx","hooks/useFormFields.js","components/Activities/Header.tsx","components/Activities/List.tsx","hooks/useTypedDispatch.ts","components/Activities/SideView.tsx","components/Activities/EditSideView.tsx","components/Activities/NewSideView.tsx","components/Activities.tsx","_services/user.service.js","store/users/actions.ts","components/UI/Input.tsx","components/Login.tsx","components/Admin.tsx","components/Entry/Entry.tsx","components/Entry/EntryTest.tsx","components/Entries.tsx","components/UI/Editor.js","components/Entry/EditEntry.tsx","components/Entry/AddEntry.tsx","components/Settings.tsx","components/Profile.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","users","JSON","parse","localStorage","getItem","ActionTypes","createReducer","initialState","handlers","state","action","type","payload","user","authenticationReducer","loggingIn","error","undefined","LOGIN_REQUEST","data","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","LOGOUT_SUCCESS","LOGOUT_FAILURE","entryReducer","entries","id","title","body","date","categoryId","userId","GET_ENTRIES_SUCCESS","newEntry","concat","GET_ENTRIES_FAILURE","ADD_ENTRY","EDIT_ENTRY","updatedItems","map","entry","REMOVE_ENTRY","console","log","filter","GET_ENTRY_BY_ID","userReducer","loading","deleting","registering","editing","REGISTER_REQUEST","REGISTER_SUCCESS","newUsers","REGISTER_FAILURE","GET_USERS_REQUEST","GET_USERS_SUCCESS","GET_USERS_FAILURE","EDIT_USER_REQUEST","EDIT_USER_SUCCESS","EDIT_USER_FAILURE","REMOVE_USER_REQUEST","REMOVE_USER_SUCCESS","REMOVE_USER_FAILURE","rootReducer","combineReducers","useTypedSelector","useSelector","actionTypeEnumToString","logger","createLogger","actionTransformer","composeEnhancers","composeWithDevTools","actionSanitizer","store","createStore","applyMiddleware","thunkMiddleware","authHeader","token","Authorization","routes","axios","create","baseURL","fetchEntriesRequest","a","API","get","response","dispatch","fetchSuccess","fetchError","addEntry","editEntry","removeEntry","LoginLayout","props","className","children","menuIcons","headerIcons","sideviewIcons","Menu","homeIcon","usersIcon","goalIcon","ActivityIcon","role","exact","to","src","johnDoe","alt","MainLayout","AppRoute","Component","component","Layout","layout","rest","render","PrivateRoute","Error","pathname","from","location","useFormFields","useState","fields","setValues","event","target","value","Header","searchTerm","handleFieldChange","setMode","count","plusIcon","onClick","placeholder","onChange","List","selected","setSelected","activity","key","selectActivity","useTypedDispatch","useDispatch","SideView","editIcon","deleteIcon","tabMode","setTabMode","tab","index","EditSideView","Date","toJSON","slice","replace","useEffect","timer","setTimeout","clearTimeout","onSubmit","e","preventDefault","NewSideView","Math","floor","random","Activities","activities","searchResults","setSearchResults","mode","results","obj","Object","keys","some","tempKey","toString","toLowerCase","tempSearch","includes","sideView","setSideView","length","userService","login","username","password","requestOptions","method","headers","stringify","fetch","then","handleResponse","setItem","logout","register","getAll","getById","update","delete","removeItem","text","ok","status","message","statusText","Promise","reject","registerRequest","registerSuccess","registerFailure","history","loginRequest","loginSuccess","push","loginFailure","logoutSuccess","logoutFailure","getUsers","getUsersRequest","getUsersSuccess","getUsersFailure","editUser","editUserRequest","editUserSuccess","editUserFailure","deleteUser","deleteUserRequest","deleteUserSuccess","deleteUserFailure","Input","Login","submitted","setSubmitted","name","Admin","edit","setEdit","firstName","lastName","inputFields","setInputFields","htmlFor","handleEditUser","Entry","dangerouslySetInnerHTML","__html","Entries","list","setList","EntryTest","options","fontSize","formats","colorList","buttonList","resizingBar","EditEntry","editorBody","setEditorBody","setContents","setOptions","handleChange","AddEntry","Settings","Profile","profile","Boolean","window","hostname","match","realFetch","url","opts","resolve","endsWith","params","filteredUsers","responseJson","urlParts","split","parseInt","matchedUsers","newUser","max","editedUser","updatedUsers","i","splice","configureFakeBackend","ReactDOM","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,sC,4KCCvCC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,G,ICD7CC,E,0CAAAA,O,6CAAAA,I,6CAAAA,I,6CAAAA,I,yBAAAA,I,2BAAAA,I,+BAAAA,I,qCAAAA,I,uCAAAA,I,uCAAAA,I,uCAAAA,I,kCAAAA,I,kCAAAA,I,kCAAAA,I,oBAAAA,I,oCAAAA,I,oCAAAA,I,0CAAAA,I,0CAAAA,I,0CAAAA,I,0CAAAA,I,0CAAAA,I,0CAAAA,I,8CAAAA,I,8CAAAA,I,+CAAAA,M,gBCOG,SAASC,EACtBC,EACAC,GAEA,OAAO,WAAkD,IAAjDC,EAAgD,uDAArCF,EAAcG,EAAuB,uCACtD,OAAIF,EAASE,EAAOC,MACXH,EAASE,EAAOC,MAAMF,EAAOC,EAAOE,SAEtCH,GCPJ,I,MCGDI,EAAOZ,KAAKC,MAAMC,aAAaC,QAAQ,SAAW,MAiB3CU,EAAwBR,EAfH,CAChCO,KAAMA,GAAc,GACpBE,WAAW,EACXC,WAAOC,IAGkC,mBACxCZ,EAAYa,eDZgC,SAACT,EAAOU,GACrD,MAAO,CACLJ,WAAW,EACXF,KAAMM,MCQiC,cAExCd,EAAYe,eDNgC,SAACX,EAAOU,GACrD,OAAO,eACFV,EADL,CAEEI,KAAMM,EACNJ,WAAW,OCA4B,cAGxCV,EAAYgB,eDCkC,SAACZ,EAAOO,GACvD,OAAO,eACFP,EADL,CAEEO,MAAOA,OCPgC,cAIxCX,EAAYiB,QDOqB,SAAAb,GAClC,OAAO,eACFA,EADL,CAEEM,WAAW,OCd4B,cAKxCV,EAAYkB,gBDa4B,SAAAd,GACzC,OAAO,eACFA,MCpBoC,cAMxCJ,EAAYmB,gBDkBmC,SAACf,EAAOO,GACxD,OAAO,eACFP,EADL,CAEEO,MAAOA,OC3BgC,ICwG9BS,EAAenB,EAlHQ,CAClCoB,QAAS,CACP,CACEC,GAAI,OACJC,MAAO,2BACPC,KACE,uNACFC,KAAM,eACNC,WAAY,EACZC,OAAQ,KAEV,CACEL,GAAI,OACJC,MAAO,sCACPC,KACE,uNACFC,KAAM,eACNC,WAAY,EACZC,OAAQ,KAEV,CACEL,GAAI,OACJC,MAAO,4BACPC,KACE,uNACFC,KAAM,eACNC,WAAY,EACZC,OAAQ,KAEV,CACEL,GAAI,OACJC,MAAO,4BACPC,KACE,uNACFC,KAAM,eACNC,WAAY,EACZC,OAAQ,KAEV,CACEL,GAAI,OACJC,MAAO,WACPC,KACE,uNACFC,KAAM,eACNC,WAAY,EACZC,OAAQ,KAEV,CACEL,GAAI,OACJC,MAAO,cACPC,KACE,uNACFC,KAAM,eACNC,WAAY,EACZC,OAAQ,KAEV,CACEL,GAAI,OACJC,MAAO,uBACPC,KACE,uNACFC,KAAM,eACNC,WAAY,EACZC,OAAQ,KAEV,CACEL,GAAI,OACJC,MAAO,oCACPC,KACE,uNACFC,KAAM,eACNC,WAAY,EACZC,OAAQ,KAEV,CACEL,GAAI,OACJC,MAAO,cACPC,KACE,uNACFC,KAAM,eACNC,WAAY,EACZC,OAAQ,KAEV,CACEL,GAAI,OACJC,MAAO,wBACPC,KACE,uNACFC,KAAM,eACNC,WAAY,EACZC,OAAQ,KAEV,CACEL,GAAI,OACJC,MAAO,wBACPC,KACE,uNACFC,KAAM,eACNC,WAAY,EACZC,OAAQ,MAGZhB,WAAOC,IAGoC,mBAC1CZ,EAAY4B,qBC7GiC,SAACxB,EAAOU,GACtD,IAAMe,EAAWzB,EAAMiB,QAAQS,OAAOhB,GACtC,OAAO,eACFV,EADL,CAEEiB,QAASQ,ODwGgC,cAE1C7B,EAAY+B,qBCtGgC,SAAC3B,EAAOO,GACrD,OAAO,eACFP,EADL,CAEEO,MAAOA,ODiGkC,cAG1CX,EAAYgC,WChG+B,SAAC5B,EAAOU,GACpD,IAAMe,EAAWzB,EAAMiB,QAAQS,OAAOhB,GACtC,OAAO,eACFV,EADL,CAEEiB,QAASQ,ODyFgC,cAI1C7B,EAAYiC,YCzFgC,SAAC7B,EAAOU,GACrD,IAAMoB,EAAe9B,EAAMiB,QAAQc,KAAI,SAAAC,GACrC,OAAIA,EAAMd,KAAOR,EAAKQ,GACb,eAAKc,EAAZ,GAAsBtB,GAEjBsB,KAET,OAAO,eAAKhC,EAAZ,CAAmBiB,QAASa,OD8Ee,cAK1ClC,EAAYqC,cChFkC,SAACjC,EAAOU,GAEvD,OADAwB,QAAQC,IAAI,uBAAwBzB,GAC7B,eACFV,EADL,CAEEiB,QAASjB,EAAMiB,QAAQmB,QAAO,SAAAJ,GAAK,OAAIA,EAAMd,KAAOR,UDuEX,cAM1Cd,EAAYyC,iBCzEmC,SAACrC,EAAOU,GACxD,OAAO,eACFV,EADL,CAEEiB,QAASjB,EAAMiB,QAAQmB,QAAO,SAAAJ,GAAK,OAAIA,EAAMd,KAAOR,UDgEX,IEzEhC4B,EAAczC,EA3BM,CAC/BN,MAAO,GACPgD,SAAS,EACTC,UAAU,EACVC,aAAa,EACblC,WAAOC,EACPkC,SAAS,IAG+B,mBACvC9C,EAAY+C,kBJ0BkC,SAAC3C,EAAOU,GACvD,OAAO,eACFV,EADL,CAEEyC,YAAa/B,OI9ByB,cAEvCd,EAAYgD,kBJgCoC,SAAC5C,EAAOU,GACzD,IAAMmC,EAAW7C,EAAMT,MAAMmC,OAAOhB,GACpC,OAAO,eACFV,EADL,CAEET,MAAOsD,EACPJ,aAAa,OIvCyB,cAGvC7C,EAAYkD,kBJwCoC,SAAC9C,EAAOO,GACzD,OAAO,eACFP,EADL,CAEEO,MAAOA,EACPkC,aAAa,OI/CyB,cAKvC7C,EAAYmD,mBJ8CyC,SAAA/C,GACtD,OAAO,eACFA,EADL,CAEEuC,SAAS,OItD6B,cAMvC3C,EAAYoD,mBJoD6B,SAAChD,EAAOU,GAClD,OAAO,eACFV,EADL,CAEET,MAAOmB,EACP6B,SAAS,OI9D6B,cAOvC3C,EAAYqD,mBJ2DoC,SAACjD,EAAOO,GACzD,OAAO,eACFP,EADL,CAEEO,MAAOA,OIrE+B,cASvCX,EAAYsD,mBJgEsC,SAAClD,EAAO0C,GAC3D,OAAO,eAAK1C,EAAZ,CAAmB0C,eI1EqB,cAUvC9C,EAAYuD,mBJmEoC,SAACnD,EAAOU,GACzD,IAAMoB,EAAe9B,EAAMT,MAAMwC,KAAI,SAAA3B,GACnC,OAAIA,EAAKc,KAAOR,EAAKQ,GACZ,eAAKd,EAAZ,GAAqBM,GAEhBN,KAET,OAAO,eAAKJ,EAAZ,CAAmBT,MAAOuC,EAAcY,SAAS,OIpFT,cAWvC9C,EAAYwD,mBJ4EoC,SAACpD,EAAOO,GACzD,OAAO,eACFP,EADL,CAEEO,MAAOA,EACPmC,SAAS,OI3F6B,cAavC9C,EAAYyD,qBJkFwC,SAAArD,GACrD,OAAO,eACFA,EADL,CAEEwC,UAAU,OIlG4B,cAcvC5C,EAAY0D,qBJwFuC,SAACtD,EAAOkB,GAC5D,OAAO,eACFlB,EADL,CAEEwC,UAAU,EACVjD,MAAOS,EAAMT,MAAM6C,QAAO,SAAAhC,GAAI,OAAIA,EAAKc,KAAOA,UI1GR,cAevCtB,EAAY2D,qBJ+FsC,SAACvD,EAAOO,GAC3D,OAAO,eACFP,EADL,CAEEO,MAAOA,OIjH+B,IChBpCiD,EAAcC,0BAAgB,CAClCpD,wBACAW,eACAsB,gBAIWoB,EAAoDC,IAElDH,ICPTI,EAAyB,SAAC3D,GAAD,MACN,kBAAhBA,EAAOC,MAAqBN,EAAYK,EAAOC,MAClD,CACEA,KAAMN,EAAYK,EAAOC,MACzBC,QAASF,EAAOE,SAElBF,GAEA4D,EAASC,uBAAa,CAAEC,kBAAmBH,IAC3CI,EAAmBC,8BAAoB,CAC3CC,gBAAiBN,IAGNO,EAAQC,sBACnBZ,EACAQ,EAAiBK,0BAAgBR,EAAQS,OCxBpC,SAASC,IAEd,IAAInE,EAAOZ,KAAKC,MAAMC,aAAaC,QAAQ,SAE3C,OAAIS,GAAQA,EAAKoE,MACR,CAAEC,cAAe,UAAYrE,EAAKoE,OAElC,GCPJ,IAAME,EACL,IADKA,EAEF,WAFEA,EAGD,eAHCA,EAIA,eAJAA,EAKJ,SALIA,EAMJ,SANIA,EAOD,YAPCA,EAQF,W,gCCNIC,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAQ,+CCIGC,EAAmB,uCAAG,4BAAAC,EAAA,+EAERC,EAAIC,IAAJ,SAFQ,cAEzBC,EAFyB,yBAGxBf,EAAMgB,SAASC,EAAaF,EAASxE,QAHb,uCAK/BwB,QAAQC,IAAR,MAL+B,kBAMxBgC,EAAMgB,SAASE,EAAW,EAAD,MAND,yDAAH,qDAWnBD,EAAe,SAC1B1E,GAD0B,MAEqC,CAC/DR,KAAMN,EAAY4B,oBAClBrB,QAASO,IAIE2E,EAAa,SACxB9E,GADwB,MAEiC,CACzDL,KAAMN,EAAY+B,oBAClBxB,QAASI,IAIE+E,EAAW,SACtB5E,GADsB,MAE0B,CAChDR,KAAMN,EAAYgC,UAClBzB,QAASO,IAIE6E,EAAY,SACvB7E,GADuB,MAE0B,CACjDR,KAAMN,EAAYiC,WAClB1B,QAASO,IAIE8E,EAAc,SACzBtE,GADyB,MAE0B,CACnDhB,KAAMN,EAAYqC,aAClB9B,QAASe,IChDIuE,I,MAJqC,SAACC,GACnD,OAAO,yBAAKC,UAAU,WAAWD,EAAME,Y,gFCA5BC,GAAY,CACvB,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,OAEWC,GAAc,CAAC,kBAAC,KAAD,MAAiB,kBAAC,KAAD,OAChCC,GAAgB,CAAC,kBAAC,KAAD,MAAe,kBAAC,KAAD,O,oBC8B9BC,GAlC8B,WAAO,IAAD,eACKH,GADL,GAC1CI,EAD0C,KAChCC,EADgC,KACrBC,EADqB,KACXC,EADW,KAGjD,OACE,yBAAKC,KAAK,aAAaV,UAAU,UAC/B,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAASW,OAAK,EAACC,GAAI7B,EAAaiB,UAAU,QAA1C,UAIF,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAASW,OAAK,EAACC,GAAI7B,EAAaiB,UAAU,SACxC,uBAAGA,UAAU,QAAQM,IAEvB,kBAAC,IAAD,CAASM,GAAI7B,EAAgBiB,UAAU,SACrC,uBAAGA,UAAU,QAAQO,IAEvB,kBAAC,IAAD,CAASI,OAAK,EAACC,GAAI7B,EAAgBiB,UAAU,SAC3C,uBAAGA,UAAU,QAAQQ,IAEvB,kBAAC,IAAD,CAASG,OAAK,EAACC,GAAI7B,EAAiBiB,UAAU,SAC5C,uBAAGA,UAAU,QAAQS,IAEvB,kBAAC,IAAD,CAASE,OAAK,EAACC,GAAI7B,EAAciB,UAAU,SACzC,uBAAGA,UAAU,QAAb,YAGJ,yBAAKA,UAAU,WACb,yBAAKa,IAAKC,KAASC,IAAI,gBCtBhBC,GAToC,SAACjB,GAClD,OACE,yBAAKC,UAAU,WACb,kBAAC,GAAD,MACCD,EAAME,W,SCIAgB,GAAW,SAAClB,GAA0B,IAI9BmB,EAAuCnB,EAAlDoB,UAA8BC,EAAoBrB,EAA5BsB,OAAmBC,EAJA,aAISvB,EAJT,wBAcjD,OAAO,kBAAC,IAAD,iBAAWuB,EAAX,CAAiBC,OART,SAACxB,GACd,OACE,kBAACqB,EAAD,KACE,kBAACF,EAAcnB,SCPVyB,GAAe,SAACzB,GAA+B,IACvCmB,EAAuCnB,EAAlDoB,UAA8BC,EAAoBrB,EAA5BsB,OAAmBC,EADQ,aACCvB,EADD,wBAGzD,IAAKmB,EACH,MAAMO,MAAM,0BAcd,OAAO,kBAAC,IAAD,iBAAWH,EAAX,CAAiBC,OAXT,SAACxB,GACd,OAAIhG,aAAaC,QAAQ,QAChB,kBAACoH,EAAD,KACL,kBAACF,EAAcnB,IAIjB,kBAAC,IAAD,CAAUa,GAAI,CAAEc,SAAU,SAAUrH,MAAO,CAAEsH,KAAM5B,EAAM6B,kBCzBxD,SAASC,GAAc1H,GAAe,IAAD,EACd2H,mBAAS3H,GADK,oBACnC4H,EADmC,KAC3BC,EAD2B,KAG1C,MAAO,CACLD,EACA,SAASE,GACPD,EAAU,eACLD,EADI,eAENE,EAAMC,OAAO3G,GAAK0G,EAAMC,OAAOC,WCAjC,IAiCQC,GAjCwC,SAACrC,GAAW,IACzDsC,EAAkDtC,EAAlDsC,WAAYC,EAAsCvC,EAAtCuC,kBAAmBC,EAAmBxC,EAAnBwC,QAASC,EAAUzC,EAAVyC,MADgB,eAEjCrC,GAFiC,GAE7CsC,GAF6C,WAIhE,OACE,yBAAKzC,UAAU,UACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,sBAAf,cACA,yBAAKA,UAAU,sBACb,2BAAIwC,IAEN,yBAAKxC,UAAU,oBACb,uBAAG0C,QAAS,kBAAMH,EAAQ,KAAKE,KAGnC,yBAAKzC,UAAU,iBACb,2BACEzF,KAAK,OACLoI,YAAY,sBACZpH,GAAG,aACH4G,MAAOE,EACPO,SAAUN,KAGd,yBAAKtC,UAAU,iBACb,yBAAKA,UAAU,iBAAf,OACA,yBAAKA,UAAU,QAAf,UACA,yBAAKA,UAAU,QAAf,WCUO6C,GApCsC,SAAC9C,GAAW,IACvDzE,EAA4CyE,EAA5CzE,QAASwH,EAAmC/C,EAAnC+C,SAAUC,EAAyBhD,EAAzBgD,YAAaR,EAAYxC,EAAZwC,QAOxC,OACE,yBAAKvC,UAAU,cAGZ1E,EAAQc,KAAI,SAAC4G,GAAD,OACX,yBAAKC,IAAKD,EAASzH,IAEjB,yBACEyE,UACEgD,EAASzH,KAAOuH,EAASvH,GAAK,oBAAsB,WAEtDmH,QAAS,kBAhBI,SAACM,GACtBD,EAAYC,GACZT,EAAQ,GAceW,CAAeF,KAE9B,yBAAKhD,UAAU,iBACb,kCAEF,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,kBAAkBgD,EAASxH,OAC1C,yBAAKwE,UAAU,sBAAf,0BCjCDmD,GAAqCC,IC0DnCC,GAlD0C,SAACtD,GACxD,IAAMP,EAAW2D,KADiD,EAGZpD,EAAMhF,KAApDQ,EAH0D,EAG1DA,GAAIC,EAHsD,EAGtDA,MAAOC,EAH+C,EAG/CA,KAAMC,EAHyC,EAGzCA,KACjB6G,GAJ0D,EAGnC5G,WAHmC,EAGvBC,OACvBmE,EAAZwC,SAJ0D,eAKnCnC,GALmC,GAK3DkD,EAL2D,KAKjDC,EALiD,OAQpCzB,mBAAS,GAR2B,oBAQ3D0B,EAR2D,KAQlDC,EARkD,KAclE,OACE,6BAEE,yBAAKzD,UAAU,eACb,yBAAKA,UAAU,QAAf,gBAAoCtE,GACpC,yBAAKsE,UAAU,YAAY0C,QAAS,kBAAMH,EAAQ,KAC/Ce,GAEH,yBAAKtD,UAAU,cAAc0C,QAZhB,WACjBlD,EAASK,EAAYtE,MAYdgI,IAGL,yBAAKvD,UAAU,YACb,yBAAKA,UAAU,kBApBR,CAAC,WAAY,WAAY,QAsBxB5D,KAAI,SAACsH,EAAKC,GAAN,OACR,yBACEV,IAAKU,EACL3D,UAAW2D,IAAUH,EAAU,gBAAkB,QAEjD,uBAAGd,QAAS,kBAAMe,EAAWE,KAASD,OAG1C,yBAAK1D,UAAU,iBACb,2BAAOzF,KAAK,SAAS4H,MAAM,wBAG/B,yBAAKnC,UAAU,oBACb,yBAAKA,UAAU,0BAA0BxE,GACzC,yBAAKwE,UAAU,yBAAyBvE,OC8BnCmI,GAxE8C,SAAC7D,GAAW,IAAD,EAChBA,EAAMhF,KAApDQ,EAD8D,EAC9DA,GAAIC,EAD0D,EAC1DA,MAAOC,EADmD,EACnDA,KAAMC,EAD6C,EAC7CA,KAAMC,EADuC,EACvCA,WAAYC,EAD2B,EAC3BA,OAGrC4D,GAF2BO,EAAzBwC,QAAyBxC,EAAhBgD,YAEAI,MAJqD,EAKlCtB,GAAc,CAChDtG,KACAC,QACAC,OACAE,aACAD,MAAM,IAAImI,MAAOC,SAASC,MAAM,EAAG,IAAIC,QAAQ,KAAM,KACrDpI,WAXoE,oBAK/DmG,EAL+D,KAKvDO,EALuD,OAexCR,mBAAS,GAf+B,oBAe/D0B,EAf+D,KAetDC,EAfsD,KAiBtEQ,qBAAU,WACR,IAAIC,EAAQC,YAAW,kBAAM3E,EAASI,EAAUmC,MAAU,KAC1D,OAAO,WACLqC,aAAaF,MAEd,CAACnC,EAAOvG,QAOX,OACE,0BAAM6I,SANa,SAACC,GACpBA,EAAEC,iBACF/E,EAASI,EAAUmC,MAKjB,yBAAK/B,UAAU,eACb,yBAAKA,UAAU,QAAf,gBAAoCtE,IAEtC,yBAAKsE,UAAU,YACb,yBAAKA,UAAU,kBArBR,CAAC,WAAY,QAuBZ5D,KAAI,SAACsH,EAAKC,GAAN,OACR,yBACEV,IAAKU,EACL3D,UAAW2D,IAAUH,EAAU,gBAAkB,QAEjD,uBAAGd,QAAS,kBAAMe,EAAWE,KAASD,OAG1C,yBAAK1D,UAAU,mBAIjB,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,0BACb,2BACEzE,GAAG,QACHoH,YAAY,eACZR,MAAOJ,EAAOvG,MACdoH,SAAUN,KAGd,yBAAKtC,UAAU,yBACb,8BACEzE,GAAG,OACHoH,YAAY,iBACZR,MAAOJ,EAAOtG,KACdmH,SAAUN,SCETkC,GAlE6C,SAACzE,GAAW,IAC9DwC,EAAyBxC,EAAzBwC,QAASQ,EAAgBhD,EAAhBgD,YAEXvD,EAAW2D,KAHoD,EAIjCtB,GAAc,CAChDtG,GAAIkJ,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBnJ,MAAO,GACPC,KAAM,GACNE,WAAY,EACZD,MAAM,IAAImI,MAAOC,SAASC,MAAM,EAAG,IAAIC,QAAQ,KAAM,KACrDpI,OAAQ,KAV2D,oBAI9DmG,EAJ8D,KAItDO,EAJsD,OAcvCR,mBAAS,GAd8B,oBAc9D0B,EAd8D,KAcrDC,EAdqD,KAuBrE,OACE,0BAAMY,SARa,SAACC,GACpBA,EAAEC,iBACF/E,EAASG,EAASoC,IAClBQ,EAAQ,GACRQ,EAAYhB,KAKV,yBAAK/B,UAAU,eACb,yBAAKA,UAAU,UAEjB,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBAhBR,CAAC,WAAY,QAkBZ5D,KAAI,SAACsH,EAAKC,GAAN,OACR,yBACEV,IAAKU,EACL3D,UAAW2D,IAAUH,EAAU,gBAAkB,QAEjD,uBAAGd,QAAS,kBAAMe,EAAWE,KAASD,OAG1C,yBAAK1D,UAAU,iBACb,2BAAOzF,KAAK,SAAS4H,MAAM,WAG/B,yBAAKnC,UAAU,oBACb,yBAAKA,UAAU,0BACb,2BACEzE,GAAG,QACHoH,YAAY,eACZR,MAAOJ,EAAOvG,MACdoH,SAAUN,KAGd,yBAAKtC,UAAU,yBACb,8BACEzE,GAAG,OACHoH,YAAY,iBACZR,MAAOJ,EAAOtG,KACdmH,SAAUN,SCwBTsC,GAhFyD,WACtE,IAAMC,EAAa9G,GAAiB,SAAC1D,GAAD,OAAWA,EAAMgB,aAAaC,WADU,EAE5CwG,mBAAiB+C,EAAW,IAFgB,oBAErE/B,EAFqE,KAE3DC,EAF2D,OAGlCjB,mBAAS+C,GAHyB,oBAGrEC,EAHqE,KAGtDC,EAHsD,OAKpDjD,mBAAS,GAL2C,oBAKrEkD,EALqE,KAK/DzC,EAL+D,OAQxCV,GAAc,CAChDQ,WAAY,KAT8D,oBAQrEN,EARqE,KAQ7DO,EAR6D,KAa5E2B,qBAAU,WACR,IAAMgB,EAAUJ,EAAWpI,QAAO,SAACyI,GACjC,OAAOC,OAAOC,KAAKF,GAAKG,MAAK,SAACpC,GAC5B,GAAiB,OAAbiC,EAAIjC,GAAe,CACrB,IAAMqC,EAAUJ,EAAIjC,GAAKsC,WAAWC,cAC9BC,EAAa1D,EAAOM,WAAWmD,cACrC,OAAOF,EAAQI,SAASD,UAI9BV,EAAiBE,KAChB,CAAClD,EAAOM,aAGX4B,qBAAU,WACRc,EAAiBF,GAGjB9B,EAAY8B,EAAW,MACtB,CAACA,IAhCwE,MAmC5C/C,mBAC9B,kBAAC,GAAD,CAAU/G,KAAM+H,EAAUP,QAASA,KApCuC,oBAmCrEoD,EAnCqE,KAmC3DC,EAnC2D,KAsD5E,OAhBA3B,qBAAU,WAEN2B,EADW,IAATZ,EACU,kBAAC,GAAD,CAAUjK,KAAM+H,EAAUP,QAASA,IAC7B,IAATyC,EACG,kBAAC,GAAD,CAAazC,QAASA,EAASQ,YAAaA,IAGtD,kBAAC,GAAD,CACEhI,KAAM+H,EACNP,QAASA,EACTQ,YAAaA,OAIlB,CAACiC,EAAMlC,IAGR,6BAAS9C,UAAU,mBAEjB,yBAAKA,UAAU,mBACb,kBAAC,GAAD,CACEqC,WAAYN,EAAOM,WACnBC,kBAAmBA,EACnBC,QAASA,EACTC,MAAOqC,EAAWgB,SAEpB,kBAAC,GAAD,CACEvK,QAASwJ,EACTzC,WAAYN,EAAOM,WACnB0C,iBAAkBA,EAClBjC,SAAUA,EACVC,YAAaA,EACbR,QAASA,KAKb,yBAAKvC,UAAU,oBAAoB2F,KCtF5BG,GAAc,CACzBC,MASF,SAAeC,EAAUC,GACvB,IAAMC,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B3K,KAAM5B,KAAKwM,UAAU,CAAEL,WAAUC,cAGnC,OAAOK,MAAM,sBAAuBJ,GACjCK,KAAKC,IACLD,MAAK,SAAA9L,GAIJ,OAFAV,aAAa0M,QAAQ,OAAQ5M,KAAKwM,UAAU5L,IAErCA,MArBXiM,UACAC,SA+CF,SAAkBlM,GAChB,IAAMyL,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B3K,KAAM5B,KAAKwM,UAAU5L,IAGvB,OAAO6L,MAAM,kBAAmBJ,GAAgBK,KAAKC,KArDrDI,OA4BF,WACE,IAAMV,EAAiB,CACrBC,OAAQ,MACRC,QAASxH,KAGX,OAAO0H,MAAM,SAAUJ,GAAgBK,KAAKC,KAjC5CK,QAoCF,SAAiBtL,GACf,IAAM2K,EAAiB,CACrBC,OAAQ,MACRC,QAASxH,KAGX,OAAO0H,MAAM,UAAD,OAAW/K,GAAM2K,GAAgBK,KAAKC,KAzClDM,OAsDF,SAAgBrM,GACd,IAAMyL,EAAiB,CACrBC,OAAQ,MACRC,QAAQ,eAAMxH,IAAP,CAAqB,eAAgB,qBAC5CnD,KAAM5B,KAAKwM,UAAU5L,IAGvB,OAAO6L,MAAM,UAAD,OAAW7L,EAAKc,IAAM2K,GAAgBK,KAAKC,KA5DvDO,OAgEF,SAAiBxL,GACf,IAAM2K,EAAiB,CACrBC,OAAQ,SACRC,QAASxH,KAGX,OAAO0H,MAAM,UAAD,OAAW/K,GAAM2K,GAAgBK,KAAKC,MAlDpD,SAASE,KAEP3M,aAAaiN,WAAW,QAmD1B,SAASR,GAAejH,GACtB,OAAOA,EAAS0H,OAAOV,MAAK,SAAAU,GAC1B,IAAMlM,EAAOkM,GAAQpN,KAAKC,MAAMmN,GAChC,IAAK1H,EAAS2H,GAAI,CACQ,MAApB3H,EAAS4H,QAEXT,KAIF,IAAM9L,EAASG,GAAQA,EAAKqM,SAAY7H,EAAS8H,WACjD,OAAOC,QAAQC,OAAO3M,GAGxB,OAAOG,KCvFJ,IAAM4L,GAAQ,uCAAG,WAAOlM,GAAP,eAAA2E,EAAA,6DACtBZ,EAAMgB,SAASgI,MADO,kBAIG1B,GAAYa,SAASlM,GAJxB,cAId8E,EAJc,yBAKbf,EAAMgB,SAASiI,GAAgBlI,KALlB,yDAObf,EAAMgB,SAASkI,GAAgB,EAAD,MAPjB,yDAAH,sDAWRF,GAAkB,iBAGzB,CACJjN,KAAMN,EAAY+C,iBAClBxC,SAAS,IAGEiN,GAAkB,SAC7B1M,GAD6B,MAEyB,CACtDR,KAAMN,EAAYgD,iBAClBzC,QAASO,IAGE2M,GAAkB,SAC7B9M,GAD6B,MAEyB,CACtDL,KAAMN,EAAYkD,iBAClB3C,QAASI,IAIEmL,GAAK,uCAAG,WAAOhL,EAAW4M,GAAlB,eAAAvI,EAAA,6DACnBZ,EAAMgB,SAASoI,GAAa7M,EAAKiL,WADd,kBAIMF,GAAYC,MAAMhL,EAAKiL,SAAUjL,EAAKkL,UAJ5C,OAIX1G,EAJW,OAKjBf,EAAMgB,SAASqI,GAAatI,IAC5BoI,EAAQG,KAAK,KANI,yEAQVtJ,EAAMgB,SAASuI,GAAa,EAAD,MARjB,yDAAH,wDAYLH,GAAe,SAC1B7M,GAD0B,MAEyB,CACnDR,KAAMN,EAAYa,cAClBN,QAASO,IAGE8M,GAAe,SAC1B9M,GAD0B,MAEyB,CACnDR,KAAMN,EAAYe,cAClBR,QAASO,IAGEgN,GAAe,SAC1BnN,GAD0B,MAEyB,CACnDL,KAAMN,EAAYgB,cAClBT,QAASI,IAIE8L,GAAM,uCAAG,sBAAAtH,EAAA,+DAElB0G,GAAYY,SACZlI,EAAMgB,SAASwI,MAHG,wEAKXxJ,EAAMgB,SAASyI,GAAc,EAAD,MALjB,wDAAH,qDASND,GAAgB,iBAA8C,CACzEzN,KAAMN,EAAYiB,OAClBV,aAASK,IAGEoN,GAAgB,SAC3BrN,GAD2B,MAEiB,CAC5CL,KAAMN,EAAYiB,OAClBV,QAASI,IAIEsN,GAAQ,uCAAG,4BAAA9I,EAAA,6DACtBZ,EAAMgB,SAAS2I,MADO,kBAIGrC,GAAYc,SAJf,cAIdrH,EAJc,yBAKbf,EAAMgB,SAAS4I,GAAgB7I,KALlB,yDAObf,EAAMgB,SAAS6I,GAAgB,EAAD,MAPjB,yDAAH,qDAWRF,GAAkB,iBAGzB,CACJ5N,KAAMN,EAAYmD,kBAClB5C,aAASK,IAGEuN,GAAkB,SAC7BrN,GAD6B,MAE0B,CACvDR,KAAMN,EAAYoD,kBAClB7C,QAASO,IAGEsN,GAAkB,SAC7BzN,GAD6B,MAE0B,CACvDL,KAAMN,EAAYqD,kBAClB9C,QAASI,IAIE0N,GAAQ,uCAAG,WAAO7N,GAAP,SAAA2E,EAAA,6DACtBZ,EAAMgB,SAAS+I,IAAgB,IADT,kBAIGzC,GAAYgB,OAAOrM,GAJtB,uCAKb+D,EAAMgB,SAASgJ,GAAgB/N,KALlB,yDAOb+D,EAAMgB,SAASiJ,GAAgB,EAAD,MAPjB,yDAAH,sDAWRF,GAAkB,SAC7BxL,GAD6B,MAE4B,CACzDxC,KAAMN,EAAYsD,kBAClB/C,QAASuC,IAGEyL,GAAkB,SAC7B/N,GAD6B,MAE0B,CACvDF,KAAMN,EAAYuD,kBAClBhD,QAASC,IAGEgO,GAAkB,SAC7B7N,GAD6B,MAE0B,CACvDL,KAAMN,EAAYwD,kBAClBjD,QAASI,IAIE8N,GAAU,uCAAG,WAAOnN,GAAP,SAAA6D,EAAA,6DACxBZ,EAAMgB,SAASmJ,GAAkBpN,IADT,SAItBuK,GAAYiB,OAAOxL,GAJG,kBAKfiD,EAAMgB,SAASoJ,GAAkBrN,KALlB,yDAOfiD,EAAMgB,SAASqJ,GAAkB,EAAD,MAPjB,wDAAH,sDAWVF,GAAoB,SAC/BpN,GAD+B,MAE2B,CAC1DhB,KAAMN,EAAYyD,oBAClBlD,QAASe,IAGEqN,GAAoB,SAC/BrN,GAD+B,MAE2B,CAC1DhB,KAAMN,EAAY0D,oBAClBnD,QAASe,IAGEsN,GAAoB,SAC/BjO,GAD+B,MAE0B,CACzDL,KAAMN,EAAY2D,oBAClBpD,QAASI,ICzIIkO,GA7BgB,SAAC,GAAiB,IAAZxH,EAAW,oBAE5C,OAAO,0BAAWA,IC8BPyH,GAtDoD,SAAAhJ,GAAU,IAAD,EACtC8B,GAAc,CAChDmE,SAAU,GACVC,SAAU,KAH8D,oBACnElE,EADmE,KAC3DO,EAD2D,OAKxCR,oBAAS,GAL+B,oBAKnEkH,EALmE,KAKxDC,EALwD,KAO1EhF,qBAAU,WACRyC,OACC,IAWH,OACE,yBAAK1G,UAAU,iBACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,cAAd,aACA,0BAAMkJ,KAAK,OAAOlJ,UAAU,OAAOqE,SAbpB,SAACC,GACpBA,EAAEC,iBAEF0E,GAAa,GACTlH,GACFgE,GAAMhE,EAAQhC,EAAM4H,WAShB,yBACE3H,UACE,cAAgBgJ,IAAcjH,EAAOiE,SAAW,aAAe,KAGjE,kBAAC,GAAD,CAAOzK,GAAG,WAAW2N,KAAK,WAAWlJ,UAAU,eAAe2C,YAAY,iCAAiCR,MAAOJ,EAAOiE,SAAUpD,SAAUN,IAC5I0G,IAAcjH,EAAOiE,UACpB,yBAAKhG,UAAU,cAAf,yBAGJ,yBACEA,UACE,cAAgBgJ,IAAcjH,EAAOkE,SAAW,aAAe,KAGjE,kBAAC,GAAD,CAAO1L,KAAK,WAAWgB,GAAG,WAAW2N,KAAK,WAAWlJ,UAAU,eAAe2C,YAAY,eAAeR,MAAOJ,EAAOkE,SAAUrD,SAAUN,IAC1I0G,IAAcjH,EAAOkE,UACpB,yBAAKjG,UAAU,cAAf,yBAGJ,yBAAKA,UAAU,cACb,4BAAQA,UAAU,mBAAlB,cC6HGmJ,GAxKuB,WACpC,IAAMvP,EAAQmE,GAAiB,SAAA1D,GAAK,OAAIA,EAAMsC,YAAY/C,SADhB,EAElBkI,oBAAS,GAFS,oBAEnCsH,EAFmC,KAE7BC,EAF6B,KAGpClP,EAAe,CACnBoB,GAAI,EACJ+N,UAAW,GACXC,SAAU,GACVvD,SAAU,GACVC,SAAU,GACVvF,KAAM,GATkC,EAYJoB,mBAAS3H,GAZL,oBAYnCqP,EAZmC,KAYtBC,EAZsB,OAaR3H,oBAAS,GAbD,oBAanCkH,EAbmC,KAaxBC,EAbwB,KAgB1ChF,qBAAU,WACRiE,OACC,IAEHjE,qBAAU,WACHmF,GACHK,EAAetP,KAEhB,CAACiP,IAuBJ,OACE,6BAASpJ,UAAU,cACjB,0BAAMkJ,KAAK,OAAOlJ,UAAU,gBAAgBqE,SAvB3B,SAACC,GACpBA,EAAEC,iBAEF0E,GAAa,GACTO,IAAgBJ,GAClBzC,GAAS6C,GACTC,EAAetP,IAEfmO,GAASkB,KAgBP,wCACA,yBACExJ,UACE,cAAgBgJ,IAAcQ,EAAYF,UAAY,aAAe,KAGvE,2BAAOI,QAAQ,aAAf,cACA,kBAAC,GAAD,CACEnO,GAAG,YACH2N,KAAK,YACLlJ,UAAU,eACVmC,MAAOqH,EAAYF,UACnB1G,SAAU,gBAAGV,EAAH,EAAGA,OAAH,OACRuH,EAAe,eAAKD,EAAN,CAAmBF,UAAWpH,EAAOC,YAGtD6G,IAAcQ,EAAYF,WACzB,yBAAKtJ,UAAU,cAAf,2BAGJ,yBACEA,UACE,cAAgBgJ,IAAcQ,EAAYD,SAAW,aAAe,KAGtE,2BAAOG,QAAQ,YAAf,aACA,kBAAC,GAAD,CACEnO,GAAG,WACH2N,KAAK,WACLlJ,UAAU,eACVmC,MAAOqH,EAAYD,SACnB3G,SAAU,gBAAGV,EAAH,EAAGA,OAAH,OACRuH,EAAe,eAAKD,EAAN,CAAmBD,SAAUrH,EAAOC,YAGrD6G,IAAcQ,EAAYD,UACzB,yBAAKvJ,UAAU,cAAf,0BAGJ,yBACEA,UACE,cAAgBgJ,IAAcQ,EAAYxD,SAAW,aAAe,KAGtE,2BAAO0D,QAAQ,YAAf,YACA,kBAAC,GAAD,CACEnO,GAAG,WACH2N,KAAK,WACLlJ,UAAU,eACVmC,MAAOqH,EAAYxD,SACnBpD,SAAU,gBAAGV,EAAH,EAAGA,OAAH,OACRuH,EAAe,eAAKD,EAAN,CAAmBxD,SAAU9D,EAAOC,YAGrD6G,IAAcQ,EAAYxD,UACzB,yBAAKhG,UAAU,cAAf,yBAGJ,yBACEA,UACE,cAAgBgJ,IAAcQ,EAAYvD,SAAW,aAAe,KAGtE,2BAAOyD,QAAQ,YAAf,YACA,kBAAC,GAAD,CACEnP,KAAK,WACLgB,GAAG,WACH2N,KAAK,WACLlJ,UAAU,eACVmC,MAAOqH,EAAYvD,SACnBrD,SAAU,gBAAGV,EAAH,EAAGA,OAAH,OACRuH,EAAe,eAAKD,EAAN,CAAmBvD,SAAU/D,EAAOC,YAGrD6G,IAAcQ,EAAYvD,UACzB,yBAAKjG,UAAU,cAAf,yBAGJ,6BACE,2BAAO0J,QAAQ,QAAf,QACA,4BACEnO,GAAG,OACH4G,MAAOqH,EAAY9I,KACnBkC,SAAU,gBAAGV,EAAH,EAAGA,OAAH,OACRuH,EAAe,eAAKD,EAAN,CAAmB9I,MAAOwB,EAAOC,WAGjD,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,WAGJ,yBAAKnC,UAAU,cACb,4BAAQA,UAAU,mBACfoJ,EAAO,OAAS,UADnB,IACmD,GAApBI,EAAY9I,KAAY,OAAS,SAE/D0I,GAAQ,4BAAQ1G,QAAS,kBAAM2G,GAAQ,KAA/B,YAGb,qDACCzP,GACC,4BACGA,EAAMwC,KAAI,SAAC3B,GAAD,OACT,wBAAIwI,IAAKxI,EAAKc,IACZ,uBAAGmH,QAAS,kBAnHD,SAACjI,GACtB4O,GAAQ,GACRI,EAAehP,GAiHakP,CAAelP,KAC9BA,EAAK6O,UAAY,IAAM7O,EAAK8O,SAAW,YAAc9O,EAAKiG,MAE7D,8BACG,IADH,KAEI,uBAAGgC,QAAS,kBAnHFnH,EAmHyBd,EAAKc,QAlHtDmN,GAAWnN,GADY,IAACA,IAmHV,kBCrIHqO,GA3B8C,SAAA7J,GAC3D,OACE,kBAAC,IAAD,CACEC,UAAU,gBACVY,GAAI,CACFc,SAAS,YAAD,OAAc3B,EAAMxE,IAC5BlB,MAAO,CACLkB,GAAIwE,EAAMxE,GACVC,MAAOuE,EAAMvE,MACbC,KAAMsE,EAAMtE,KACZC,KAAMqE,EAAMrE,KACZE,OAAQmE,EAAMnE,UAIlB,yBAAKoE,UAAU,QAAQD,EAAMrE,MAC7B,yBAAKsE,UAAU,SACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,SAASD,EAAMvE,OAC9B,yBAAKwE,UAAU,cAEjB,yBAAKA,UAAU,OAAO6J,wBAAyB,CAAEC,OAAQ/J,EAAMtE,WCQxDmO,GA1B8C,SAAA7J,GAC3D,IAAMP,EAAW2D,KADmD,EAGhCtB,GAAc,CAChDtG,GAFwCwE,EAAlCxE,GAGNC,MAHwCuE,EAA9BvE,MAIVC,KAJwCsE,EAAvBtE,KAKjBC,KALwCqE,EAAjBrE,KAMvBE,OANwCmE,EAAXnE,SAFqC,oBAG7DmG,EAH6D,KAGrDO,EAHqD,KAepE,OAJA2B,qBAAU,WACRzE,EAASI,EAAUmC,MAClB,CAACA,EAAOvG,MAAOuE,EAAMvE,QAGtB,6BACE,4BACE,4BACE,kBAAC,GAAD,CAAOD,GAAG,QAAQoH,YAAY,WAAWR,MAAOJ,EAAOvG,MAAOoH,SAAUN,Q,SCqEnEyH,GAxFsD,SAAAhK,GACnE,IAAMzE,EAAUyC,GAAiB,SAAA1D,GAAK,OAAIA,EAAMgB,aAAaC,WADe,EAExCuG,GAAc,CAChDQ,WAAY,KAH8D,oBAErEN,EAFqE,KAE7DO,EAF6D,OAKlCR,mBAASxG,GALyB,oBAKrEwJ,EALqE,KAKtDC,EALsD,KAQ5Ed,qBAAU,WACR,IAAMgB,EAAU3J,EAAQmB,QAAO,SAACyI,GAC9B,OAAOC,OAAOC,KAAKF,GAAKG,MAAK,SAACpC,GAC5B,GAAiB,OAAbiC,EAAIjC,GAAe,CACrB,IAAMqC,EAAUJ,EAAIjC,GAAKsC,WAAWC,cAC9BC,EAAa1D,EAAOM,WAAWmD,cACrC,OAAOF,EAAQI,SAASD,UAI9BV,EAAiBE,KAChB,CAAClD,EAAOM,aAGX4B,qBAAU,WACRc,EAAiBzJ,KAChB,CAACA,IAMJ,OACE,6BAAS0E,UAAU,gBACjB,yBAAKA,UAAU,WAEb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,QACb,uCACA,4BAAQ0C,QAXF,WACd3C,EAAM4H,QAAQG,KAAK/I,KAUX,YAEF,yBAAKiB,UAAU,SACb,kBAAC,GAAD,CAAO2C,YAAY,YAAYpH,GAAG,aAAa4G,MAAOJ,EAAOM,WAAYO,SAAUN,MAIvF,kBAAC,KAAD,CAAetC,UAAU,WAAWgK,KAAMlF,EAAemF,QAASlF,GAC/DD,EAAc1I,KAAI,SAAAC,GAAK,OACtB,kBAAC,GAAD,CACE4G,IAAK5G,EAAMd,GACXA,GAAIc,EAAMd,GACVC,MAAOa,EAAMb,MACbC,KAAMY,EAAMZ,KACZC,KAAMW,EAAMX,KACZC,WAAYU,EAAMV,WAClBC,OAAQS,EAAMd,GACd8G,WAAYN,EAAOM,kBAK3B,yBAAKrC,UAAU,gBACZ8E,EAAc1I,KAAI,SAAAC,GAAK,OACtB,kBAAC6N,GAAD,CACEjH,IAAK5G,EAAMd,GACXA,GAAIc,EAAMd,GACVC,MAAOa,EAAMb,MACbC,KAAMY,EAAMZ,KACZC,KAAMW,EAAMX,KACZC,WAAYU,EAAMV,WAClBC,OAAQS,EAAMd,GACd8G,WAAYN,EAAOM,mB,oBC7EzB8H,I,MAAU,CAEdnF,KAAM,UACNoF,SAAU,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAC9BC,QAAS,CAAC,IAAK,aAAc,KAAM,KAAM,MACzCC,UAAW,CACT,CAAC,UAAW,UAAW,UAAW,WAClC,CAAC,UAAW,UAAW,UAAW,YAEpCC,WAAY,CACV,CACE,cACA,WACA,OACA,YACA,YACA,cACA,UACA,SACA,QACA,iBACA,OACA,QACA,OACA,QACA,QAEA,WACA,aACA,aACA,UAGJC,aAAa,ICsCAC,GA1DV,SAAA1K,GAEH,IAAMP,EAAW2D,KAFL,EAG8BpD,EAAM6B,SAASvH,MAAjDkB,EAHI,EAGJA,GAAIC,EAHA,EAGAA,MAAOC,EAHP,EAGOA,KAAYG,GAHnB,EAGaF,KAHb,EAGmBE,QAHnB,EAIwBkG,mBAASrG,GAJjC,oBAILiP,EAJK,KAIOC,EAJP,OAKwB9I,GAAc,CAChDtG,KACAC,QACAC,OACAC,MAAM,IAAImI,MAAOC,SAASC,MAAM,EAAG,IAAIC,QAAQ,KAAM,KACrDpI,WAVU,oBAKLmG,EALK,KAKGO,EALH,KAmBZ2B,qBAAU,WACR,IAAIC,EAAQC,YAAW,kBAAM3E,EAASI,EAAU,eAAKmC,EAAN,CAActG,KAAMiP,QAAgB,KACnF,OAAO,WACLtG,aAAaF,MAEd,CAACwG,EAAY3I,EAAOvG,QAMvB,OACE,6BAASwE,UAAU,cACjB,0BAAMA,UAAU,gBACd,yBAAKA,UAAU,cACb,yBAAKA,UAAU,eACb,kBAAC,GAAD,CAAOzE,GAAG,QAAQoH,YAAY,WAAWR,MAAOJ,EAAOvG,MAAOoH,SAAUN,KAE1E,yBAAKtC,UAAU,cACb,kBAAC,KAAD,CACE4K,YAAanP,EACboP,WAAYV,GACZvH,SAAU,SAACqE,GAAD,OAfD,SAACA,GACpB0D,EAAc1D,GAcwB6D,CAAa7D,OAG7C,4BACEjH,UAAU,SACVzF,KAAK,QACL4H,MAAM,QACNO,QAlCU,WAClBlD,EAASK,EAAYE,EAAM6B,SAASvH,MAAMkB,KAC1CwE,EAAM4H,QAAQG,KAAK/I,KA4Bb,mBCPKgM,GA3CuD,SAAAhL,GACpE,IAAMP,EAAW2D,KAD4D,EAGzCrB,mBAAS,IAHgC,oBAGtE4I,EAHsE,KAG1DC,EAH0D,OAIzC9I,GAAc,CAChDtG,GAAIkJ,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBnJ,MAAO,GACPC,KAAM,GACNC,MAAM,IAAImI,MAAOC,SAASC,MAAM,EAAG,IAAIC,QAAQ,KAAM,KACrDpI,OAAQ,KATmE,oBAItEmG,EAJsE,KAI9DO,EAJ8D,KAsB7E,OACE,6BAAStC,UAAU,cACjB,0BAAMA,UAAU,eAAeqE,SAZd,SAACC,GACpBA,EAAEC,iBACF/E,EAASG,EAAS,eAAKoC,EAAN,CAActG,KAAMiP,MACrC3K,EAAM4H,QAAQG,KAAK/I,KAUf,yBAAKiB,UAAU,cACb,yBAAKA,UAAU,eACb,kBAAC,GAAD,CAAOzE,GAAG,QAAQoH,YAAY,WAAWR,MAAOJ,EAAOvG,MAAOoH,SAAUN,KAE1E,yBAAKtC,UAAU,cACb,kBAAC,KAAD,CACE4K,YAAa7I,EAAOtG,KACpBoP,WAAYV,GACZvH,SAAU,SAACqE,GAAD,OAfD,SAACA,GACpB0D,EAAc1D,GAcwB6D,CAAa7D,OAG7C,2BAAOjH,UAAU,SAASzF,KAAK,SAAS4H,MAAM,iBCfzC6I,GA1BuD,SAAAjL,GAkBpE,OACE,6BAASC,UAAU,iBAAnB,4BCLWiL,GAfsD,WACnE,IAAMC,EAAUnN,GAAiB,SAAA1D,GAAK,OAAIA,EAAMK,sBAAsBD,QAC9DuL,EAAkCkF,EAAlClF,SAAUsD,EAAwB4B,EAAxB5B,UAAWC,EAAa2B,EAAb3B,SAE7B,OACE,6BAASvJ,UAAU,gBACjB,6BAAMgG,GACN,6BAAMsD,GACN,6BAAMC,GACN,yCACA,kDCFc4B,QACW,cAA7BC,OAAOxJ,SAASyJ,UAEe,UAA7BD,OAAOxJ,SAASyJ,UAEhBD,OAAOxJ,SAASyJ,SAASC,MACvB,4DzCfC,WACL,IAAIC,EAAYH,OAAO9E,MACvB8E,OAAO9E,MAAQ,SAASkF,EAAKC,GAC3B,OAAO,IAAInE,SAAQ,SAACoE,EAASnE,GAE3BpD,YAAW,WAET,GAAIqH,EAAIG,SAAS,wBAA0C,SAAhBF,EAAKtF,OAAhD,CAEE,IAAIyF,EAAS/R,KAAKC,MAAM2R,EAAKhQ,MAGzBoQ,EAAgBjS,EAAM6C,QAAO,SAAAhC,GAC/B,OACEA,EAAKuL,WAAa4F,EAAO5F,UACzBvL,EAAKwL,WAAa2F,EAAO3F,YAI7B,GAAI4F,EAAchG,OAAQ,CAExB,IAAIpL,EAAOoR,EAAc,GACrBC,EAAe,CACjBvQ,GAAId,EAAKc,GACTyK,SAAUvL,EAAKuL,SACfsD,UAAW7O,EAAK6O,UAChBC,SAAU9O,EAAK8O,SACf1K,MAAO,kBAET6M,EAAQ,CACNxE,IAAI,EACJD,KAAM,kBAAMK,QAAQoE,QAAQ7R,KAAKwM,UAAUyF,YAI7CvE,EAAO,0CAOX,GAAIiE,EAAIG,SAAS,WAA6B,QAAhBF,EAAKtF,OAG/BsF,EAAKrF,SAC0B,0BAA/BqF,EAAKrF,QAAQtH,cAEb4M,EAAQ,CACNxE,IAAI,EACJD,KAAM,kBAAMK,QAAQoE,QAAQ7R,KAAKwM,UAAUzM,OAI7C2N,EAAO,qBAOX,GAAIiE,EAAIF,MAAM,kBAAoC,QAAhBG,EAAKtF,OAErC,GACEsF,EAAKrF,SAC0B,0BAA/BqF,EAAKrF,QAAQtH,cACb,CAEA,IAAIiN,EAAWP,EAAIQ,MAAM,KACrBzQ,EAAK0Q,SAASF,EAASA,EAASlG,OAAS,IACzCqG,EAAetS,EAAM6C,QAAO,SAAAhC,GAC9B,OAAOA,EAAKc,KAAOA,KAEjBd,EAAOyR,EAAarG,OAASqG,EAAa,GAAK,KAGnDR,EAAQ,CAAExE,IAAI,EAAMD,KAAM,kBAAMpN,KAAKwM,UAAU5L,WAG/C8M,EAAO,oBAlBX,CAyBA,GAAIiE,EAAIG,SAAS,oBAAsC,SAAhBF,EAAKtF,OAAmB,CAE7D,IAAIgG,EAAUtS,KAAKC,MAAM2R,EAAKhQ,MAM9B,OAHoB7B,EAAM6C,QAAO,SAAAhC,GAC/B,OAAOA,EAAKuL,WAAamG,EAAQnG,YAChCH,YAED0B,EAAO,aAAe4E,EAAQnG,SAAW,uBAK3CmG,EAAQ5Q,GAAK3B,EAAMiM,OACfpB,KAAK2H,IAAL,MAAA3H,KAAI,YAAQ7K,EAAMwC,KAAI,SAAA3B,GAAI,OAAIA,EAAKc,QAAO,EAC1C,EACJ3B,EAAMkO,KAAKqE,GACXpS,aAAa0M,QAAQ,QAAS5M,KAAKwM,UAAUzM,SAG7C8R,EAAQ,CACNxE,IAAI,EACJD,KAAM,kBAAMK,QAAQoE,QAAQ7R,KAAKwM,UAAU8F,QAO/C,GAAIX,EAAIF,MAAM,kBAAoC,QAAhBG,EAAKtF,OAAkB,CAEvD,IAAIkG,EAAaxS,KAAKC,MAAM2R,EAAKhQ,MAQjC,GALoB7B,EAAM6C,QAAO,SAAAhC,GAC/B,GAAIA,EAAKc,KAAO8Q,EAAW9Q,GACzB,OAAOd,EAAKuL,WAAaqG,EAAWrG,YAErCH,OAGD,YADA0B,EAAO,aAAe8E,EAAWrG,SAAW,sBAK9C,IAAIsG,EAAe1S,EAAMwC,KAAI,SAAA3B,GAC3B,OAAIA,EAAKc,KAAO8Q,EAAW9Q,GAClB,eAAKd,EAAZ,GAAqB4R,GAEhB5R,KAWT,OATAb,EAAQ0S,EACRvS,aAAa0M,QAAQ,QAAS5M,KAAKwM,UAAUzM,SAG7C8R,EAAQ,CACNxE,IAAI,EACJD,KAAM,kBAAMK,QAAQoE,QAAQ7R,KAAKwM,UAAUzM,OAO/C,GAAI4R,EAAIF,MAAM,kBAAoC,WAAhBG,EAAKtF,OAErC,GACEsF,EAAKrF,SAC0B,0BAA/BqF,EAAKrF,QAAQtH,cACb,CAIA,IAFA,IAAIiN,EAAWP,EAAIQ,MAAM,KACrBzQ,EAAK0Q,SAASF,EAASA,EAASlG,OAAS,IACpC0G,EAAI,EAAGA,EAAI3S,EAAMiM,OAAQ0G,IAAK,CAErC,GADW3S,EAAM2S,GACRhR,KAAOA,EAAI,CAElB3B,EAAM4S,OAAOD,EAAG,GAChBxS,aAAa0M,QAAQ,QAAS5M,KAAKwM,UAAUzM,IAC7C,OAKJ8R,EAAQ,CAAExE,IAAI,EAAMD,KAAM,kBAAMK,QAAQoE,kBAGxCnE,EAAO,qBAOXgE,EAAUC,EAAKC,GAAMlF,MAAK,SAAAhH,GAAQ,OAAImM,EAAQnM,SAC7C,S0C5JTkN,GAEAC,IAASnL,OACP,kBAAC,IAAD,CAAU/C,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAUmC,OAAK,EAACgM,KAAM5N,EAAaoC,UAAWyD,GAAYvD,OAAQL,KAClE,kBAAC,GAAD,CAAUL,OAAK,EAACgM,KAAM5N,EAAcoC,UAAWgI,GAAO9H,OAAQL,KAC9D,kBAAC,GAAD,CAAcL,OAAK,EAACgM,KAAM5N,EAAgBoC,UAAW4I,GAAS1I,OAAQL,KACtE,kBAAC,GAAD,CAAcL,OAAK,EAACgM,KAAM5N,EAAiBoC,UAAW4J,GAAU1J,OAAQL,KACxE,kBAAC,GAAD,CAAcL,OAAK,EAACgM,KAAM5N,EAAkBoC,UAAWsJ,GAAWpJ,OAAQL,KAC1E,kBAAC,GAAD,CAAcL,OAAK,EAACgM,KAAM5N,EAAiBoC,UAAW6J,GAAU3J,OAAQL,KACxE,kBAAC,GAAD,CAAcL,OAAK,EAACgM,KAAM5N,EAAgBoC,UAAW8J,GAAS5J,OAAQL,KACtE,kBAAC,GAAD,CAAUL,OAAK,EAACgM,KAAM5N,EAAcoC,UAAW4H,GAAO1H,OAAQvB,QAIpE8M,SAASC,eAAe,SAG1B1N,ID0FM,kBAAmB2N,WACrBA,UAAUC,cAAcC,MAAMzG,MAAK,SAAA0G,GACjCA,EAAaC,kB","file":"static/js/main.4831f40c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/John-Doe.71da2e9c.jpg\";","// array in local storage for registered users\r\nlet users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n\r\nexport function configureFakeBackend() {\r\n  let realFetch = window.fetch;\r\n  window.fetch = function(url, opts) {\r\n    return new Promise((resolve, reject) => {\r\n      // wrap in timeout to simulate server api call\r\n      setTimeout(() => {\r\n        // authenticate\r\n        if (url.endsWith(\"/users/authenticate\") && opts.method === \"POST\") {\r\n          // get parameters from post request\r\n          let params = JSON.parse(opts.body);\r\n\r\n          // find if any user matches login credentials\r\n          let filteredUsers = users.filter(user => {\r\n            return (\r\n              user.username === params.username &&\r\n              user.password === params.password\r\n            );\r\n          });\r\n\r\n          if (filteredUsers.length) {\r\n            // if login details are valid return user details and fake jwt token\r\n            let user = filteredUsers[0];\r\n            let responseJson = {\r\n              id: user.id,\r\n              username: user.username,\r\n              firstName: user.firstName,\r\n              lastName: user.lastName,\r\n              token: \"fake-jwt-token\"\r\n            };\r\n            resolve({\r\n              ok: true,\r\n              text: () => Promise.resolve(JSON.stringify(responseJson))\r\n            });\r\n          } else {\r\n            // else return error\r\n            reject(\"Username or password is incorrect\");\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        // get users\r\n        if (url.endsWith(\"/users\") && opts.method === \"GET\") {\r\n          // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\r\n          if (\r\n            opts.headers &&\r\n            opts.headers.Authorization === \"Bearer fake-jwt-token\"\r\n          ) {\r\n            resolve({\r\n              ok: true,\r\n              text: () => Promise.resolve(JSON.stringify(users))\r\n            });\r\n          } else {\r\n            // return 401 not authorised if token is null or invalid\r\n            reject(\"Unauthorised\");\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        // get user by id\r\n        if (url.match(/\\/users\\/\\d+$/) && opts.method === \"GET\") {\r\n          // check for fake auth token in header and return user if valid, this security is implemented server side in a real application\r\n          if (\r\n            opts.headers &&\r\n            opts.headers.Authorization === \"Bearer fake-jwt-token\"\r\n          ) {\r\n            // find user by id in users array\r\n            let urlParts = url.split(\"/\");\r\n            let id = parseInt(urlParts[urlParts.length - 1]);\r\n            let matchedUsers = users.filter(user => {\r\n              return user.id === id;\r\n            });\r\n            let user = matchedUsers.length ? matchedUsers[0] : null;\r\n\r\n            // respond 200 OK with user\r\n            resolve({ ok: true, text: () => JSON.stringify(user) });\r\n          } else {\r\n            // return 401 not authorised if token is null or invalid\r\n            reject(\"Unauthorised\");\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        // register user\r\n        if (url.endsWith(\"/users/register\") && opts.method === \"POST\") {\r\n          // get new user object from post body\r\n          let newUser = JSON.parse(opts.body);\r\n\r\n          // validation\r\n          let duplicateUser = users.filter(user => {\r\n            return user.username === newUser.username;\r\n          }).length;\r\n          if (duplicateUser) {\r\n            reject('Username \"' + newUser.username + '\" is already taken');\r\n            return;\r\n          }\r\n\r\n          // save new user\r\n          newUser.id = users.length\r\n            ? Math.max(...users.map(user => user.id)) + 1\r\n            : 1;\r\n          users.push(newUser);\r\n          localStorage.setItem(\"users\", JSON.stringify(users));\r\n\r\n          // respond 200 OK\r\n          resolve({\r\n            ok: true,\r\n            text: () => Promise.resolve(JSON.stringify(newUser))\r\n          });\r\n\r\n          return;\r\n        }\r\n\r\n        // edit user\r\n        if (url.match(/\\/users\\/\\d+$/) && opts.method === \"PUT\") {\r\n          // get edited user object from post body\r\n          let editedUser = JSON.parse(opts.body);\r\n\r\n          // validation\r\n          let duplicateUser = users.filter(user => {\r\n            if (user.id !== editedUser.id) {\r\n              return user.username === editedUser.username;\r\n            }\r\n          }).length;\r\n          if (duplicateUser) {\r\n            reject('Username \"' + editedUser.username + '\" is already taken');\r\n            return;\r\n          }\r\n\r\n          //save edited user\r\n          let updatedUsers = users.map(user => {\r\n            if (user.id === editedUser.id) {\r\n              return { ...user, ...editedUser };\r\n            }\r\n            return user;\r\n          });\r\n          users = updatedUsers;\r\n          localStorage.setItem(\"users\", JSON.stringify(users));\r\n\r\n          // respond 200 OK\r\n          resolve({\r\n            ok: true,\r\n            text: () => Promise.resolve(JSON.stringify(users))\r\n          });\r\n\r\n          return;\r\n        }\r\n\r\n        // delete user\r\n        if (url.match(/\\/users\\/\\d+$/) && opts.method === \"DELETE\") {\r\n          // check for fake auth token in header and return user if valid, this security is implemented server side in a real application\r\n          if (\r\n            opts.headers &&\r\n            opts.headers.Authorization === \"Bearer fake-jwt-token\"\r\n          ) {\r\n            // find user by id in users array\r\n            let urlParts = url.split(\"/\");\r\n            let id = parseInt(urlParts[urlParts.length - 1]);\r\n            for (let i = 0; i < users.length; i++) {\r\n              let user = users[i];\r\n              if (user.id === id) {\r\n                // delete user\r\n                users.splice(i, 1);\r\n                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                break;\r\n              }\r\n            }\r\n\r\n            // respond 200 OK\r\n            resolve({ ok: true, text: () => Promise.resolve() });\r\n          } else {\r\n            // return 401 not authorised if token is null or invalid\r\n            reject(\"Unauthorised\");\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        // pass through any requests not handled above\r\n        realFetch(url, opts).then(response => resolve(response));\r\n      }, 500);\r\n    });\r\n  };\r\n}\r\n","export enum ActionTypes {\r\n  GET_ENTRIES_REQUEST,\r\n  GET_ENTRIES_SUCCESS,\r\n  GET_ENTRIES_FAILURE,\r\n  ADD_ENTRY,\r\n  EDIT_ENTRY,\r\n  REMOVE_ENTRY,\r\n  GET_ENTRY_BY_ID,\r\n  REGISTER_REQUEST,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  LOGOUT,\r\n  LOGOUT_SUCCESS,\r\n  LOGOUT_FAILURE,\r\n  GET_USERS_REQUEST,\r\n  GET_USERS_SUCCESS,\r\n  GET_USERS_FAILURE,\r\n  EDIT_USER_REQUEST,\r\n  EDIT_USER_SUCCESS,\r\n  EDIT_USER_FAILURE,\r\n  REMOVE_USER_REQUEST,\r\n  REMOVE_USER_SUCCESS,\r\n  REMOVE_USER_FAILURE\r\n}\r\n","import { IAction } from \"store/entries/types\";\r\nimport { Reducer } from \"redux\";\r\n\r\nexport type Mutator<S, P = any> = (state: S, payload: P) => S;\r\nexport interface ReducerHandler<S> {\r\n  [actionType: number]: Mutator<S>;\r\n}\r\nexport default function createReducer<S>(\r\n  initialState: S,\r\n  handlers: ReducerHandler<S>\r\n): Reducer<S> {\r\n  return (state: S = initialState, action: IAction): S => {\r\n    if (handlers[action.type]) {\r\n      return handlers[action.type](state, action.payload);\r\n    }\r\n    return state;\r\n  };\r\n}\r\n","import { Mutator } from \"_helpers/createReducer\";\r\nimport { IUserState } from \"store/_reducers/user.reducer\";\r\nimport { ILoginState } from \"store/_reducers/authentication.reducer\";\r\nimport { IUser } from \"data/user\";\r\n\r\ntype LoginMutator<P = any> = Mutator<ILoginState, P>;\r\ntype UserMutator<P = any> = Mutator<IUserState, P>;\r\n\r\nexport const loginRequest: LoginMutator<any> = (state, data) => {\r\n  return {\r\n    loggingIn: true,\r\n    user: data\r\n  };\r\n};\r\n\r\nexport const loginSuccess: LoginMutator<any> = (state, data) => {\r\n  return {\r\n    ...state,\r\n    user: data,\r\n    loggingIn: false\r\n  };\r\n};\r\n\r\nexport const loginFailure: LoginMutator<Error> = (state, error) => {\r\n  return {\r\n    ...state,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const logout: LoginMutator = state => {\r\n  return {\r\n    ...state,\r\n    loggingIn: false\r\n  };\r\n};\r\n\r\nexport const logoutSuccess: LoginMutator = state => {\r\n  return {\r\n    ...state\r\n  };\r\n};\r\n\r\nexport const logoutFailure: LoginMutator<Error> = (state, error) => {\r\n  return {\r\n    ...state,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const registerRequest: UserMutator<any> = (state, data) => {\r\n  return {\r\n    ...state,\r\n    registering: data\r\n  };\r\n};\r\n\r\nexport const registersuccess: UserMutator<IUser> = (state, data) => {\r\n  const newUsers = state.users.concat(data);\r\n  return {\r\n    ...state,\r\n    users: newUsers,\r\n    registering: false\r\n  };\r\n};\r\n\r\nexport const registerFailure: UserMutator<Error> = (state, error) => {\r\n  return {\r\n    ...state,\r\n    error: error,\r\n    registering: false\r\n  };\r\n};\r\n\r\nexport const getUsersRequest: UserMutator<IUserState> = state => {\r\n  return {\r\n    ...state,\r\n    loading: true\r\n  };\r\n};\r\n\r\nexport const getUsersSuccess: UserMutator = (state, data) => {\r\n  return {\r\n    ...state,\r\n    users: data,\r\n    loading: false\r\n  };\r\n};\r\n\r\nexport const getUsersFailure: UserMutator<Error> = (state, error) => {\r\n  return {\r\n    ...state,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const editUserRequest: UserMutator<Boolean> = (state, editing) => {\r\n  return { ...state, editing };\r\n};\r\n\r\nexport const editUserSuccess: UserMutator<IUser> = (state, data) => {\r\n  const updatedItems = state.users.map(user => {\r\n    if (user.id === data.id) {\r\n      return { ...user, ...data };\r\n    }\r\n    return user;\r\n  });\r\n  return { ...state, users: updatedItems, editing: false };\r\n};\r\n\r\nexport const editUserFailure: UserMutator<Error> = (state, error) => {\r\n  return {\r\n    ...state,\r\n    error: error,\r\n    editing: false\r\n  };\r\n};\r\n\r\nexport const deleteUserRequest: UserMutator<Boolean> = state => {\r\n  return {\r\n    ...state,\r\n    deleting: true\r\n  };\r\n};\r\n\r\nexport const deleteUserSuccess: UserMutator<number> = (state, id) => {\r\n  return {\r\n    ...state,\r\n    deleting: false,\r\n    users: state.users.filter(user => user.id !== id)\r\n  };\r\n};\r\n\r\nexport const deleteUserFailure: UserMutator<Error> = (state, error) => {\r\n  return {\r\n    ...state,\r\n    error: error\r\n  };\r\n};\r\n","import createReducer, { ReducerHandler } from \"_helpers/createReducer\";\r\nimport { IUser } from \"data/user\";\r\nimport { ActionTypes } from \"data/actionTypes\";\r\nimport * as mutators from \"../users/mutations\";\r\n\r\nexport interface ILoginState {\r\n  user: IUser;\r\n  loggingIn: boolean;\r\n  error?: Error;\r\n}\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\") || \"{}\");\r\n\r\nconst initialState: ILoginState = {\r\n  user: user ? user : {},\r\n  loggingIn: false,\r\n  error: undefined\r\n};\r\n\r\nconst handlers: ReducerHandler<ILoginState> = {\r\n  [ActionTypes.LOGIN_REQUEST]: mutators.loginRequest,\r\n  [ActionTypes.LOGIN_SUCCESS]: mutators.loginSuccess,\r\n  [ActionTypes.LOGIN_FAILURE]: mutators.loginFailure,\r\n  [ActionTypes.LOGOUT]: mutators.logout,\r\n  [ActionTypes.LOGOUT_SUCCESS]: mutators.logoutSuccess,\r\n  [ActionTypes.LOGOUT_FAILURE]: mutators.logoutFailure\r\n};\r\n\r\nexport const authenticationReducer = createReducer<ILoginState>(\r\n  initialState,\r\n  handlers\r\n);\r\n","import createReducer, { ReducerHandler } from \"_helpers/createReducer\";\r\nimport { IEntry } from \"data/entry\";\r\nimport { ActionTypes } from \"data/actionTypes\";\r\nimport * as mutators from \"../entries/mutations\";\r\n\r\nexport interface IEntriesState {\r\n  entries: IEntry[];\r\n  error?: Error;\r\n}\r\nconst initialState: IEntriesState = {\r\n  entries: [\r\n    {\r\n      id: 484937,\r\n      title: \"Setup een lokaal project\",\r\n      body:\r\n        \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum.\",\r\n      date: \"mrt 17, 2020\",\r\n      categoryId: 3,\r\n      userId: 342,\r\n    },\r\n    {\r\n      id: 484938,\r\n      title: \"Live- / testomgeving synchroniseren\",\r\n      body:\r\n        \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum.\",\r\n      date: \"mrt 17, 2020\",\r\n      categoryId: 3,\r\n      userId: 342,\r\n    },\r\n    {\r\n      id: 484939,\r\n      title: \"Drupal 7 (module) updates\",\r\n      body:\r\n        \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum.\",\r\n      date: \"mrt 17, 2020\",\r\n      categoryId: 3,\r\n      userId: 342,\r\n    },\r\n    {\r\n      id: 484940,\r\n      title: \"Drupal 8 (module) updates\",\r\n      body:\r\n        \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum.\",\r\n      date: \"mrt 17, 2020\",\r\n      categoryId: 3,\r\n      userId: 342,\r\n    },\r\n    {\r\n      id: 484941,\r\n      title: \"Drupal 8\",\r\n      body:\r\n        \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum.\",\r\n      date: \"mrt 17, 2020\",\r\n      categoryId: 3,\r\n      userId: 342,\r\n    },\r\n    {\r\n      id: 484942,\r\n      title: \"Drupal EHBO\",\r\n      body:\r\n        \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum.\",\r\n      date: \"mrt 17, 2020\",\r\n      categoryId: 3,\r\n      userId: 342,\r\n    },\r\n    {\r\n      id: 484943,\r\n      title: \"Jira rechten systeem\",\r\n      body:\r\n        \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum.\",\r\n      date: \"mrt 17, 2020\",\r\n      categoryId: 4,\r\n      userId: 342,\r\n    },\r\n    {\r\n      id: 484944,\r\n      title: \"Klanten toegang geven tot nog wat\",\r\n      body:\r\n        \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum.\",\r\n      date: \"mrt 17, 2020\",\r\n      categoryId: 4,\r\n      userId: 342,\r\n    },\r\n    {\r\n      id: 484945,\r\n      title: \"Issue types\",\r\n      body:\r\n        \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum.\",\r\n      date: \"mrt 17, 2020\",\r\n      categoryId: 4,\r\n      userId: 342,\r\n    },\r\n    {\r\n      id: 484946,\r\n      title: \"Jira Project aanmaken\",\r\n      body:\r\n        \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum.\",\r\n      date: \"mrt 17, 2020\",\r\n      categoryId: 4,\r\n      userId: 342,\r\n    },\r\n    {\r\n      id: 484947,\r\n      title: \"Feature requests Jira\",\r\n      body:\r\n        \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum.\",\r\n      date: \"mrt 17, 2020\",\r\n      categoryId: 4,\r\n      userId: 342,\r\n    },\r\n  ],\r\n  error: undefined,\r\n};\r\n\r\nconst handlers: ReducerHandler<IEntriesState> = {\r\n  [ActionTypes.GET_ENTRIES_SUCCESS]: mutators.getSuccess,\r\n  [ActionTypes.GET_ENTRIES_FAILURE]: mutators.getFailure,\r\n  [ActionTypes.ADD_ENTRY]: mutators.addEntry,\r\n  [ActionTypes.EDIT_ENTRY]: mutators.editEntry,\r\n  [ActionTypes.REMOVE_ENTRY]: mutators.removeEntry,\r\n  [ActionTypes.GET_ENTRY_BY_ID]: mutators.getEntryById,\r\n};\r\n\r\nexport const entryReducer = createReducer<IEntriesState>(\r\n  initialState,\r\n  handlers\r\n);\r\n","import { Mutator } from \"_helpers/createReducer\";\r\nimport { IEntriesState } from \"store/_reducers/entry.reducer\";\r\nimport { IEntry } from \"data/entry\";\r\n\r\ntype EntryMutator<P = any> = Mutator<IEntriesState, P>;\r\n\r\nexport const getSuccess: EntryMutator<IEntry> = (state, data) => {\r\n  const newEntry = state.entries.concat(data);\r\n  return {\r\n    ...state,\r\n    entries: newEntry\r\n  };\r\n};\r\n\r\nexport const getFailure: EntryMutator<Error> = (state, error) => {\r\n  return {\r\n    ...state,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const addEntry: EntryMutator<IEntry> = (state, data) => {\r\n  const newEntry = state.entries.concat(data);\r\n  return {\r\n    ...state,\r\n    entries: newEntry\r\n  };\r\n};\r\n\r\nexport const editEntry: EntryMutator<IEntry> = (state, data) => {\r\n  const updatedItems = state.entries.map(entry => {\r\n    if (entry.id === data.id) {\r\n      return { ...entry, ...data };\r\n    }\r\n    return entry;\r\n  });\r\n  return { ...state, entries: updatedItems };\r\n};\r\n\r\nexport const removeEntry: EntryMutator<number> = (state, data) => {\r\n  console.log(\"removing item by id:\", data);\r\n  return {\r\n    ...state,\r\n    entries: state.entries.filter(entry => entry.id !== data)\r\n  };\r\n};\r\n\r\nexport const getEntryById: EntryMutator<number> = (state, data) => {\r\n  return {\r\n    ...state,\r\n    entries: state.entries.filter(entry => entry.id !== data)\r\n  };\r\n};\r\n","import createReducer, { ReducerHandler } from \"_helpers/createReducer\";\r\nimport { IUser } from \"data/user\";\r\nimport { ActionTypes } from \"data/actionTypes\";\r\nimport * as mutators from \"../users/mutations\";\r\n\r\nexport interface IUserState {\r\n  users: IUser[];\r\n  loading: boolean;\r\n  deleting: boolean;\r\n  registering: boolean;\r\n  error?: Error;\r\n  editing?: Boolean;\r\n}\r\n\r\nconst initialState: IUserState = {\r\n  users: [],\r\n  loading: false,\r\n  deleting: false,\r\n  registering: false,\r\n  error: undefined,\r\n  editing: false\r\n};\r\n\r\nconst handlers: ReducerHandler<IUserState> = {\r\n  [ActionTypes.REGISTER_REQUEST]: mutators.registerRequest,\r\n  [ActionTypes.REGISTER_SUCCESS]: mutators.registersuccess,\r\n  [ActionTypes.REGISTER_FAILURE]: mutators.registerFailure,\r\n\r\n  [ActionTypes.GET_USERS_REQUEST]: mutators.getUsersRequest,\r\n  [ActionTypes.GET_USERS_SUCCESS]: mutators.getUsersSuccess,\r\n  [ActionTypes.GET_USERS_FAILURE]: mutators.getUsersFailure,\r\n\r\n  [ActionTypes.EDIT_USER_REQUEST]: mutators.editUserRequest,\r\n  [ActionTypes.EDIT_USER_SUCCESS]: mutators.editUserSuccess,\r\n  [ActionTypes.EDIT_USER_FAILURE]: mutators.editUserFailure,\r\n\r\n  [ActionTypes.REMOVE_USER_REQUEST]: mutators.deleteUserRequest,\r\n  [ActionTypes.REMOVE_USER_SUCCESS]: mutators.deleteUserSuccess,\r\n  [ActionTypes.REMOVE_USER_FAILURE]: mutators.deleteUserFailure\r\n};\r\n\r\nexport const userReducer = createReducer<IUserState>(initialState, handlers);\r\n","import { combineReducers } from \"redux\";\r\nimport { useSelector, TypedUseSelectorHook } from \"react-redux\";\r\n\r\nimport { authenticationReducer } from \"./authentication.reducer\";\r\nimport { entryReducer } from \"store/_reducers/entry.reducer\";\r\nimport { userReducer } from \"store/_reducers/user.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  authenticationReducer,\r\n  entryReducer,\r\n  userReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport { ActionTypes } from \"data/actionTypes\";\r\n\r\nimport rootReducer from \"store/_reducers\";\r\n\r\nconst actionTypeEnumToString = (action: any): any =>\r\n  typeof action.type === \"number\" && ActionTypes[action.type]\r\n    ? {\r\n        type: ActionTypes[action.type],\r\n        payload: action.payload\r\n      }\r\n    : action;\r\n\r\nconst logger = createLogger({ actionTransformer: actionTypeEnumToString });\r\nconst composeEnhancers = composeWithDevTools({\r\n  actionSanitizer: actionTypeEnumToString\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(logger, thunkMiddleware))\r\n);\r\n","export function authHeader() {\r\n  // return authorization header with jwt token\r\n  let user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  if (user && user.token) {\r\n    return { Authorization: \"Bearer \" + user.token };\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","export const routes = {\r\n  Home: \"/\",\r\n  Entries: \"/entries\",\r\n  AddEntry: \"/entries/new\",\r\n  EditEntry: \"/entries/:id\",\r\n  Admin: \"/admin\",\r\n  Login: \"/login\",\r\n  Settings: \"/settings\",\r\n  Profile: \"/profile\"\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: `http://jsonplaceholder.typicode.com/CANCEL`,\r\n});\r\n","import { IPureAction } from \"store/entries/types\";\r\nimport { ActionTypes } from \"data/actionTypes\";\r\nimport { IEntry, IEntryState } from \"data/entry\";\r\nimport API from \"store/api\";\r\nimport { store } from \"_helpers\";\r\n\r\n// Fetch request to API\r\nexport const fetchEntriesRequest = async () => {\r\n  try {\r\n    const response = await API.get(`posts`);\r\n    return store.dispatch(fetchSuccess(response.data));\r\n  } catch (error) {\r\n    console.log(error);\r\n    return store.dispatch(fetchError(error));\r\n  }\r\n};\r\n\r\n// Set entries\r\nexport const fetchSuccess = (\r\n  data: IEntryState\r\n): IPureAction<ActionTypes.GET_ENTRIES_SUCCESS, IEntryState> => ({\r\n  type: ActionTypes.GET_ENTRIES_SUCCESS,\r\n  payload: data\r\n});\r\n\r\n// Error if fetch has failed\r\nexport const fetchError = (\r\n  error: Error\r\n): IPureAction<ActionTypes.GET_ENTRIES_FAILURE, Error> => ({\r\n  type: ActionTypes.GET_ENTRIES_FAILURE,\r\n  payload: error\r\n});\r\n\r\n// Add new entry\r\nexport const addEntry = (\r\n  data: IEntry\r\n): IPureAction<ActionTypes.ADD_ENTRY, IEntry> => ({\r\n  type: ActionTypes.ADD_ENTRY,\r\n  payload: data\r\n});\r\n\r\n// Edit entry\r\nexport const editEntry = (\r\n  data: IEntry\r\n): IPureAction<ActionTypes.EDIT_ENTRY, IEntry> => ({\r\n  type: ActionTypes.EDIT_ENTRY,\r\n  payload: data\r\n});\r\n\r\n// Remove Entry\r\nexport const removeEntry = (\r\n  id: number\r\n): IPureAction<ActionTypes.REMOVE_ENTRY, Number> => ({\r\n  type: ActionTypes.REMOVE_ENTRY,\r\n  payload: id\r\n});\r\n\r\n// Remove Entry\r\nexport const getEntryById = (\r\n  id: number\r\n): IPureAction<ActionTypes.GET_ENTRY_BY_ID, Number> => ({\r\n  type: ActionTypes.GET_ENTRY_BY_ID,\r\n  payload: id\r\n});\r\n","import React from \"react\";\r\n\r\nexport const LoginLayout: React.FunctionComponent = (props) => {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n};\r\n\r\nexport default LoginLayout;\r\n","import React from \"react\";\r\nimport * as Icon from \"react-feather\";\r\n\r\nexport const menuIcons = [\r\n  <Icon.Grid />,\r\n  <Icon.Users />,\r\n  <Icon.Flag />,\r\n  <Icon.Activity />,\r\n];\r\nexport const headerIcons = [<Icon.Search />, <Icon.Plus />];\r\nexport const sideviewIcons = [<Icon.Edit />, <Icon.Trash2 />];\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { routes } from \"data/routes\";\r\nimport { menuIcons } from \"data/featherIcons\";\r\nimport johnDoe from \"assets/img/John-Doe.jpg\";\r\n\r\nexport const Menu: React.FunctionComponent = () => {\r\n  const [homeIcon, usersIcon, goalIcon, ActivityIcon] = menuIcons;\r\n\r\n  return (\r\n    <nav role=\"navigation\" className=\"navbar\">\r\n      <div className=\"logo\">\r\n        <NavLink exact to={routes.Home} className=\"logo\">\r\n          Super\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"main\">\r\n        <NavLink exact to={routes.Home} className=\"route\">\r\n          <i className=\"icon\">{homeIcon}</i>\r\n        </NavLink>\r\n        <NavLink to={routes.Entries} className=\"route\">\r\n          <i className=\"icon\">{usersIcon}</i>\r\n        </NavLink>\r\n        <NavLink exact to={routes.Profile} className=\"route\">\r\n          <i className=\"icon\">{goalIcon}</i>\r\n        </NavLink>\r\n        <NavLink exact to={routes.Settings} className=\"route\">\r\n          <i className=\"icon\">{ActivityIcon}</i>\r\n        </NavLink>\r\n        <NavLink exact to={routes.Admin} className=\"route\">\r\n          <i className=\"icon\">&#xe801;</i>\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"profile\">\r\n        <img src={johnDoe} alt=\"John Doe\" />\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport Menu from \"components/UI/Menu\";\r\n\r\nexport const MainLayout: React.FunctionComponent = (props) => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Menu />\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","import React, { ReactNode, ComponentType } from \"react\";\r\nimport { Route } from \"react-router\";\r\nimport { RouteComponentProps, RouteProps, Redirect } from \"react-router-dom\";\r\n\r\nimport { useUserCheck } from \"hooks/useUserInfo\";\r\n\r\ninterface IAppRouteProps extends RouteProps {\r\n  component: ComponentType<any>;\r\n  layout: ComponentType;\r\n}\r\n\r\nexport const AppRoute = (props: IAppRouteProps) => {\r\n  // Maak een hook die checkt of je ingelogd bent\r\n  // const [userInfo] = useUserCheck();\r\n  // console.log(userInfo);\r\n  const { component: Component, layout: Layout, ...rest } = props;\r\n\r\n  const render = (props: RouteComponentProps<any>): ReactNode => {\r\n    return (\r\n      <Layout>\r\n        <Component {...props} />\r\n      </Layout>\r\n    );\r\n  };\r\n\r\n  return <Route {...rest} render={render} />;\r\n};\r\n","import React, { ReactNode, ComponentType } from \"react\";\r\nimport {\r\n  Route,\r\n  Redirect,\r\n  RouteProps,\r\n  RouteComponentProps\r\n} from \"react-router-dom\";\r\n\r\ninterface IPrivateRouteProps extends RouteProps {\r\n  component: ComponentType<any>,\r\n  layout: ComponentType\r\n}\r\n\r\nexport const PrivateRoute = (props: IPrivateRouteProps) => {\r\n  const { component: Component, layout: Layout, ...rest } = props;\r\n\r\n  if (!Component) {\r\n    throw Error(\"component is undefined\");\r\n  }\r\n\r\n  const render = (props: RouteComponentProps<any>): ReactNode => {\r\n    if (localStorage.getItem(\"user\")) {\r\n      return <Layout>\r\n        <Component {...props} />\r\n      </Layout>;\r\n    }\r\n    return (\r\n      <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\r\n    );\r\n  };\r\n\r\n  return <Route {...rest} render={render} />;\r\n};","import { useState } from \"react\";\r\n\r\nexport function useFormFields(initialState) {\r\n  const [fields, setValues] = useState(initialState);\r\n\r\n  return [\r\n    fields,\r\n    function(event) {\r\n      setValues({\r\n        ...fields,\r\n        [event.target.id]: event.target.value\r\n      });\r\n    }\r\n  ];\r\n}\r\n","import React from \"react\";\r\nimport { headerIcons } from \"data/featherIcons\";\r\n\r\ninterface IProps {\r\n  searchTerm: string;\r\n  handleFieldChange: any;\r\n  setMode: any;\r\n  count: number;\r\n}\r\n\r\nexport const Header: React.FunctionComponent<IProps> = (props) => {\r\n  const { searchTerm, handleFieldChange, setMode, count } = props;\r\n  const [searchIcon, plusIcon] = headerIcons;\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header-state\">\r\n        <div className=\"header-state-title\">Activities</div>\r\n        <div className=\"header-state-count\">\r\n          <i>{count}</i>\r\n        </div>\r\n        <div className=\"header-state-new\">\r\n          <a onClick={() => setMode(1)}>{plusIcon}</a>\r\n        </div>\r\n      </div>\r\n      <div className=\"header-search\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for activity\"\r\n          id=\"searchTerm\"\r\n          value={searchTerm}\r\n          onChange={handleFieldChange}\r\n        />\r\n      </div>\r\n      <div className=\"header-filter\">\r\n        <div className=\"item selected\">ALL</div>\r\n        <div className=\"item\">DRUPAL</div>\r\n        <div className=\"item\">JIRA</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { IEntry, IEntryState } from \"data/entry\";\r\n\r\ninterface IProps extends IEntryState {\r\n  searchTerm: string;\r\n  setSearchResults: any;\r\n  selected: IEntry;\r\n  setSelected: any;\r\n  setMode: any;\r\n}\r\n\r\nexport const List: React.FunctionComponent<IProps> = (props) => {\r\n  const { entries, selected, setSelected, setMode } = props;\r\n\r\n  const selectActivity = (activity: IEntry) => {\r\n    setSelected(activity);\r\n    setMode(0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"activities\">\r\n      {/* ACTIVITY */}\r\n      {/* <ReactSortable className=\"sortable\" list={entries} setList={setSearchResults}> */}\r\n      {entries.map((activity) => (\r\n        <div key={activity.id}>\r\n          {/* <div>{CategoryTypes[activity.categoryId]}</div> */}\r\n          <div\r\n            className={\r\n              activity.id === selected.id ? \"activity selected\" : \"activity\"\r\n            }\r\n            onClick={() => selectActivity(activity)}\r\n          >\r\n            <div className=\"activity-icon\">\r\n              <a>SE</a>\r\n            </div>\r\n            <div className=\"activity-data\">\r\n              <div className=\"activity-title\">{activity.title}</div>\r\n              <div className=\"activity-read-time\">5 minutes read</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      {/* </ReactSortable> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import { store } from \"_helpers\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\ntype TypedUseDispatch = () => typeof store.dispatch;\r\nexport const useTypedDispatch: TypedUseDispatch = useDispatch;\r\n","import React, { useState } from \"react\";\r\nimport { IEntry } from \"data/entry\";\r\nimport { sideviewIcons } from \"data/featherIcons\";\r\nimport { useTypedDispatch } from \"hooks/useTypedDispatch\";\r\n\r\nimport { removeEntry } from \"store/entries/actions\";\r\n\r\ninterface Iprops {\r\n  data: IEntry;\r\n  setMode: any;\r\n}\r\n\r\nexport const SideView: React.FunctionComponent<Iprops> = (props) => {\r\n  const dispatch = useTypedDispatch();\r\n\r\n  const { id, title, body, date, categoryId, userId } = props.data;\r\n  const { setMode } = props;\r\n  const [editIcon, deleteIcon] = sideviewIcons;\r\n\r\n  const tabs = [\"Activity\", \"My Notes\", \"Goal\"];\r\n  const [tabMode, setTabMode] = useState(0);\r\n\r\n  const deleteItem = () => {\r\n    dispatch(removeEntry(id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* {tabMode} */}\r\n      <div className=\"activity-fn\">\r\n        <div className=\"item\">Last edit at {date}</div>\r\n        <div className=\"item edit\" onClick={() => setMode(2)}>\r\n          {editIcon}\r\n        </div>\r\n        <div className=\"item delete\" onClick={deleteItem}>\r\n          {deleteIcon}\r\n        </div>\r\n      </div>\r\n      <div className=\"activity\">\r\n        <div className=\"activity-menus\">\r\n          {/* Show all tabs and set selected class  */}\r\n          {tabs.map((tab, index) => (\r\n            <div\r\n              key={index}\r\n              className={index === tabMode ? \"item selected\" : \"item\"}\r\n            >\r\n              <a onClick={() => setTabMode(index)}>{tab}</a>\r\n            </div>\r\n          ))}\r\n          <div className=\"item complete\">\r\n            <input type=\"submit\" value=\"click to complete\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"activity-content\">\r\n          <div className=\"activity-content-title\">{title}</div>\r\n          <div className=\"activity-content-body\">{body}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideView;\r\n","import React, { useState, FormEvent, useEffect } from \"react\";\r\nimport { IEntry } from \"data/entry\";\r\nimport { useTypedDispatch } from \"hooks/useTypedDispatch\";\r\n\r\nimport { editEntry } from \"store/entries/actions\";\r\nimport { useFormFields } from \"hooks/useFormFields\";\r\n\r\ninterface IProps {\r\n  data: IEntry;\r\n  setMode: any;\r\n  setSelected: any;\r\n}\r\n\r\nexport const EditSideView: React.FunctionComponent<IProps> = (props) => {\r\n  const { id, title, body, date, categoryId, userId } = props.data;\r\n  const { setMode, setSelected } = props;\r\n\r\n  const dispatch = useTypedDispatch();\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    id,\r\n    title,\r\n    body,\r\n    categoryId,\r\n    date: new Date().toJSON().slice(0, 10).replace(/-/g, \"/\"),\r\n    userId,\r\n  });\r\n\r\n  const tabs = [\"Activity\", \"Goal\"];\r\n  const [tabMode, setTabMode] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let timer = setTimeout(() => dispatch(editEntry(fields)), 1000);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [fields.title]);\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(editEntry(fields));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"activity-fn\">\r\n        <div className=\"item\">Last edit at {date}</div>\r\n      </div>\r\n      <div className=\"activity\">\r\n        <div className=\"activity-menus\">\r\n          {/* Show all tabs and set selected class  */}\r\n          {tabs.map((tab, index) => (\r\n            <div\r\n              key={index}\r\n              className={index === tabMode ? \"item selected\" : \"item\"}\r\n            >\r\n              <a onClick={() => setTabMode(index)}>{tab}</a>\r\n            </div>\r\n          ))}\r\n          <div className=\"item complete\">\r\n            {/* <input type=\"submit\" value=\"save\" /> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"activity-content\">\r\n          <div className=\"activity-content-title\">\r\n            <input\r\n              id=\"title\"\r\n              placeholder=\"Add title...\"\r\n              value={fields.title}\r\n              onChange={handleFieldChange}\r\n            />\r\n          </div>\r\n          <div className=\"activity-content-body\">\r\n            <textarea\r\n              id=\"body\"\r\n              placeholder=\"Description...\"\r\n              value={fields.body}\r\n              onChange={handleFieldChange}\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditSideView;\r\n","import React, { useState, FormEvent } from \"react\";\r\nimport { IEntry } from \"data/entry\";\r\nimport { useTypedDispatch } from \"hooks/useTypedDispatch\";\r\n\r\nimport { addEntry } from \"store/entries/actions\";\r\nimport { useFormFields } from \"hooks/useFormFields\";\r\n\r\ninterface IProps {\r\n  setMode: any;\r\n  setSelected: any;\r\n}\r\n\r\nexport const NewSideView: React.FunctionComponent<IProps> = (props) => {\r\n  const { setMode, setSelected } = props;\r\n\r\n  const dispatch = useTypedDispatch();\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    id: Math.floor(Math.random() * 10000),\r\n    title: \"\",\r\n    body: \"\",\r\n    categoryId: 1,\r\n    date: new Date().toJSON().slice(0, 10).replace(/-/g, \"/\"),\r\n    userId: 13,\r\n  });\r\n\r\n  const tabs = [\"Activity\", \"Goal\"];\r\n  const [tabMode, setTabMode] = useState(0);\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(addEntry(fields));\r\n    setMode(0);\r\n    setSelected(fields);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"activity-fn\">\r\n        <div className=\"item\"></div>\r\n      </div>\r\n      <div className=\"activity\">\r\n        <div className=\"activity-menus\">\r\n          {/* Show all tabs and set selected class  */}\r\n          {tabs.map((tab, index) => (\r\n            <div\r\n              key={index}\r\n              className={index === tabMode ? \"item selected\" : \"item\"}\r\n            >\r\n              <a onClick={() => setTabMode(index)}>{tab}</a>\r\n            </div>\r\n          ))}\r\n          <div className=\"item complete\">\r\n            <input type=\"submit\" value=\"save\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"activity-content\">\r\n          <div className=\"activity-content-title\">\r\n            <input\r\n              id=\"title\"\r\n              placeholder=\"Add title...\"\r\n              value={fields.title}\r\n              onChange={handleFieldChange}\r\n            />\r\n          </div>\r\n          <div className=\"activity-content-body\">\r\n            <textarea\r\n              id=\"body\"\r\n              placeholder=\"Description...\"\r\n              value={fields.body}\r\n              onChange={handleFieldChange}\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewSideView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { useTypedSelector } from \"store/_reducers\";\r\nimport { useFormFields } from \"hooks/useFormFields\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\n\r\nimport { IEntry } from \"data/entry\";\r\nimport Header from \"components/Activities/Header\";\r\nimport List from \"components/Activities/List\";\r\nimport SideView from \"components/Activities/SideView\";\r\nimport EditSideView from \"components/Activities/EditSideView\";\r\nimport NewSideView from \"components/Activities/NewSideView\";\r\n\r\nexport const Activities: React.FunctionComponent<RouteComponentProps> = () => {\r\n  const activities = useTypedSelector((state) => state.entryReducer.entries);\r\n  const [selected, setSelected] = useState<IEntry>(activities[0]);\r\n  const [searchResults, setSearchResults] = useState(activities);\r\n\r\n  const [mode, setMode] = useState(0);\r\n\r\n  // Kan beter in de header\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    searchTerm: \"\",\r\n  });\r\n\r\n  // Find object in array by value\r\n  useEffect(() => {\r\n    const results = activities.filter((obj: any) => {\r\n      return Object.keys(obj).some((key) => {\r\n        if (obj[key] !== null) {\r\n          const tempKey = obj[key].toString().toLowerCase();\r\n          const tempSearch = fields.searchTerm.toLowerCase();\r\n          return tempKey.includes(tempSearch);\r\n        }\r\n      });\r\n    });\r\n    setSearchResults(results);\r\n  }, [fields.searchTerm]);\r\n\r\n  // Update searchResults if entries has been updated, couse we are mapping the searchResults\r\n  useEffect(() => {\r\n    setSearchResults(activities);\r\n    // update selected alleen als\r\n    // if()\r\n    setSelected(activities[0]);\r\n  }, [activities]);\r\n\r\n  // Change sideViews by mode number\r\n  const [sideView, setSideView] = useState(\r\n    <SideView data={selected} setMode={setMode} />\r\n  );\r\n  useEffect(() => {\r\n    if (mode === 0) {\r\n      setSideView(<SideView data={selected} setMode={setMode} />);\r\n    } else if (mode === 1) {\r\n      setSideView(<NewSideView setMode={setMode} setSelected={setSelected} />);\r\n    } else {\r\n      setSideView(\r\n        <EditSideView\r\n          data={selected}\r\n          setMode={setMode}\r\n          setSelected={setSelected}\r\n        />\r\n      );\r\n    }\r\n  }, [mode, selected]);\r\n\r\n  return (\r\n    <section className=\"activities-page\">\r\n      {/* LEFT */}\r\n      <div className=\"activities-left\">\r\n        <Header\r\n          searchTerm={fields.searchTerm}\r\n          handleFieldChange={handleFieldChange}\r\n          setMode={setMode}\r\n          count={activities.length}\r\n        />\r\n        <List\r\n          entries={searchResults}\r\n          searchTerm={fields.searchTerm}\r\n          setSearchResults={setSearchResults}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n          setMode={setMode}\r\n        />\r\n      </div>\r\n\r\n      {/* RIGHT */}\r\n      <div className=\"activities-right\">{sideView}</div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Activities;\r\n","import { authHeader } from \"../_helpers\";\r\n\r\nexport const userService = {\r\n  login,\r\n  logout,\r\n  register,\r\n  getAll,\r\n  getById,\r\n  update,\r\n  delete: _delete\r\n};\r\n\r\nfunction login(username, password) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ username, password })\r\n  };\r\n\r\n  return fetch(`/users/authenticate`, requestOptions)\r\n    .then(handleResponse)\r\n    .then(user => {\r\n      // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n\r\n      return user;\r\n    });\r\n}\r\n\r\nfunction logout() {\r\n  // remove user from local storage to log user out\r\n  localStorage.removeItem(\"user\");\r\n}\r\n\r\nfunction getAll() {\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: authHeader()\r\n  };\r\n\r\n  return fetch(`/users`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction getById(id) {\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: authHeader()\r\n  };\r\n\r\n  return fetch(`/users/${id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction register(user) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(user)\r\n  };\r\n\r\n  return fetch(`/users/register`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction update(user) {\r\n  const requestOptions = {\r\n    method: \"PUT\",\r\n    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(user)\r\n  };\r\n\r\n  return fetch(`/users/${user.id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\n// prefixed function name with underscore because delete is a reserved word in javascript\r\nfunction _delete(id) {\r\n  const requestOptions = {\r\n    method: \"DELETE\",\r\n    headers: authHeader()\r\n  };\r\n\r\n  return fetch(`/users/${id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction handleResponse(response) {\r\n  return response.text().then(text => {\r\n    const data = text && JSON.parse(text);\r\n    if (!response.ok) {\r\n      if (response.status === 401) {\r\n        // auto logout if 401 response returned from api\r\n        logout();\r\n        // location.reload(true);\r\n      }\r\n\r\n      const error = (data && data.message) || response.statusText;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    return data;\r\n  });\r\n}\r\n","import { IPureAction } from \"store/users/types\";\r\nimport { ActionTypes } from \"data/actionTypes\";\r\nimport { userService } from \"_services\";\r\n// import { IUserState } from \"store/_reducers/user.reducer\";\r\nimport { IUser } from \"data/user\";\r\n// import API from \"store/api\";\r\nimport { store } from \"_helpers\";\r\n\r\n// Register\r\nexport const register = async (user: IUser) => {\r\n  store.dispatch(registerRequest());\r\n\r\n  try {\r\n    const response = await userService.register(user);\r\n    return store.dispatch(registerSuccess(response));\r\n  } catch (error) {\r\n    return store.dispatch(registerFailure(error));\r\n  }\r\n};\r\n\r\nexport const registerRequest = (): IPureAction<\r\n  ActionTypes.REGISTER_REQUEST,\r\n  boolean\r\n> => ({\r\n  type: ActionTypes.REGISTER_REQUEST,\r\n  payload: true\r\n});\r\n\r\nexport const registerSuccess = (\r\n  data: IUser\r\n): IPureAction<ActionTypes.REGISTER_SUCCESS, IUser> => ({\r\n  type: ActionTypes.REGISTER_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const registerFailure = (\r\n  error: Error\r\n): IPureAction<ActionTypes.REGISTER_FAILURE, Error> => ({\r\n  type: ActionTypes.REGISTER_FAILURE,\r\n  payload: error\r\n});\r\n\r\n// Login\r\nexport const login = async (data: any, history: any) => {\r\n  store.dispatch(loginRequest(data.username));\r\n\r\n  try {\r\n    const response = await userService.login(data.username, data.password);\r\n    store.dispatch(loginSuccess(response));\r\n    history.push(\"/\");\r\n  } catch (error) {\r\n    return store.dispatch(loginFailure(error));\r\n  }\r\n};\r\n\r\nexport const loginRequest = (\r\n  data: IUser\r\n): IPureAction<ActionTypes.LOGIN_REQUEST, IUser> => ({\r\n  type: ActionTypes.LOGIN_REQUEST,\r\n  payload: data\r\n});\r\n\r\nexport const loginSuccess = (\r\n  data: IUser\r\n): IPureAction<ActionTypes.LOGIN_SUCCESS, IUser> => ({\r\n  type: ActionTypes.LOGIN_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const loginFailure = (\r\n  error: Error\r\n): IPureAction<ActionTypes.LOGIN_FAILURE, Error> => ({\r\n  type: ActionTypes.LOGIN_FAILURE,\r\n  payload: error\r\n});\r\n\r\n// Logout\r\nexport const logout = async () => {\r\n  try {\r\n    userService.logout();\r\n    store.dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    return store.dispatch(logoutFailure(error));\r\n  }\r\n};\r\n\r\nexport const logoutSuccess = (): IPureAction<ActionTypes.LOGOUT, void> => ({\r\n  type: ActionTypes.LOGOUT,\r\n  payload: undefined\r\n});\r\n\r\nexport const logoutFailure = (\r\n  error: Error\r\n): IPureAction<ActionTypes.LOGOUT, Error> => ({\r\n  type: ActionTypes.LOGOUT,\r\n  payload: error\r\n});\r\n\r\n// Get all\r\nexport const getUsers = async () => {\r\n  store.dispatch(getUsersRequest());\r\n\r\n  try {\r\n    const response = await userService.getAll();\r\n    return store.dispatch(getUsersSuccess(response));\r\n  } catch (error) {\r\n    return store.dispatch(getUsersFailure(error));\r\n  }\r\n};\r\n\r\nexport const getUsersRequest = (): IPureAction<\r\n  ActionTypes.GET_USERS_REQUEST,\r\n  any\r\n> => ({\r\n  type: ActionTypes.GET_USERS_REQUEST,\r\n  payload: undefined\r\n});\r\n\r\nexport const getUsersSuccess = (\r\n  data: IUser\r\n): IPureAction<ActionTypes.GET_USERS_SUCCESS, IUser> => ({\r\n  type: ActionTypes.GET_USERS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getUsersFailure = (\r\n  error: Error\r\n): IPureAction<ActionTypes.GET_USERS_FAILURE, Error> => ({\r\n  type: ActionTypes.GET_USERS_FAILURE,\r\n  payload: error\r\n});\r\n\r\n// Edit item\r\nexport const editUser = async (user: IUser) => {\r\n  store.dispatch(editUserRequest(true));\r\n\r\n  try {\r\n    const response = await userService.update(user);\r\n    return store.dispatch(editUserSuccess(user));\r\n  } catch (error) {\r\n    return store.dispatch(editUserFailure(error));\r\n  }\r\n};\r\n\r\nexport const editUserRequest = (\r\n  editing: boolean\r\n): IPureAction<ActionTypes.EDIT_USER_REQUEST, boolean> => ({\r\n  type: ActionTypes.EDIT_USER_REQUEST,\r\n  payload: editing\r\n});\r\n\r\nexport const editUserSuccess = (\r\n  user: IUser\r\n): IPureAction<ActionTypes.EDIT_USER_SUCCESS, IUser> => ({\r\n  type: ActionTypes.EDIT_USER_SUCCESS,\r\n  payload: user\r\n});\r\n\r\nexport const editUserFailure = (\r\n  error: Error\r\n): IPureAction<ActionTypes.EDIT_USER_FAILURE, Error> => ({\r\n  type: ActionTypes.EDIT_USER_FAILURE,\r\n  payload: error\r\n});\r\n\r\n// Remove item\r\nexport const deleteUser = async (id: number) => {\r\n  store.dispatch(deleteUserRequest(id));\r\n\r\n  try {\r\n    userService.delete(id);\r\n    return store.dispatch(deleteUserSuccess(id));\r\n  } catch (error) {\r\n    return store.dispatch(deleteUserFailure(error));\r\n  }\r\n};\r\n\r\nexport const deleteUserRequest = (\r\n  id: number\r\n): IPureAction<ActionTypes.REMOVE_USER_REQUEST, number> => ({\r\n  type: ActionTypes.REMOVE_USER_REQUEST,\r\n  payload: id\r\n});\r\n\r\nexport const deleteUserSuccess = (\r\n  id: number\r\n): IPureAction<ActionTypes.REMOVE_USER_SUCCESS, number> => ({\r\n  type: ActionTypes.REMOVE_USER_SUCCESS,\r\n  payload: id\r\n});\r\n\r\nexport const deleteUserFailure = (\r\n  error: Error\r\n): IPureAction<ActionTypes.REMOVE_USER_FAILURE, Error> => ({\r\n  type: ActionTypes.REMOVE_USER_FAILURE,\r\n  payload: error\r\n});\r\n","import React from \"react\";\r\n\r\n// interface IInputState {\r\n//     type?: string;\r\n//     id?: string;\r\n//     name?: string;\r\n//     className?: string;\r\n//     placeholder?: string;\r\n//     value?: string;\r\n//     onChange?: () => void;\r\n// }\r\n\r\ntype ButtonTheme = (\r\n    'blue' |\r\n    'red' |\r\n    'green'\r\n)\r\n\r\ninterface IProps {\r\n    theme: ButtonTheme;\r\n    ietsCustoms: string;\r\n}\r\n\r\n// type Props = IProps & React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype Props = React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// const Input: React.FC<Props> = ({ theme, ietsCustoms, ...rest }) => {\r\n\r\nconst Input: React.FC<Props> = ({ ...rest }) => {\r\n\r\n    return <input {...rest} />;\r\n}\r\n\r\n// Input.defaultProps = {\r\n//     type: 'text',\r\n//     theme: 'blue'\r\n// }\r\n\r\n// export const Input: React.FunctionComponent<IInputState> = props => {\r\n//     const initialState: IInputState = {\r\n//         type: \"text\",\r\n//         placeholder: \"\",\r\n//     }\r\n\r\n//     return (\r\n//         <input\r\n//             type={props.type ? props.type : initialState.type}\r\n//             id={props.id ? props.id : initialState.id}\r\n//             name={props.name}\r\n//             className={props.className}\r\n//             placeholder={props.placeholder ? props.placeholder : initialState.placeholder}\r\n//             value={props.value}\r\n//             onChange={props.onChange}\r\n//         />\r\n//     )\r\n// }\r\n\r\nexport default Input;","import React, { useEffect, useState, FormEvent } from \"react\";\r\n\r\nimport { login, logout } from \"store/users/actions\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { useFormFields } from \"hooks/useFormFields\";\r\nimport Input from \"components/UI/Input\";\r\n\r\nexport const Login: React.FunctionComponent<RouteComponentProps> = props => {\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    logout();\r\n  }, []);\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    setSubmitted(true);\r\n    if (fields) {\r\n      login(fields, props.history);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-wrapper\">\r\n      <div className=\"login-form\">\r\n        <h1 className=\"login-text\">Supervise</h1>\r\n        <form name=\"form\" className=\"form\" onSubmit={handleSubmit}>\r\n          <div\r\n            className={\r\n              \"form-group\" + (submitted && !fields.username ? \" has-error\" : \"\")\r\n            }\r\n          >\r\n            <Input id=\"username\" name=\"username\" className=\"form-control\" placeholder=\"example@student.nhlstenden.com\" value={fields.username} onChange={handleFieldChange} />\r\n            {submitted && !fields.username && (\r\n              <div className=\"help-block\">Username is required</div>\r\n            )}\r\n          </div>\r\n          <div\r\n            className={\r\n              \"form-group\" + (submitted && !fields.password ? \" has-error\" : \"\")\r\n            }\r\n          >\r\n            <Input type=\"password\" id=\"password\" name=\"password\" className=\"form-control\" placeholder=\"************\" value={fields.password} onChange={handleFieldChange} />\r\n            {submitted && !fields.password && (\r\n              <div className=\"help-block\">Password is required</div>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button className=\"btn btn-primary\">Login</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, FormEvent, useEffect } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n\r\nimport { getUsers, register, editUser, deleteUser } from \"store/users/actions\";\r\nimport { useTypedSelector } from \"store/_reducers\";\r\nimport { IUser, IUserState } from \"data/user\";\r\nimport Input from \"./UI/Input\";\r\n\r\ntype Props = RouteComponentProps<void, {}, IUserState>;\r\n\r\nexport const Admin: React.FC<Props> = () => {\r\n  const users = useTypedSelector(state => state.userReducer.users);\r\n  const [edit, setEdit] = useState(false);\r\n  const initialState = {\r\n    id: 0,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    role: 0\r\n  }\r\n\r\n  const [inputFields, setInputFields] = useState(initialState);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  // Get users for the first time\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!edit) {\r\n      setInputFields(initialState);\r\n    }\r\n  }, [edit]);\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    setSubmitted(true);\r\n    if (inputFields && !edit) {\r\n      register(inputFields);\r\n      setInputFields(initialState);\r\n    } else {\r\n      editUser(inputFields);\r\n    }\r\n  };\r\n\r\n  const handleEditUser = (user: IUser) => {\r\n    setEdit(true);\r\n    setInputFields(user);\r\n  };\r\n\r\n  const handleRemoveUser = (id: number) => {\r\n    deleteUser(id);\r\n  };\r\n\r\n  return (\r\n    <section className=\"admin-page\">\r\n      <form name=\"form\" className=\"register-form\" onSubmit={handleSubmit}>\r\n        <h2>New user</h2>\r\n        <div\r\n          className={\r\n            \"form-group\" + (submitted && !inputFields.firstName ? \" has-error\" : \"\")\r\n          }\r\n        >\r\n          <label htmlFor=\"firstName\">First Name</label>\r\n          <Input\r\n            id=\"firstName\"\r\n            name=\"firstName\"\r\n            className=\"form-control\"\r\n            value={inputFields.firstName}\r\n            onChange={({ target }) =>\r\n              setInputFields({ ...inputFields, firstName: target.value })\r\n            }\r\n          />\r\n          {submitted && !inputFields.firstName && (\r\n            <div className=\"help-block\">First Name is required</div>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={\r\n            \"form-group\" + (submitted && !inputFields.lastName ? \" has-error\" : \"\")\r\n          }\r\n        >\r\n          <label htmlFor=\"lastName\">Last Name</label>\r\n          <Input\r\n            id=\"lastName\"\r\n            name=\"lastName\"\r\n            className=\"form-control\"\r\n            value={inputFields.lastName}\r\n            onChange={({ target }) =>\r\n              setInputFields({ ...inputFields, lastName: target.value })\r\n            }\r\n          />\r\n          {submitted && !inputFields.lastName && (\r\n            <div className=\"help-block\">Last Name is required</div>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={\r\n            \"form-group\" + (submitted && !inputFields.username ? \" has-error\" : \"\")\r\n          }\r\n        >\r\n          <label htmlFor=\"username\">Username</label>\r\n          <Input\r\n            id=\"username\"\r\n            name=\"username\"\r\n            className=\"form-control\"\r\n            value={inputFields.username}\r\n            onChange={({ target }) =>\r\n              setInputFields({ ...inputFields, username: target.value })\r\n            }\r\n          />\r\n          {submitted && !inputFields.username && (\r\n            <div className=\"help-block\">Username is required</div>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={\r\n            \"form-group\" + (submitted && !inputFields.password ? \" has-error\" : \"\")\r\n          }\r\n        >\r\n          <label htmlFor=\"password\">Password</label>\r\n          <Input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            className=\"form-control\"\r\n            value={inputFields.password}\r\n            onChange={({ target }) =>\r\n              setInputFields({ ...inputFields, password: target.value })\r\n            }\r\n          />\r\n          {submitted && !inputFields.password && (\r\n            <div className=\"help-block\">Password is required</div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"role\">Role</label>\r\n          <select\r\n            id=\"role\"\r\n            value={inputFields.role}\r\n            onChange={({ target }) =>\r\n              setInputFields({ ...inputFields, role: +target.value })\r\n            }\r\n          >\r\n            <option value=\"0\">User</option>\r\n            <option value=\"1\">Admin</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button className=\"btn btn-primary\">\r\n            {edit ? \"Edit\" : \"Add new\"} {inputFields.role == 0 ? \"User\" : \"Admin\"}\r\n          </button>\r\n          {edit && <button onClick={() => setEdit(false)}>Cancel</button>}\r\n        </div>\r\n      </form>\r\n      <h3>All registered users:</h3>\r\n      {users && (\r\n        <ul>\r\n          {users.map((user: IUser) => (\r\n            <li key={user.id}>\r\n              <a onClick={() => handleEditUser(user)}>\r\n                {user.firstName + \" \" + user.lastName + \" | role: \" + user.role}\r\n              </a>\r\n              <span>\r\n                {\" \"}\r\n                - <a onClick={() => handleRemoveUser(user.id)}>Delete</a>\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IEntry } from \"data/entry\";\r\n\r\ninterface IextendIEntry extends IEntry {\r\n  searchTerm: string;\r\n}\r\n\r\nexport const Entry: React.FunctionComponent<IextendIEntry> = props => {\r\n  return (\r\n    <Link\r\n      className=\"entry-wrapper\"\r\n      to={{\r\n        pathname: `/entries/${props.id}`,\r\n        state: {\r\n          id: props.id,\r\n          title: props.title,\r\n          body: props.body,\r\n          date: props.date,\r\n          userId: props.userId\r\n        }\r\n      }}\r\n    >\r\n      <div className=\"date\">{props.date}</div>\r\n      <div className=\"entry\">\r\n        <div className=\"entry-header\">\r\n          <div className=\"title\">{props.title}</div>\r\n          <div className=\"comments\"></div>\r\n        </div>\r\n        <div className=\"body\" dangerouslySetInnerHTML={{ __html: props.body }}></div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Entry;\r\n","import React, { useEffect } from \"react\";\r\nimport { IEntry } from \"data/entry\";\r\nimport { useFormFields } from \"hooks/useFormFields\";\r\nimport Input from \"components/UI/Input\";\r\nimport { editEntry } from \"store/entries/actions\";\r\nimport { useTypedDispatch } from \"hooks/useTypedDispatch\";\r\n\r\ninterface IextendIEntry extends IEntry {\r\n  searchTerm: string;\r\n}\r\n\r\nexport const Entry: React.FunctionComponent<IextendIEntry> = props => {\r\n  const dispatch = useTypedDispatch();\r\n  const { id, title, body, date, userId } = props\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    id,\r\n    title,\r\n    body,\r\n    date,\r\n    userId\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(editEntry(fields))\r\n  }, [fields.title, props.title])\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        <li>\r\n          <Input id=\"title\" placeholder=\"Titel...\" value={fields.title} onChange={handleFieldChange} />\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Entry;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { useTypedSelector } from \"store/_reducers\";\r\n\r\nimport Entry from \"./Entry/Entry\";\r\nimport EntryTest from \"./Entry/EntryTest\";\r\nimport Input from \"components/UI/Input\"\r\nimport { routes } from \"data/routes\";\r\nimport { useFormFields } from \"hooks/useFormFields\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\n\r\nexport const Entries: React.FunctionComponent<RouteComponentProps> = props => {\r\n  const entries = useTypedSelector(state => state.entryReducer.entries);\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    searchTerm: \"\"\r\n  })\r\n  const [searchResults, setSearchResults] = useState(entries);\r\n\r\n  // Find object in array by value\r\n  useEffect(() => {\r\n    const results = entries.filter((obj: any) => {\r\n      return Object.keys(obj).some((key) => {\r\n        if (obj[key] !== null) {\r\n          const tempKey = obj[key].toString().toLowerCase();\r\n          const tempSearch = fields.searchTerm.toLowerCase();\r\n          return tempKey.includes(tempSearch);\r\n        }\r\n      })\r\n    })\r\n    setSearchResults(results)\r\n  }, [fields.searchTerm])\r\n\r\n  // Update searchResults if entries has been updated, couse we are mapping the searchResults\r\n  useEffect(() => {\r\n    setSearchResults(entries)\r\n  }, [entries])\r\n\r\n  const toEntry = () => {\r\n    props.history.push(routes.AddEntry);\r\n  };\r\n\r\n  return (\r\n    <section className=\"entries-page\">\r\n      <div className=\"entries\">\r\n        {/* Header */}\r\n        <div className=\"header\">\r\n          <div className=\"left\">\r\n            <h1>Entries</h1>\r\n            <button onClick={toEntry}>add new</button>\r\n          </div>\r\n          <div className=\"right\">\r\n            <Input placeholder=\"Search...\" id=\"searchTerm\" value={fields.searchTerm} onChange={handleFieldChange} />\r\n          </div>\r\n        </div>\r\n        {/* Entries */}\r\n        <ReactSortable className=\"sortable\" list={searchResults} setList={setSearchResults}>\r\n          {searchResults.map(entry => (\r\n            <Entry\r\n              key={entry.id}\r\n              id={entry.id}\r\n              title={entry.title}\r\n              body={entry.body}\r\n              date={entry.date}\r\n              categoryId={entry.categoryId}\r\n              userId={entry.id}\r\n              searchTerm={fields.searchTerm}\r\n            />\r\n          ))}\r\n        </ReactSortable>\r\n      </div>\r\n      <div className=\"entries-test\">\r\n        {searchResults.map(entry => (\r\n          <EntryTest\r\n            key={entry.id}\r\n            id={entry.id}\r\n            title={entry.title}\r\n            body={entry.body}\r\n            date={entry.date}\r\n            categoryId={entry.categoryId}\r\n            userId={entry.id}\r\n            searchTerm={fields.searchTerm}\r\n          />\r\n        ))}\r\n        {/* {searchResults.map(entry => (\r\n          <EntryTest\r\n            key={entry.id}\r\n            id={entry.id}\r\n            title={entry.title}\r\n            body={entry.body}\r\n            date={entry.date}\r\n            userId={entry.id}\r\n            searchTerm={fields.searchTerm}\r\n          />\r\n        ))} */}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Entries;\r\n","import SunEditor from \"suneditor-react\";\r\nimport \"suneditor/dist/css/suneditor.min.css\"; // Import Sun Editor's CSS File\r\n\r\nconst options = {\r\n  //   mode: \"balloon\",\r\n  mode: \"classic\",\r\n  fontSize: [8, 10, 14, 18, 24, 36],\r\n  formats: [\"p\", \"blockquote\", \"h1\", \"h2\", \"h3\"],\r\n  colorList: [\r\n    [\"#ff0000\", \"#ff5e00\", \"#ffe400\", \"#abf200\"],\r\n    [\"#00d8ff\", \"#0055ff\", \"#6600ff\", \"#ff00dd\"]\r\n  ],\r\n  buttonList: [\r\n    [\r\n      \"formatBlock\",\r\n      \"fontSize\",\r\n      \"bold\",\r\n      \"underline\",\r\n      \"fontColor\",\r\n      \"hiliteColor\",\r\n      \"outdent\",\r\n      \"indent\",\r\n      \"align\",\r\n      \"horizontalRule\",\r\n      \"list\",\r\n      \"table\",\r\n      \"link\",\r\n      \"image\",\r\n      \"video\",\r\n\r\n      \"codeView\",\r\n      \"fullScreen\",\r\n      \"showBlocks\",\r\n      \"print\"\r\n    ]\r\n  ],\r\n  resizingBar: false\r\n};\r\n\r\nexport { SunEditor, options };\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { routes } from \"data/routes\";\r\n\r\nimport { editEntry } from \"store/entries/actions\";\r\nimport { removeEntry } from \"store/entries/actions\";\r\nimport { IEntry } from \"data/entry\";\r\nimport { useFormFields } from \"hooks/useFormFields\";\r\nimport Input from \"components/UI/Input\";\r\nimport { SunEditor, options } from \"components/UI/Editor\"\r\nimport { useTypedDispatch } from \"hooks/useTypedDispatch\";\r\n\r\nexport const EditEntry: React.FunctionComponent<RouteComponentProps<\r\n  void,\r\n  {},\r\n  IEntry\r\n>> = props => {\r\n\r\n  const dispatch = useTypedDispatch();\r\n  const { id, title, body, date, userId } = props.location.state\r\n  const [editorBody, setEditorBody] = useState(body)\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    id,\r\n    title,\r\n    body,\r\n    date: new Date().toJSON().slice(0, 10).replace(/-/g, '/'),\r\n    userId\r\n  });\r\n  // const [saving, setSaving] = useState(false)\r\n\r\n  const deleteEntry = () => {\r\n    dispatch(removeEntry(props.location.state.id));\r\n    props.history.push(routes.Entries);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timer = setTimeout(() => dispatch(editEntry({ ...fields, body: editorBody })), 1000);\r\n    return () => {\r\n      clearTimeout(timer)\r\n    }\r\n  }, [editorBody, fields.title])\r\n\r\n  const handleChange = (text: string) => {\r\n    setEditorBody(text)\r\n  }\r\n\r\n  return (\r\n    <section className=\"edit-entry\">\r\n      <form className=\"entry-editor\">\r\n        <div className=\"entry-form\">\r\n          <div className=\"title-input\">\r\n            <Input id=\"title\" placeholder=\"Titel...\" value={fields.title} onChange={handleFieldChange} />\r\n          </div>\r\n          <div className=\"body-input\">\r\n            <SunEditor\r\n              setContents={body}\r\n              setOptions={options}\r\n              onChange={(text: string) => handleChange(text)}\r\n            />\r\n          </div>\r\n          <button\r\n            className=\"option\"\r\n            type=\"reset\"\r\n            value=\"Reset\"\r\n            onClick={deleteEntry}\r\n          >\r\n            Verwijderen\r\n            </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EditEntry;\r\n","import React, { FormEvent, useState } from \"react\";\r\nimport { routes } from \"data/routes\";\r\n\r\nimport { addEntry } from \"store/entries/actions\";\r\nimport { useFormFields } from \"hooks/useFormFields\"\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport Input from \"components/UI/Input\";\r\nimport { SunEditor, options } from \"components/UI/Editor\"\r\nimport { useTypedDispatch } from \"hooks/useTypedDispatch\";\r\n\r\nexport const AddEntry: React.FunctionComponent<RouteComponentProps> = props => {\r\n  const dispatch = useTypedDispatch();\r\n\r\n  const [editorBody, setEditorBody] = useState(\"\")\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    id: Math.floor(Math.random() * 10000),\r\n    title: \"\",\r\n    body: \"\",\r\n    date: new Date().toJSON().slice(0, 10).replace(/-/g, '/'),\r\n    userId: 13\r\n  });\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(addEntry({ ...fields, body: editorBody }));\r\n    props.history.push(routes.Entries);\r\n  };\r\n\r\n  const handleChange = (text: string) => {\r\n    setEditorBody(text)\r\n  }\r\n\r\n  return (\r\n    <section className=\"edit-entry\">\r\n      <form className=\"entry-editor\" onSubmit={handleSubmit}>\r\n        <div className=\"entry-form\">\r\n          <div className=\"title-input\">\r\n            <Input id=\"title\" placeholder=\"Titel...\" value={fields.title} onChange={handleFieldChange} />\r\n          </div>\r\n          <div className=\"body-input\">\r\n            <SunEditor\r\n              setContents={fields.body}\r\n              setOptions={options}\r\n              onChange={(text: string) => handleChange(text)}\r\n            />\r\n          </div>\r\n          <input className=\"option\" type=\"submit\" value=\"Plaatsen\" />\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddEntry;\r\n","import React, { useState, useEffect, useCallback, MouseEvent } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n\r\nimport { useTypedSelector } from \"store/_reducers\";\r\n\r\nexport const Settings: React.FunctionComponent<RouteComponentProps> = props => {\r\n\r\n  // const clickHandler = useCallback(() => {\r\n  //   console.log(\"ello\", theme)\r\n  // }, [theme]);\r\n\r\n  // const handleClick = useCallback((e) => {\r\n  //   console.log(\"ello\")\r\n  //   // toggleTheme\r\n  // }, [toggleTheme])\r\n\r\n  // const clickHandler = (e: MouseEvent) => {\r\n  //   toggleTheme\r\n  //   let i = undefined\r\n  //   i = toggleTheme\r\n  //   console.log(i)\r\n  // }\r\n\r\n  return (\r\n    <section className=\"settings-page\">\r\n      Hallo wereld - Settings\r\n      {/* <button onClick={clickHandler}>Toggle theme</button> */}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { useTypedSelector } from \"store/_reducers\";\r\n\r\nexport const Profile: React.FunctionComponent<RouteComponentProps> = () => {\r\n  const profile = useTypedSelector(state => state.authenticationReducer.user);\r\n  const { username, firstName, lastName } = profile;\r\n\r\n  return (\r\n    <section className=\"profile-page\">\r\n      <div>{username}</div>\r\n      <div>{firstName}</div>\r\n      <div>{lastName}</div>\r\n      <div>password</div>\r\n      <div>repeat password</div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Switch } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { store } from \"_helpers\";\r\nimport { routes } from \"data/routes\";\r\nimport { fetchEntriesRequest } from \"store/entries/actions\";\r\n\r\nimport \"assets/css/index.scss\";\r\nimport LoginLayout from \"layouts/LoginLayout\"\r\nimport MainLayout from \"layouts/MainLayout\"\r\nimport { AppRoute } from \"components/UI/AppRoute\"\r\n\r\nimport { PrivateRoute } from \"components/UI/PrivateRoute\";\r\n\r\nimport Activities from \"components/Activities\";\r\nimport Login from \"components/Login\";\r\nimport Admin from \"components/Admin\";\r\nimport Entries from \"components/Entries\";\r\nimport EditEntry from \"components/Entry/EditEntry\";\r\nimport AddEntry from \"components/Entry/AddEntry\";\r\nimport Settings from \"components/Settings\";\r\nimport Profile from \"components/Profile\";\r\n\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\n// setup fake backend\r\nimport { configureFakeBackend } from \"./_helpers/fake-backend\";\r\nconfigureFakeBackend();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <AppRoute exact path={routes.Home} component={Activities} layout={MainLayout} />\r\n        <AppRoute exact path={routes.Admin} component={Admin} layout={MainLayout} />\r\n        <PrivateRoute exact path={routes.Entries} component={Entries} layout={MainLayout} />\r\n        <PrivateRoute exact path={routes.AddEntry} component={AddEntry} layout={MainLayout} />\r\n        <PrivateRoute exact path={routes.EditEntry} component={EditEntry} layout={MainLayout} />\r\n        <PrivateRoute exact path={routes.Settings} component={Settings} layout={MainLayout} />\r\n        <PrivateRoute exact path={routes.Profile} component={Profile} layout={MainLayout} />\r\n        <AppRoute exact path={routes.Login} component={Login} layout={LoginLayout} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nfetchEntriesRequest();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}